import {
  Arc,
  Group,
  HTMLElement,
  Html,
  Image,
  Label,
  Layer,
  Line,
  LineElement,
  Path,
  Portal,
  Rect,
  Stage,
  Tag,
  Text,
  TextElement,
  Transformer,
  applyFilter,
  require_use_image,
  trySetCanvasSize,
  useColor,
  useDelayer,
  useSnap
} from "./chunk-BJUN4MKY.js";
import {
  isTouchDevice,
  observer,
  useLocalObservable
} from "./chunk-EWQZPDGL.js";
import {
  forEveryChild,
  pxToUnitRounded,
  pxToUnitString,
  subTypeToPathDataFunc
} from "./chunk-PJEQXQTP.js";
import {
  ___,
  fixSize,
  flags,
  getClientRect,
  getTotalClientRect,
  incrementLoader,
  isCreditVisible,
  isGradient,
  replaceColors,
  require_lib,
  svgToURL,
  triggerLoadError,
  urlToString,
  useFadeIn
} from "./chunk-UKEGL2ZK.js";
import {
  action,
  autorun,
  runInAction
} from "./chunk-SXFTTVCS.js";
import {
  require_react
} from "./chunk-RA4EGHW6.js";
import {
  __commonJS,
  __toESM
} from "./chunk-2LSFTFF7.js";

// node_modules/js-binary-schema-parser/lib/index.js
var require_lib2 = __commonJS({
  "node_modules/js-binary-schema-parser/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.loop = exports.conditional = exports.parse = void 0;
    var parse = function parse2(stream, schema) {
      var result = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var parent = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : result;
      if (Array.isArray(schema)) {
        schema.forEach(function(partSchema) {
          return parse2(stream, partSchema, result, parent);
        });
      } else if (typeof schema === "function") {
        schema(stream, result, parent, parse2);
      } else {
        var key = Object.keys(schema)[0];
        if (Array.isArray(schema[key])) {
          parent[key] = {};
          parse2(stream, schema[key], result, parent[key]);
        } else {
          parent[key] = schema[key](stream, result, parent, parse2);
        }
      }
      return result;
    };
    exports.parse = parse;
    var conditional = function conditional2(schema, conditionFunc) {
      return function(stream, result, parent, parse2) {
        if (conditionFunc(stream, result, parent)) {
          parse2(stream, schema, result, parent);
        }
      };
    };
    exports.conditional = conditional;
    var loop = function loop2(schema, continueFunc) {
      return function(stream, result, parent, parse2) {
        var arr = [];
        var lastStreamPos = stream.pos;
        while (continueFunc(stream, result, parent)) {
          var newParent = {};
          parse2(stream, schema, result, newParent);
          if (stream.pos === lastStreamPos) {
            break;
          }
          lastStreamPos = stream.pos;
          arr.push(newParent);
        }
        return arr;
      };
    };
    exports.loop = loop;
  }
});

// node_modules/js-binary-schema-parser/lib/parsers/uint8.js
var require_uint8 = __commonJS({
  "node_modules/js-binary-schema-parser/lib/parsers/uint8.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.readBits = exports.readArray = exports.readUnsigned = exports.readString = exports.peekBytes = exports.readBytes = exports.peekByte = exports.readByte = exports.buildStream = void 0;
    var buildStream = function buildStream2(uint8Data) {
      return {
        data: uint8Data,
        pos: 0
      };
    };
    exports.buildStream = buildStream;
    var readByte = function readByte2() {
      return function(stream) {
        return stream.data[stream.pos++];
      };
    };
    exports.readByte = readByte;
    var peekByte = function peekByte2() {
      var offset = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
      return function(stream) {
        return stream.data[stream.pos + offset];
      };
    };
    exports.peekByte = peekByte;
    var readBytes = function readBytes2(length) {
      return function(stream) {
        return stream.data.subarray(stream.pos, stream.pos += length);
      };
    };
    exports.readBytes = readBytes;
    var peekBytes = function peekBytes2(length) {
      return function(stream) {
        return stream.data.subarray(stream.pos, stream.pos + length);
      };
    };
    exports.peekBytes = peekBytes;
    var readString = function readString2(length) {
      return function(stream) {
        return Array.from(readBytes(length)(stream)).map(function(value) {
          return String.fromCharCode(value);
        }).join("");
      };
    };
    exports.readString = readString;
    var readUnsigned = function readUnsigned2(littleEndian) {
      return function(stream) {
        var bytes = readBytes(2)(stream);
        return littleEndian ? (bytes[1] << 8) + bytes[0] : (bytes[0] << 8) + bytes[1];
      };
    };
    exports.readUnsigned = readUnsigned;
    var readArray = function readArray2(byteSize, totalOrFunc) {
      return function(stream, result, parent) {
        var total = typeof totalOrFunc === "function" ? totalOrFunc(stream, result, parent) : totalOrFunc;
        var parser = readBytes(byteSize);
        var arr = new Array(total);
        for (var i = 0; i < total; i++) {
          arr[i] = parser(stream);
        }
        return arr;
      };
    };
    exports.readArray = readArray;
    var subBitsTotal = function subBitsTotal2(bits, startIndex, length) {
      var result = 0;
      for (var i = 0; i < length; i++) {
        result += bits[startIndex + i] && Math.pow(2, length - i - 1);
      }
      return result;
    };
    var readBits = function readBits2(schema) {
      return function(stream) {
        var _byte = readByte()(stream);
        var bits = new Array(8);
        for (var i = 0; i < 8; i++) {
          bits[7 - i] = !!(_byte & 1 << i);
        }
        return Object.keys(schema).reduce(function(res, key) {
          var def = schema[key];
          if (def.length) {
            res[key] = subBitsTotal(bits, def.index, def.length);
          } else {
            res[key] = bits[def.index];
          }
          return res;
        }, {});
      };
    };
    exports.readBits = readBits;
  }
});

// node_modules/js-binary-schema-parser/lib/schemas/gif.js
var require_gif = __commonJS({
  "node_modules/js-binary-schema-parser/lib/schemas/gif.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _2 = require_lib2();
    var _uint = require_uint8();
    var subBlocksSchema = {
      blocks: function blocks(stream) {
        var terminator = 0;
        var chunks = [];
        var streamSize = stream.data.length;
        var total = 0;
        for (var size = (0, _uint.readByte)()(stream); size !== terminator; size = (0, _uint.readByte)()(stream)) {
          if (!size)
            break;
          if (stream.pos + size >= streamSize) {
            var availableSize = streamSize - stream.pos;
            chunks.push((0, _uint.readBytes)(availableSize)(stream));
            total += availableSize;
            break;
          }
          chunks.push((0, _uint.readBytes)(size)(stream));
          total += size;
        }
        var result = new Uint8Array(total);
        var offset = 0;
        for (var i = 0; i < chunks.length; i++) {
          result.set(chunks[i], offset);
          offset += chunks[i].length;
        }
        return result;
      }
    };
    var gceSchema = (0, _2.conditional)({
      gce: [{
        codes: (0, _uint.readBytes)(2)
      }, {
        byteSize: (0, _uint.readByte)()
      }, {
        extras: (0, _uint.readBits)({
          future: {
            index: 0,
            length: 3
          },
          disposal: {
            index: 3,
            length: 3
          },
          userInput: {
            index: 6
          },
          transparentColorGiven: {
            index: 7
          }
        })
      }, {
        delay: (0, _uint.readUnsigned)(true)
      }, {
        transparentColorIndex: (0, _uint.readByte)()
      }, {
        terminator: (0, _uint.readByte)()
      }]
    }, function(stream) {
      var codes = (0, _uint.peekBytes)(2)(stream);
      return codes[0] === 33 && codes[1] === 249;
    });
    var imageSchema = (0, _2.conditional)({
      image: [{
        code: (0, _uint.readByte)()
      }, {
        descriptor: [{
          left: (0, _uint.readUnsigned)(true)
        }, {
          top: (0, _uint.readUnsigned)(true)
        }, {
          width: (0, _uint.readUnsigned)(true)
        }, {
          height: (0, _uint.readUnsigned)(true)
        }, {
          lct: (0, _uint.readBits)({
            exists: {
              index: 0
            },
            interlaced: {
              index: 1
            },
            sort: {
              index: 2
            },
            future: {
              index: 3,
              length: 2
            },
            size: {
              index: 5,
              length: 3
            }
          })
        }]
      }, (0, _2.conditional)({
        lct: (0, _uint.readArray)(3, function(stream, result, parent) {
          return Math.pow(2, parent.descriptor.lct.size + 1);
        })
      }, function(stream, result, parent) {
        return parent.descriptor.lct.exists;
      }), {
        data: [{
          minCodeSize: (0, _uint.readByte)()
        }, subBlocksSchema]
      }]
    }, function(stream) {
      return (0, _uint.peekByte)()(stream) === 44;
    });
    var textSchema = (0, _2.conditional)({
      text: [{
        codes: (0, _uint.readBytes)(2)
      }, {
        blockSize: (0, _uint.readByte)()
      }, {
        preData: function preData(stream, result, parent) {
          return (0, _uint.readBytes)(parent.text.blockSize)(stream);
        }
      }, subBlocksSchema]
    }, function(stream) {
      var codes = (0, _uint.peekBytes)(2)(stream);
      return codes[0] === 33 && codes[1] === 1;
    });
    var applicationSchema = (0, _2.conditional)({
      application: [{
        codes: (0, _uint.readBytes)(2)
      }, {
        blockSize: (0, _uint.readByte)()
      }, {
        id: function id(stream, result, parent) {
          return (0, _uint.readString)(parent.blockSize)(stream);
        }
      }, subBlocksSchema]
    }, function(stream) {
      var codes = (0, _uint.peekBytes)(2)(stream);
      return codes[0] === 33 && codes[1] === 255;
    });
    var commentSchema = (0, _2.conditional)({
      comment: [{
        codes: (0, _uint.readBytes)(2)
      }, subBlocksSchema]
    }, function(stream) {
      var codes = (0, _uint.peekBytes)(2)(stream);
      return codes[0] === 33 && codes[1] === 254;
    });
    var schema = [
      {
        header: [{
          signature: (0, _uint.readString)(3)
        }, {
          version: (0, _uint.readString)(3)
        }]
      },
      {
        lsd: [{
          width: (0, _uint.readUnsigned)(true)
        }, {
          height: (0, _uint.readUnsigned)(true)
        }, {
          gct: (0, _uint.readBits)({
            exists: {
              index: 0
            },
            resolution: {
              index: 1,
              length: 3
            },
            sort: {
              index: 4
            },
            size: {
              index: 5,
              length: 3
            }
          })
        }, {
          backgroundColorIndex: (0, _uint.readByte)()
        }, {
          pixelAspectRatio: (0, _uint.readByte)()
        }]
      },
      (0, _2.conditional)({
        gct: (0, _uint.readArray)(3, function(stream, result) {
          return Math.pow(2, result.lsd.gct.size + 1);
        })
      }, function(stream, result) {
        return result.lsd.gct.exists;
      }),
      // content frames
      {
        frames: (0, _2.loop)([gceSchema, applicationSchema, commentSchema, imageSchema, textSchema], function(stream) {
          var nextCode = (0, _uint.peekByte)()(stream);
          return nextCode === 33 || nextCode === 44;
        })
      }
    ];
    var _default = schema;
    exports["default"] = _default;
  }
});

// node_modules/gifuct-js/lib/deinterlace.js
var require_deinterlace = __commonJS({
  "node_modules/gifuct-js/lib/deinterlace.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.deinterlace = void 0;
    var deinterlace = function deinterlace2(pixels, width) {
      var newPixels = new Array(pixels.length);
      var rows = pixels.length / width;
      var cpRow = function cpRow2(toRow2, fromRow2) {
        var fromPixels = pixels.slice(fromRow2 * width, (fromRow2 + 1) * width);
        newPixels.splice.apply(newPixels, [toRow2 * width, width].concat(fromPixels));
      };
      var offsets = [0, 4, 2, 1];
      var steps = [8, 8, 4, 2];
      var fromRow = 0;
      for (var pass = 0; pass < 4; pass++) {
        for (var toRow = offsets[pass]; toRow < rows; toRow += steps[pass]) {
          cpRow(toRow, fromRow);
          fromRow++;
        }
      }
      return newPixels;
    };
    exports.deinterlace = deinterlace;
  }
});

// node_modules/gifuct-js/lib/lzw.js
var require_lzw = __commonJS({
  "node_modules/gifuct-js/lib/lzw.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.lzw = void 0;
    var lzw = function lzw2(minCodeSize, data, pixelCount) {
      var MAX_STACK_SIZE = 4096;
      var nullCode = -1;
      var npix = pixelCount;
      var available, clear, code_mask, code_size, end_of_information, in_code, old_code, bits, code, i, datum, data_size, first, top, bi, pi;
      var dstPixels = new Array(pixelCount);
      var prefix = new Array(MAX_STACK_SIZE);
      var suffix = new Array(MAX_STACK_SIZE);
      var pixelStack = new Array(MAX_STACK_SIZE + 1);
      data_size = minCodeSize;
      clear = 1 << data_size;
      end_of_information = clear + 1;
      available = clear + 2;
      old_code = nullCode;
      code_size = data_size + 1;
      code_mask = (1 << code_size) - 1;
      for (code = 0; code < clear; code++) {
        prefix[code] = 0;
        suffix[code] = code;
      }
      var datum, bits, count, first, top, pi, bi;
      datum = bits = count = first = top = pi = bi = 0;
      for (i = 0; i < npix; ) {
        if (top === 0) {
          if (bits < code_size) {
            datum += data[bi] << bits;
            bits += 8;
            bi++;
            continue;
          }
          code = datum & code_mask;
          datum >>= code_size;
          bits -= code_size;
          if (code > available || code == end_of_information) {
            break;
          }
          if (code == clear) {
            code_size = data_size + 1;
            code_mask = (1 << code_size) - 1;
            available = clear + 2;
            old_code = nullCode;
            continue;
          }
          if (old_code == nullCode) {
            pixelStack[top++] = suffix[code];
            old_code = code;
            first = code;
            continue;
          }
          in_code = code;
          if (code == available) {
            pixelStack[top++] = first;
            code = old_code;
          }
          while (code > clear) {
            pixelStack[top++] = suffix[code];
            code = prefix[code];
          }
          first = suffix[code] & 255;
          pixelStack[top++] = first;
          if (available < MAX_STACK_SIZE) {
            prefix[available] = old_code;
            suffix[available] = first;
            available++;
            if ((available & code_mask) === 0 && available < MAX_STACK_SIZE) {
              code_size++;
              code_mask += available;
            }
          }
          old_code = in_code;
        }
        top--;
        dstPixels[pi++] = pixelStack[top];
        i++;
      }
      for (i = pi; i < npix; i++) {
        dstPixels[i] = 0;
      }
      return dstPixels;
    };
    exports.lzw = lzw;
  }
});

// node_modules/gifuct-js/lib/index.js
var require_lib3 = __commonJS({
  "node_modules/gifuct-js/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.decompressFrames = exports.decompressFrame = exports.parseGIF = void 0;
    var _gif = _interopRequireDefault(require_gif());
    var _jsBinarySchemaParser = require_lib2();
    var _uint = require_uint8();
    var _deinterlace = require_deinterlace();
    var _lzw = require_lzw();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var parseGIF = function parseGIF2(arrayBuffer) {
      var byteData = new Uint8Array(arrayBuffer);
      return (0, _jsBinarySchemaParser.parse)((0, _uint.buildStream)(byteData), _gif["default"]);
    };
    exports.parseGIF = parseGIF;
    var generatePatch = function generatePatch2(image) {
      var totalPixels = image.pixels.length;
      var patchData = new Uint8ClampedArray(totalPixels * 4);
      for (var i = 0; i < totalPixels; i++) {
        var pos = i * 4;
        var colorIndex = image.pixels[i];
        var color = image.colorTable[colorIndex] || [0, 0, 0];
        patchData[pos] = color[0];
        patchData[pos + 1] = color[1];
        patchData[pos + 2] = color[2];
        patchData[pos + 3] = colorIndex !== image.transparentIndex ? 255 : 0;
      }
      return patchData;
    };
    var decompressFrame = function decompressFrame2(frame, gct, buildImagePatch) {
      if (!frame.image) {
        console.warn("gif frame does not have associated image.");
        return;
      }
      var image = frame.image;
      var totalPixels = image.descriptor.width * image.descriptor.height;
      var pixels = (0, _lzw.lzw)(image.data.minCodeSize, image.data.blocks, totalPixels);
      if (image.descriptor.lct.interlaced) {
        pixels = (0, _deinterlace.deinterlace)(pixels, image.descriptor.width);
      }
      var resultImage = {
        pixels,
        dims: {
          top: frame.image.descriptor.top,
          left: frame.image.descriptor.left,
          width: frame.image.descriptor.width,
          height: frame.image.descriptor.height
        }
      };
      if (image.descriptor.lct && image.descriptor.lct.exists) {
        resultImage.colorTable = image.lct;
      } else {
        resultImage.colorTable = gct;
      }
      if (frame.gce) {
        resultImage.delay = (frame.gce.delay || 10) * 10;
        resultImage.disposalType = frame.gce.extras.disposal;
        if (frame.gce.extras.transparentColorGiven) {
          resultImage.transparentIndex = frame.gce.transparentColorIndex;
        }
      }
      if (buildImagePatch) {
        resultImage.patch = generatePatch(resultImage);
      }
      return resultImage;
    };
    exports.decompressFrame = decompressFrame;
    var decompressFrames = function decompressFrames2(parsedGif, buildImagePatches) {
      return parsedGif.frames.filter(function(f2) {
        return f2.image;
      }).map(function(f2) {
        return decompressFrame(f2, parsedGif.gct, buildImagePatches);
      });
    };
    exports.decompressFrames = decompressFrames;
  }
});

// node_modules/polotno/canvas/image-element.js
var import_react = __toESM(require_react(), 1);
var import_use_image = __toESM(require_use_image(), 1);
var import_konva = __toESM(require_lib(), 1);
function v() {
  return document.createElement("canvas");
}
var b = (t4) => t4.indexOf("data:image/svg+xml") >= 0 || t4.indexOf(".svg") >= 0;
var useSizeFixer = (e6) => {
  const [r2, a] = import_react.default.useState(e6);
  return import_react.default.useEffect(() => {
    (async () => {
      const t4 = await async function(t5) {
        if (!b(t5)) {
          return t5;
        }
        const e7 = await urlToString(t5), r3 = fixSize(e7);
        return svgToURL(r3);
      }(e6);
      t4 !== r2 && a(t4);
    })();
  }, [e6]), r2;
};
function E(t4, e6) {
  return { x: (t4.x + e6.x) / 2, y: (t4.y + e6.y) / 2 };
}
var S = { boundBoxFunc: (t4, e6) => e6.width < 5 || e6.height < 5 ? t4 : e6, enabledAnchors: ["top-left", "top-right", "bottom-left", "bottom-right"], keepRatio: false, rotateEnabled: false, anchorFill: "rgb(240, 240, 240)", anchorStrokeWidth: 2, borderStrokeWidth: 2 };
var setInnerImageCropTransformerStyle = (t4) => {
  Object.assign(S, t4);
};
var R = { boundBoxFunc: (t4, e6) => e6.width < 5 || e6.height < 5 ? t4 : e6, anchorSize: 20, enabledAnchors: ["top-left", "top-right", "bottom-left", "bottom-right"], rotateEnabled: false, borderEnabled: false, anchorCornerRadius: 10, anchorStrokeWidth: 2, borderStrokeWidth: 2 };
var setOuterImageCropTransformerStyle = (t4) => {
  Object.assign(R, t4);
};
var C = (t4, e6, r2) => Math.max(e6, Math.min(r2, t4));
var useCornerRadiusAndCrop = (e6, r2, a, o2, i = 0, n = false, h3 = true) => {
  const c3 = Math.floor(C(e6.a.width * o2, 1, 1e4)), d3 = Math.floor(C(e6.a.height * o2, 1, 1e4)), g2 = Math.min(i * o2, c3 / 2, d3 / 2), l = Math.max(e6.a.width / a.width, e6.a.height / a.height) * o2, u2 = e6.page._exportingOrRendering && flags.imageDownScalingEnabled && l < 1 && !n, m = 0 === a.x && 0 === a.y && a.width === (null == r2 ? void 0 : r2.width) && a.height === (null == r2 ? void 0 : r2.height), w2 = import_react.default.useMemo(() => {
    if (r2 && r2.width && r2.height) {
      return m && 0 === g2 && !u2 ? void 0 : v();
    }
  }, [r2, g2, u2, m]);
  return import_react.default.useLayoutEffect(() => {
    if (!w2 || !r2) {
      return;
    }
    trySetCanvasSize(w2, c3, d3);
    const t4 = w2.getContext("2d");
    if (!t4) {
      return;
    }
    g2 && (t4.beginPath(), t4.moveTo(g2, 0), t4.lineTo(c3 - g2, 0), t4.arc(c3 - g2, g2, g2, 3 * Math.PI / 2, 0, false), t4.lineTo(c3, d3 - g2), t4.arc(c3 - g2, d3 - g2, g2, 0, Math.PI / 2, false), t4.lineTo(g2, d3), t4.arc(g2, d3 - g2, g2, Math.PI / 2, Math.PI, false), t4.lineTo(0, g2), t4.arc(g2, g2, g2, Math.PI, 3 * Math.PI / 2, false), t4.clip());
    const e7 = u2 ? function(t5, e8) {
      var r3, a2;
      const o4 = v();
      o4.width = t5.width, o4.height = t5.height;
      const i2 = Math.max(1, Math.floor(o4.width * e8)), n2 = Math.max(1, Math.floor(o4.height * e8));
      null === (r3 = o4.getContext("2d")) || void 0 === r3 || r3.drawImage(t5, 0, 0, o4.width, o4.height);
      const h4 = function(t6, e9, r4, a3, o5, i3, n3) {
        for (var h5 = new ImageData(e9, r4), c4 = new Int32Array(t6.data.buffer), d4 = t6.width, s4 = new Int32Array(h5.data.buffer), g3 = h5.width, l2 = e9 / i3, u3 = r4 / n3, m2 = Math.round(1 / l2), p2 = Math.round(1 / u3), f2 = m2 * p2, w3 = 0; w3 < h5.height; w3++) {
          for (var x2 = 0; x2 < g3; x2++) {
            for (var y3 = 0 + Math.round(x2 / l2) + (0 + Math.round(w3 / u3)) * d4, M3 = 0, v2 = 0, b4 = 0, E3 = 0, S2 = 0; S2 < p2; S2++) {
              for (var R2 = 0; R2 < m2; R2++) {
                var C3 = c4[y3 + R2 + S2 * d4];
                M3 += C3 << 24 >>> 24, v2 += C3 << 16 >>> 24, b4 += C3 << 8 >>> 24, E3 += C3 >>> 24;
              }
            }
            M3 = Math.round(M3 / f2), v2 = Math.round(v2 / f2), b4 = Math.round(b4 / f2), E3 = Math.round(E3 / f2), s4[x2 + w3 * g3] = E3 << 24 | b4 << 16 | v2 << 8 | M3;
          }
        }
        return h5;
      }(o4.getContext("2d").getImageData(0, 0, o4.width, o4.height), i2, n2, 0, 0, o4.width, o4.height);
      return o4.width = i2, o4.height = n2, null === (a2 = o4.getContext("2d")) || void 0 === a2 || a2.putImageData(h4, 0, 0), o4;
    }(r2, l) : r2, o3 = u2 ? { x: Math.floor(a.x * l), y: Math.floor(a.y * l), width: Math.floor(a.width * l), height: Math.floor(a.height * l) } : a;
    t4.drawImage(e7, o3.x, o3.y, o3.width, o3.height, 0, 0, w2.width, w2.height);
  }, [w2, e6.a.width, e6.a.height, a.x, a.y, a.width, a.height, i, o2, n, e6.page._exportingOrRendering, u2]), import_react.default.useEffect(() => () => {
    w2 && "CANVAS" === w2.nodeName && import_konva.default.Util.releaseCanvas(w2);
  }, [w2]), w2 || r2;
};
var I = v();
var O = observer(({ element: e6 }) => {
  const r2 = Math.min(30, e6.a.width / 4, e6.a.height / 4), a = import_react.default.useRef(null);
  return import_react.default.useEffect(() => {
    const t4 = a.current;
    if (!t4) {
      return;
    }
    const e7 = new import_konva.default.Animation((e8) => {
      t4.rotate(((null == e8 ? void 0 : e8.timeDiff) || 0) / 2);
    }, t4.getLayer());
    return e7.start(), () => {
      e7.stop();
    };
  }), import_react.default.createElement(Group, { x: e6.x, y: e6.y, rotation: e6.rotation, listening: false, opacity: e6.a.opacity, hideInExport: !e6.showInExport }, import_react.default.createElement(Rect, { width: e6.a.width, height: e6.a.height, fill: "rgba(124, 173, 212, 0.8)" }), import_react.default.createElement(Arc, { ref: a, x: e6.a.width / 2, y: e6.a.height / 2, fill: "white", outerRadius: Math.abs(r2), innerRadius: Math.max(1, r2 - 5), angle: 270 }));
});
var X = observer(({ element: e6 }) => {
  const r2 = Math.max(10, Math.min(30, e6.a.width / 25));
  return import_react.default.createElement(Group, { x: e6.x, y: e6.y, rotation: e6.rotation, listening: false, opacity: e6.a.opacity, hideInExport: !e6.showInExport }, import_react.default.createElement(Rect, { width: e6.a.width, height: e6.a.height, fill: "rgba(223, 102, 102, 0.8)" }), import_react.default.createElement(Text, { text: "Can not load the image...", fontSize: r2, width: e6.a.width, height: e6.a.height, align: "center", fill: "white", verticalAlign: "middle", padding: 5 }));
});
var Y = import_use_image.default;
var setImageLoaderHook = (t4) => {
  Y = t4;
};
var useImageLoader = (e6, r2 = "", a = "") => {
  const o2 = import_react.default.useRef(), i = () => {
    var t4;
    null === (t4 = o2.current) || void 0 === t4 || t4.call(o2), o2.current = void 0;
  };
  import_react.default.useEffect(() => i, []), import_react.default.useLayoutEffect(() => {
    const t4 = r2.slice(0, 200), n = `image with id ${a} url: ${t4}`;
    "loading" !== e6 || o2.current || (o2.current = incrementLoader(n)), "loading" !== e6 && i(), "failed" === e6 && triggerLoadError(n);
  }, [e6]);
};
var ImageElement = observer(({ element: e6, store: h3 }) => {
  var c3;
  const [d3, l] = import_react.default.useState(false), u2 = import_react.default.useRef(null), p2 = import_react.default.useRef(null), C3 = h3.selectedShapes.indexOf(e6) >= 0 && e6.selectable, [T3, W2] = ((e7) => {
    const [r2, a] = import_react.default.useReducer((t4) => t4 + 1, 0), o2 = import_react.default.useRef("loading"), i = import_react.default.useRef(e7.src), n = import_react.default.useRef(e7.src);
    n.current !== e7.src && (n.current = e7.src, o2.current = "loading");
    const h4 = import_react.default.useMemo(() => b(e7.src) || "svg" === e7.type, [e7.src, e7.type]);
    return import_react.default.useEffect(() => {
      if (!h4) {
        return;
      }
      if (!e7.src) {
        return;
      }
      let t4 = false;
      return (async () => {
        o2.current = "loading", a();
        const r3 = await urlToString(e7.src), n2 = fixSize(r3);
        let h5;
        h5 = e7.colorsReplace ? replaceColors(n2, e7.colorsReplace || /* @__PURE__ */ new Map()) : svgToURL(n2), t4 || (i.current = h5, o2.current = "loaded", a());
      })(), () => {
        t4 = true;
      };
    }, [e7.src, JSON.stringify(e7.colorsReplace)]), h4 ? [i.current, o2.current] : [e7.src, "loaded"];
  })(e6), [k, A] = Y(T3, "anonymous"), D2 = "svg" !== e6.type || "loaded" === W2 ? A : "loading";
  useImageLoader(D2, e6.src, e6.id);
  const _2 = e6.page._exportingOrRendering ? 1 : Math.max(1, h3.scale), L2 = h3._elementsPixelRatio * _2, z2 = (({ image: e7, status: r2, type: a }) => {
    const o2 = import_react.default.useRef();
    return import_react.default.useEffect(() => {
      o2.current = e7 || o2.current;
    }, [e7]), "failed" !== r2 || "failed" !== r2 && "svg" === a ? o2.current : void 0;
  })({ image: k, status: A, type: e6.type }), H2 = ((e7, r2, a) => {
    const o2 = import_react.default.useMemo(() => {
      var t4, o3;
      const { flipX: i, flipY: n } = e7, h4 = "svg" === e7.type || e7.src.indexOf("data:image/svg+xml") >= 0 || e7.src.indexOf(".svg") >= 0, c4 = navigator.userAgent.toLowerCase().indexOf("firefox") > -1, d4 = (/^((?!chrome|android).)*safari/i.test(navigator.userAgent) || c4) && h4 || e7.maskSrc;
      if (!i && !n && !d4) {
        return r2;
      }
      if (!r2 || !r2.width || !r2.height) {
        return null;
      }
      const s4 = v();
      let g2 = 1;
      "svg" === e7.type && (g2 = Math.max(e7.a.width / r2.width * a, e7.a.height / r2.height * a)), trySetCanvasSize(s4, Math.max(r2.width * g2, 1), Math.max(r2.height * g2, 1));
      let l2 = i ? -s4.width : 0, u3 = n ? -s4.height : 0;
      return null === (t4 = s4.getContext("2d")) || void 0 === t4 || t4.scale(i ? -1 : 1, n ? -1 : 1), null === (o3 = s4.getContext("2d")) || void 0 === o3 || o3.drawImage(r2, l2, u3, s4.width, s4.height), s4;
    }, [e7.maskSrc, e7.flipX, e7.flipY, r2, e7.a.width, e7.a.height, a]);
    return import_react.default.useEffect(() => () => {
      o2 && "CANVAS" === o2.nodeName && import_konva.default.Util.releaseCanvas(o2);
    }, [o2]), o2;
  })(e6, k || z2, L2), P = ((e7, r2) => {
    const a = useSizeFixer(e7.maskSrc || ""), [o2, i] = Y(a, "anonymous");
    return useImageLoader(a ? i : "loaded", a || "", e7.id), import_react.default.useMemo(() => {
      if (!o2) {
        return r2;
      }
      if (!r2 || !r2.width || !r2.height) {
        return r2;
      }
      const t4 = v();
      t4.width = Math.max(r2.width, 1), t4.height = Math.max(r2.height, 1);
      const a2 = t4.getContext("2d");
      if (!a2) {
        return r2;
      }
      a2.drawImage(r2, 0, 0), a2.globalCompositeOperation = "source-in";
      const i2 = function(t5, e8) {
        const r3 = e8.width / e8.height;
        let a3, o3;
        return r3 >= t5.width / t5.height ? (a3 = t5.width, o3 = t5.width / r3) : (a3 = t5.height * r3, o3 = t5.height), { x: (t5.width - a3) / 2, y: (t5.height - o3) / 2, width: a3, height: o3 };
      }(o2, e7);
      return a2.drawImage(o2, i2.x, i2.y, i2.width, i2.height, 0, 0, r2.width, r2.height), t4;
    }, [r2, o2, e7.a.width, e7.a.height]);
  })(e6, H2) || I;
  let { cropX: j2, cropY: B2, cropWidth: F2, cropHeight: N2 } = e6.a;
  "loaded" !== A && (j2 = B2 = 0, F2 = N2 = 1);
  const U2 = P.width * F2, V2 = P.height * N2, $ = e6.a.width / e6.a.height;
  let q, J2;
  const G2 = U2 / V2, K2 = e6.stretchEnabled;
  K2 ? (q = U2, J2 = V2) : $ >= G2 ? (q = U2, J2 = U2 / $) : (q = V2 * $, J2 = V2);
  const Q = { x: P.width * j2, y: P.height * B2, width: q, height: J2 }, Z2 = null !== (c3 = e6.cornerRadius) && void 0 !== c3 ? c3 : 0, tt = e6.page._exportingOrRendering ? 1 : Math.min(2, h3.scale), et = h3._elementsPixelRatio * tt;
  let rt = ((e7, r2, a, o2) => {
    const i = useSizeFixer(e7.clipSrc || ""), [n, h4] = Y(i, "anonymous"), c4 = e7.clipSrc ? h4 : "loaded";
    useImageLoader(c4, e7.clipSrc, e7.id);
    const d4 = import_react.default.useMemo(() => {
      if (r2 && n) {
        return v();
      }
    }, [r2, n]);
    return import_react.default.useLayoutEffect(() => {
      var t4;
      if (!n) {
        return;
      }
      if (!r2 || !r2.width || !r2.height) {
        return;
      }
      if (!n || !n.width || !n.height) {
        return;
      }
      if (!d4) {
        return;
      }
      const o3 = v(), i2 = Math.max(e7.a.width / n.width * a, e7.a.height / n.height * a);
      o3.width = Math.max(n.width * i2, 1), o3.height = Math.max(n.height * i2, 1), null === (t4 = o3.getContext("2d")) || void 0 === t4 || t4.drawImage(n, 0, 0, o3.width, o3.height), d4.width = Math.max(r2.width, 1), d4.height = Math.max(r2.height, 1);
      const h5 = d4.getContext("2d");
      h5 && (h5.save(), h5.drawImage(o3, 0, 0, r2.width, r2.height), import_konva.default.Util.releaseCanvas(o3), h5.globalCompositeOperation = "source-in", h5.drawImage(r2, 0, 0, d4.width, d4.height), h5.restore());
    }, [d4, r2, n, e7.a.width, e7.a.height, a, ...o2]), e7.clipSrc && n ? d4 : r2;
  })(e6, useCornerRadiusAndCrop(e6, P, Q, et, Z2, d3 || e6._cropModeEnabled || "svg" === e6.type, true), et, [Q, Z2, et]);
  const at = Math.max(e6.a.width / q, e6.a.height / J2);
  import_react.default.useEffect(() => {
    var t4;
    if (!e6._cropModeEnabled) {
      return;
    }
    const r2 = null === (t4 = u2.current) || void 0 === t4 ? void 0 : t4.getStage();
    function a(t5) {
      e6._cropModeEnabled && t5.target !== p2.current && e6.toggleCropMode(false);
    }
    function o2(t5) {
      e6._cropModeEnabled && t5.target.parentNode !== r2.content && e6.toggleCropMode(false);
    }
    return document.body.addEventListener("click", o2), null == r2 || r2.on("click", a), null == r2 || r2.on("tap", a), () => {
      document.body.removeEventListener("click", o2), document.body.removeEventListener("touchstart", o2), null == r2 || r2.off("click", a), null == r2 || r2.off("click", a);
    };
  }, [e6._cropModeEnabled]), import_react.default.useLayoutEffect(() => {
    if (!d3 && !e6._cropModeEnabled) {
      return applyFilter(u2.current, e6), autorun(() => {
        applyFilter(u2.current, e6);
      }, { delay: 100 });
    }
  }, [rt, e6.page._exportingOrRendering, d3, F2, N2, e6._cropModeEnabled]), import_react.default.useLayoutEffect(() => {
    var t4;
    d3 || e6._cropModeEnabled ? null === (t4 = u2.current) || void 0 === t4 || t4.clearCache() : applyFilter(u2.current, e6);
  }, [d3, e6.a.width, e6.a.height, e6._cropModeEnabled]), import_react.default.useEffect(() => {
    applyFilter(u2.current, e6);
  }, [e6.shadowEnabled, e6.shadowBlur, e6.cornerRadius, e6.shadowColor, e6.shadowOffsetX, e6.shadowOffsetY, e6.shadowOpacity]);
  const ot = import_react.default.useRef(null), it = import_react.default.useRef(null), nt = import_react.default.useRef(null);
  import_react.default.useLayoutEffect(() => {
    e6._cropModeEnabled && (it.current.nodes([ot.current]), nt.current.nodes([p2.current]));
  }, [e6._cropModeEnabled]);
  var ht = import_react.default.useRef(null), ct = import_react.default.useRef(0), dt = import_react.default.useRef(false);
  const st = (t4) => {
    var r2;
    (null === (r2 = t4.evt.touches) || void 0 === r2 ? void 0 : r2.length) > 2 && t4.target.stopDrag(), Math.round(t4.target.x()) > 0 && (t4.target.x(0), t4.target.scaleX(1)), Math.round(t4.target.y()) > 0 && (t4.target.y(0), t4.target.scaleY(1));
    const a = t4.target.width() * t4.target.scaleX(), o2 = t4.target.height() * t4.target.scaleY(), i = Math.min(1, q / a), n = Math.min(1, J2 / o2), h4 = 1 - i, c4 = Math.min(h4, Math.max(0, Math.round(-t4.target.x()) / a)), d4 = 1 - n, s4 = Math.min(d4, Math.max(0, Math.round(-t4.target.y()) / o2));
    t4.target.setAttrs({ x: -c4 * P.width, y: -s4 * P.height, scaleX: 1, scaleY: 1 }), e6.set({ cropX: c4, cropY: s4, cropWidth: i, cropHeight: n });
  }, gt = () => {
    "svg" !== e6.type && e6.contentEditable && (e6.stretchEnabled || setTimeout(() => {
      e6.toggleCropMode(true);
    }));
  }, lt = "svg" === e6.type && z2, ut = "loading" === A && !lt, [mt] = useDelayer(ut, 100, false, false), pt = "failed" === A, ft = !mt && !pt, wt = import_react.default.useRef({ cropX: 0, cropY: 0, cropWidth: 0, cropHeight: 0 }), xt = ft ? e6.a.opacity : 0;
  useFadeIn(u2, xt);
  const yt = e6.selectable || "admin" === h3.role, Mt = isTouchDevice();
  return import_react.default.createElement(import_react.default.Fragment, null, mt && import_react.default.createElement(O, { element: e6 }), pt && import_react.default.createElement(X, { element: e6 }), import_react.default.createElement(Image, { ref: u2, name: "element", id: e6.id, image: rt, x: e6.a.x, y: e6.a.y, width: e6.a.width || 1, height: e6.a.height || 1, rotation: e6.a.rotation, opacity: xt, shadowEnabled: e6.shadowEnabled, shadowBlur: e6.shadowBlur, shadowOffsetX: e6.shadowOffsetX, shadowOffsetY: e6.shadowOffsetY, shadowColor: e6.shadowColor, shadowOpacity: e6.shadowOpacity, customCrop: Q, listening: yt, draggable: Mt ? e6.draggable && C3 : e6.draggable, preventDefault: !Mt || C3, hideInExport: !e6.showInExport, onDragMove: (t4) => {
    e6.set({ x: t4.target.x(), y: t4.target.y() });
  }, onDragEnd: (t4) => {
    e6.set({ x: t4.target.x(), y: t4.target.y() });
  }, onDblClick: gt, onDblTap: gt, onTransformStart: () => {
    l(true), wt.current = { cropX: e6.cropX, cropY: e6.cropY, cropWidth: e6.cropWidth, cropHeight: e6.cropHeight };
  }, onTransform: (t4) => {
    var r2;
    const a = t4.currentTarget, o2 = Math.abs(a.scaleX() - 1) < 1e-7 ? 1 : a.scaleX(), i = Math.abs(a.scaleY() - 1) < 1e-7 ? 1 : a.scaleY();
    a.scaleX(1), a.scaleY(1);
    const n = null === (r2 = t4.target.getStage()) || void 0 === r2 ? void 0 : r2.findOne("Transformer"), h4 = 1 - q / P.width, c4 = Math.min(h4, Math.max(0, e6.cropX)), d4 = 1 - J2 / P.height, s4 = Math.min(d4, Math.max(0, e6.cropY)), g2 = n.getActiveAnchor(), l2 = !(g2.indexOf("middle") >= 0 || g2.indexOf("center") >= 0), u3 = !l2 && o2 < 1 && wt.current.cropHeight > J2 / P.height;
    let m = l2 ? e6.cropWidth : e6.cropWidth * o2;
    u3 && (m = e6.cropWidth);
    const p3 = !l2 && i < 1 && wt.current.cropWidth > q / P.width;
    let f2 = l2 ? e6.cropHeight : e6.cropHeight * i;
    p3 && (f2 = e6.cropHeight), K2 && (m = e6.cropWidth, f2 = e6.cropHeight), e6.set({ cropX: c4, cropY: s4, x: a.x(), y: a.y(), width: a.width() * o2, height: a.height() * i, rotation: t4.target.rotation(), cropWidth: Math.min(m, 1 - c4), cropHeight: Math.min(f2, 1 - s4) });
  }, onTransformEnd: (t4) => {
    const r2 = t4.currentTarget;
    e6.set({ width: r2.width(), height: r2.height(), x: r2.x(), y: r2.y(), rotation: t4.target.rotation(), cropWidth: q / P.width, cropHeight: J2 / P.height }), l(false);
  } }), import_react.default.createElement(Rect, { x: e6.x, y: e6.y, width: Math.max(e6.a.width - e6.borderSize, 0), height: Math.max(e6.a.height - e6.borderSize, 0), opacity: xt, offsetX: -e6.borderSize / 2, offsetY: -e6.borderSize / 2, stroke: e6.borderColor, strokeWidth: e6.borderSize, listening: false, visible: !!e6.borderSize, rotation: e6.rotation, cornerRadius: Math.max(0, Z2 - e6.borderSize), hideInExport: !e6.showInExport }), e6._cropModeEnabled && import_react.default.createElement(Portal, { selector: ".page-abs-container", enabled: true }, import_react.default.createElement(Rect, { x: -window.innerWidth / h3.scale, y: -window.innerWidth / h3.scale, width: window.innerWidth / h3.scale * 3, height: window.innerWidth / h3.scale * 3, fill: "rgba(0,0,0,0.3)" }), import_react.default.createElement(Image, { listening: false, image: rt, x: e6.x, y: e6.y, width: e6.a.width, height: e6.a.height, rotation: e6.rotation, shadowEnabled: e6.shadowEnabled, shadowBlur: e6.shadowBlur }), import_react.default.createElement(Group, { x: e6.x, y: e6.y, rotation: e6.rotation, scaleX: at, scaleY: at }, import_react.default.createElement(Image, { image: P, ref: p2, opacity: 0.4, draggable: true, x: -e6.cropX * P.width, y: -e6.cropY * P.height, onDragMove: st, onTransform: st, onTouchMove: (t4) => {
    t4.evt.preventDefault();
    const e7 = t4.target.getStage().getPointersPositions();
    var r2 = e7[0], a = e7[1];
    const o2 = t4.target;
    if (r2 && !a && !o2.isDragging() && dt.current && (o2.startDrag(), dt.current = false), r2 && a) {
      import_konva.default.hitOnDragEnabled = true, o2.isDragging() && (dt.current = true, o2.stopDrag());
      const e8 = t4.target.getAbsoluteTransform().copy();
      e8.invert();
      var i = { x: r2.x, y: r2.y }, n = { x: a.x, y: a.y };
      if (!ht.current) {
        return void (ht.current = E(i, n));
      }
      var h4 = E(i, n), c4 = function(t5, e9) {
        return Math.sqrt(Math.pow(e9.x - t5.x, 2) + Math.pow(e9.y - t5.y, 2));
      }(i, n);
      ct.current || (ct.current = c4);
      const p3 = o2.position();
      var d4 = { x: h4.x - p3.x, y: h4.y - p3.y }, g2 = c4 / ct.current;
      o2.scaleX(g2), o2.scaleY(g2);
      const f2 = e8.point(h4), w2 = e8.point(ht.current);
      var l2 = f2.x - w2.x, u3 = f2.y - w2.y, m = { x: Math.min(0, h4.x - d4.x * g2 + l2), y: Math.min(0, h4.y - d4.y * g2 + u3) };
      o2.position(m), ct.current = c4, ht.current = h4, st(t4);
    }
  }, onTouchEnd: (t4) => {
    ct.current = 0, ht.current = null, import_konva.default.hitOnDragEnabled = false;
  } }), import_react.default.createElement(Transformer, Object.assign({ ref: nt }, R)), import_react.default.createElement(Rect, { width: q, height: J2, ref: ot, listening: false, onTransform: (t4) => {
    if (e6.cropX < Math.abs(t4.target.x() / P.width) && t4.target.x() < 0 && e6.cropX > 0) {
      const r3 = (e6.cropWidth + e6.cropX) * P.width;
      t4.target.scaleX(1), t4.target.width(r3);
    }
    if (e6.cropY < Math.abs(t4.target.y() / P.height) && t4.target.y() < 0 && e6.cropY > 0) {
      const r3 = (e6.cropHeight + e6.cropY) * P.height;
      t4.target.scaleY(1), t4.target.height(r3);
    }
    t4.target.x() < -e6.cropX * P.width - 1e-9 && (t4.target.x(-e6.cropX * P.width), t4.target.scaleX(1)), t4.target.y() < -e6.cropY * P.height - 1e-9 && (t4.target.y(-e6.cropY * P.height), t4.target.scaleY(1));
    const r2 = Math.min(1, Math.max(0, e6.cropX + t4.target.x() / P.width)), a = Math.min(1, Math.max(0, t4.target.y() / P.height + e6.cropY)), o2 = t4.target.width() * t4.target.scaleX(), i = t4.target.height() * t4.target.scaleY(), n = Math.min(1 - r2, o2 / P.width), h4 = Math.min(1 - a, i / P.height), c4 = t4.target.getAbsolutePosition(t4.target.getParent().getParent());
    t4.target.scale({ x: 1, y: 1 }), t4.target.position({ x: 0, y: 0 }), e6.set({ x: c4.x, y: c4.y, cropX: r2, cropY: a, cropWidth: n, cropHeight: h4, width: Math.min(o2 * at, P.width * (1 - r2) * at), height: Math.min(i * at, P.height * (1 - a) * at) });
  } }), import_react.default.createElement(Transformer, Object.assign({ ref: it }, S, { visible: e6.resizable })))));
});

// node_modules/polotno/canvas/highlighter.js
var import_react2 = __toESM(require_react(), 1);
var r = { stroke: "rgb(0, 161, 255)", strokeWidth: 2 };
var setHighlighterStyle = (t4) => {
  Object.assign(r, t4);
};
var Highlighter = observer(({ element: e6 }) => import_react2.default.createElement(Rect, Object.assign({ name: "highlighter", x: e6.a.x, y: e6.a.y, rotation: e6.a.rotation, width: e6.a.width, height: e6.a.height, listening: false, strokeScaleEnabled: false }, r)));

// node_modules/polotno/canvas/element.js
var import_react6 = __toESM(require_react(), 1);
var import_konva4 = __toESM(require_lib(), 1);

// node_modules/polotno/canvas/video-element.js
var import_react3 = __toESM(require_react(), 1);
var import_use_image2 = __toESM(require_use_image(), 1);
var import_konva2 = __toESM(require_lib(), 1);
function x() {
  return document.createElement("canvas");
}
var y = new window.Image();
y.src = svgToURL('\n  <svg width="800px" height="800px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <path opacity="0.6" d="M4 5.49683V18.5032C4 20.05 5.68077 21.0113 7.01404 20.227L18.0694 13.7239C19.384 12.9506 19.384 11.0494 18.0694 10.2761L7.01404 3.77296C5.68077 2.98869 4 3.95 4 5.49683Z" fill="white"/>\n  <path d="M4 5.49683V18.5032C4 20.05 5.68077 21.0113 7.01404 20.227L18.0694 13.7239C19.384 12.9506 19.384 11.0494 18.0694 10.2761L7.01404 3.77296C5.68077 2.98869 4 3.95 4 5.49683Z" stroke="#323232" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n  </svg>\n');
var E2 = new window.Image();
E2.src = svgToURL('\n  <svg width="800px" height="800px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <path opacity="0.6" d="M14 19L14 5C14 3.89543 14.8954 3 16 3L17 3C18.1046 3 19 3.89543 19 5L19 19C19 20.1046 18.1046 21 17 21L16 21C14.8954 21 14 20.1046 14 19Z" fill="white"/>\n  <path opacity="0.6" d="M10 19L10 5C10 3.89543 9.10457 3 8 3L7 3C5.89543 3 5 3.89543 5 5L5 19C5 20.1046 5.89543 21 7 21L8 21C9.10457 21 10 20.1046 10 19Z" fill="white"/>\n  <path d="M14 19L14 5C14 3.89543 14.8954 3 16 3L17 3C18.1046 3 19 3.89543 19 5L19 19C19 20.1046 18.1046 21 17 21L16 21C14.8954 21 14 20.1046 14 19Z" stroke="#323232" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n  <path d="M10 19L10 5C10 3.89543 9.10457 3 8 3L7 3C5.89543 3 5 3.89543 5 5L5 19C5 20.1046 5.89543 21 7 21L8 21C9.10457 21 10 20.1046 10 19Z" stroke="#323232" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>\n  </svg>\n');
var useCornerRadiusAndCrop2 = (t4, r2, n, o2, i = 0, a = false) => {
  const h3 = Math.floor(Math.max(t4.width * o2, 1)), d3 = Math.floor(Math.max(t4.height * o2, 1)), c3 = Math.min(i * o2, h3 / 2, d3 / 2), l = Math.max(t4.width / n.width, t4.height / n.height) * o2, u2 = t4.page._exportingOrRendering && flags.imageDownScalingEnabled && l < 1 && !a, g2 = 0 === n.x && 0 === n.y && n.width === (null == r2 ? void 0 : r2.width) && n.height === (null == r2 ? void 0 : r2.height), f2 = import_react3.default.useMemo(() => {
    if (r2 && r2.width && r2.height) {
      return g2 && 0 === c3 && !u2 ? void 0 : x();
    }
  }, [r2, c3, u2, g2]), p2 = () => {
    if (!f2 || !r2) {
      return;
    }
    f2.width = h3, f2.height = d3;
    const e6 = f2.getContext("2d");
    if (!e6) {
      return;
    }
    c3 && (e6.beginPath(), e6.moveTo(c3, 0), e6.lineTo(h3 - c3, 0), e6.arc(h3 - c3, c3, c3, 3 * Math.PI / 2, 0, false), e6.lineTo(h3, d3 - c3), e6.arc(h3 - c3, d3 - c3, c3, 0, Math.PI / 2, false), e6.lineTo(c3, d3), e6.arc(c3, d3 - c3, c3, Math.PI / 2, Math.PI, false), e6.lineTo(0, c3), e6.arc(c3, c3, c3, Math.PI, 3 * Math.PI / 2, false), e6.clip());
    const t5 = u2 ? function(e7, t6) {
      var r3, n2;
      const o4 = x();
      o4.width = e7.width, o4.height = e7.height, null === (r3 = o4.getContext("2d")) || void 0 === r3 || r3.drawImage(e7, 0, 0, o4.width, o4.height);
      const i2 = function(e8, t7, r4, n3, o5, i3, a2) {
        for (var h4 = new ImageData(t7, r4), d4 = new Int32Array(e8.data.buffer), c4 = e8.width, s4 = new Int32Array(h4.data.buffer), l2 = h4.width, u3 = t7 / i3, g3 = r4 / a2, f3 = Math.round(1 / u3), m = Math.round(1 / g3), p3 = f3 * m, w2 = 0; w2 < h4.height; w2++) {
          for (var v2 = 0; v2 < l2; v2++) {
            for (var x2 = 0 + Math.round(v2 / u3) + (0 + Math.round(w2 / g3)) * c4, y3 = 0, E3 = 0, M3 = 0, b4 = 0, L2 = 0; L2 < m; L2++) {
              for (var C3 = 0; C3 < f3; C3++) {
                var T3 = d4[x2 + C3 + L2 * c4];
                y3 += T3 << 24 >>> 24, E3 += T3 << 16 >>> 24, M3 += T3 << 8 >>> 24, b4 += T3 >>> 24;
              }
            }
            y3 = Math.round(y3 / p3), E3 = Math.round(E3 / p3), M3 = Math.round(M3 / p3), b4 = Math.round(b4 / p3), s4[v2 + w2 * l2] = b4 << 24 | M3 << 16 | E3 << 8 | y3;
          }
        }
        return h4;
      }(o4.getContext("2d").getImageData(0, 0, o4.width, o4.height), Math.floor(o4.width * t6), Math.floor(o4.height * t6), 0, 0, o4.width, o4.height);
      return o4.width = Math.floor(o4.width * t6), o4.height = Math.floor(o4.height * t6), null === (n2 = o4.getContext("2d")) || void 0 === n2 || n2.putImageData(i2, 0, 0), o4;
    }(r2, l) : r2, o3 = u2 ? { x: Math.floor(n.x * l), y: Math.floor(n.y * l), width: Math.floor(n.width * l), height: Math.floor(n.height * l) } : n;
    e6.drawImage(t5, o3.x, o3.y, o3.width, o3.height, 0, 0, f2.width, f2.height);
  };
  return import_react3.default.useLayoutEffect(() => {
    p2();
  }, [f2, t4.width, t4.height, n.x, n.y, n.width, n.height, i, o2, a, t4.page._exportingOrRendering, u2]), import_react3.default.useEffect(() => () => {
    f2 && "CANVAS" === f2.nodeName && import_konva2.default.Util.releaseCanvas(f2);
  }, [f2]), [f2 || r2, p2];
};
var M = x();
var b2 = observer(({ element: t4 }) => {
  const r2 = Math.min(30, t4.width / 4, t4.height / 4), n = import_react3.default.useRef(null);
  return import_react3.default.useEffect(() => {
    const e6 = n.current;
    if (!e6) {
      return;
    }
    const t5 = new import_konva2.default.Animation((t6) => {
      e6.rotate(((null == t6 ? void 0 : t6.timeDiff) || 0) / 2);
    }, e6.getLayer());
    return t5.start(), () => {
      t5.stop();
    };
  }), import_react3.default.createElement(Group, { x: t4.a.x, y: t4.a.y, rotation: t4.a.rotation, listening: false, opacity: t4.a.opacity, hideInExport: !t4.showInExport }, import_react3.default.createElement(Rect, { width: t4.width, height: t4.height, fill: "rgba(124, 173, 212, 0.8)" }), import_react3.default.createElement(Arc, { ref: n, x: t4.width / 2, y: t4.height / 2, fill: "white", outerRadius: Math.abs(r2), innerRadius: Math.max(1, r2 - 5), angle: 270 }));
});
var L = observer(({ element: t4 }) => {
  const r2 = Math.max(10, Math.min(30, t4.width / 25));
  return import_react3.default.createElement(Group, { x: t4.a.x, y: t4.a.y, rotation: t4.a.rotation, listening: false, opacity: t4.a.opacity, hideInExport: !t4.showInExport }, import_react3.default.createElement(Rect, { width: t4.width, height: t4.height, fill: "rgba(223, 102, 102, 0.8)" }), import_react3.default.createElement(Text, { text: "Can not load the video...", fontSize: r2, width: t4.width, height: t4.height, align: "center", fill: "white", verticalAlign: "middle", padding: 5 }));
});
var C2 = function(t4, r2, n) {
  const o2 = import_react3.default.useRef("loading"), i = import_react3.default.useRef(null), [a, h3] = import_react3.default.useState(0), d3 = import_react3.default.useRef(), c3 = import_react3.default.useRef(), s4 = import_react3.default.useRef();
  return d3.current === t4 && c3.current === r2 && s4.current === n || (o2.current = "loading", i.current = void 0, d3.current = t4, c3.current = r2, s4.current = n), import_react3.default.useLayoutEffect(function() {
    if (t4) {
      var e6 = document.createElement("video");
      return e6.addEventListener("canplay", a2), e6.addEventListener("error", d4), r2 && (e6.crossOrigin = r2), n && (e6.referrerpolicy = n), e6.src = t4, e6.load(), function() {
        e6.removeEventListener("canplay", a2), e6.removeEventListener("error", d4);
      };
    }
    function a2() {
      o2.current = "loaded", i.current = e6, i.current.currentTime = 0, h3(Math.random()), i.current.removeEventListener("canplay", a2);
    }
    function d4(t5) {
      var r3;
      const n2 = 4 === e6.readyState, a3 = e6.buffered && e6.buffered.length > 0 && e6.buffered.end(e6.buffered.length - 1) / e6.duration * 100 >= 100;
      if (n2 && a3) {
        return;
      }
      const d5 = t5.message || (null === (r3 = e6.error) || void 0 === r3 ? void 0 : r3.message) || "Unknown error", c4 = new Error("Video failed to load: " + d5);
      console.error(c4), o2.current = "failed", i.current = void 0, h3(Math.random());
    }
  }, [t4, r2, n]), [i.current, o2.current];
};
function T(e6) {
  return e6.readyState >= HTMLMediaElement.HAVE_CURRENT_DATA;
}
var useLoader = (t4, r2, n) => {
  const o2 = import_react3.default.useRef(), i = () => {
    var e6;
    null === (e6 = o2.current) || void 0 === e6 || e6.call(o2), o2.current = void 0;
  };
  import_react3.default.useEffect(() => i, []), import_react3.default.useLayoutEffect(() => {
    const e6 = r2.slice(0, 200), a = `video with id ${n} url: ${e6}`;
    "loading" !== t4 || o2.current || (o2.current = incrementLoader(a)), "loading" !== t4 && i(), "failed" === t4 && triggerLoadError(a);
  }, [t4]);
};
var VideoElement = observer(({ element: t4, store: h3 }) => {
  var d3;
  const [g2, m] = import_react3.default.useState(false), R2 = import_react3.default.useRef(null), I3 = import_react3.default.useRef(null), k = h3.selectedShapes.indexOf(t4) >= 0 && t4.selectable, [S2, X2] = import_react3.default.useState(false), [Y2, W2] = C2(t4.src, "anonymous"), O2 = h3.activePage === t4.page;
  useLoader(W2, t4.src, t4.id), Y2 && (Y2.width = Y2.videoWidth, Y2.height = Y2.videoHeight, Y2.playsInline = true);
  const _2 = Y2 || M;
  import_react3.default.useEffect(() => {
    Y2 && h3.history.ignore(() => {
      t4.set({ duration: 1e3 * Y2.duration });
    });
  }, [Y2]), import_react3.default.useEffect(() => {
    var e6;
    if (!Y2) {
      return;
    }
    const r2 = h3.animatedElementsIds, n = (!r2.length || r2.includes(t4.id)) && h3.isPlaying, o2 = O2 && (n || S2);
    if (!o2) {
      return void Y2.pause();
    }
    o2 && (Y2.currentTime = t4.startTime * Y2.duration, Y2.play());
    const i = new import_konva2.default.Animation(() => {
      ee();
    }, null === (e6 = R2.current) || void 0 === e6 ? void 0 : e6.getLayer());
    i.start();
    const a = () => {
      X2(false), Y2.currentTime = t4.startTime * Y2.duration;
    }, d4 = () => {
      Y2.currentTime >= t4.endTime * Y2.duration && (Y2.pause(), Y2.currentTime = t4.startTime * Y2.duration, X2(false));
    };
    return Y2.addEventListener("ended", a), Y2.addEventListener("timeupdate", d4), () => {
      Y2.pause(), i.stop(), Y2.removeEventListener("ended", a), Y2.removeEventListener("timeupdate", d4);
    };
  }, [Y2, S2, h3.isPlaying, O2]), import_react3.default.useEffect(() => {
    Y2 && (Y2.volume = t4.volume);
  }, [Y2, t4.volume]);
  const P = import_react3.default.useRef();
  import_react3.default.useEffect(() => {
    const e6 = autorun(() => {
      var e7, r2;
      if (Y2) {
        const n = h3.animatedElementsIds;
        if (n.length && !n.includes(t4.id)) {
          return;
        }
        const o2 = t4.startTime * Y2.duration * 1e3, i = Y2.duration * (t4.endTime - t4.startTime) * 1e3, a = ((h3.currentTime || t4.page.startTime) - t4.page.startTime) % i + o2;
        if (Math.abs(1e3 * Y2.currentTime - a) > 500 || !h3.isPlaying) {
          const e8 = a / 1e3;
          e8 !== Y2.currentTime && (Y2.currentTime = e8), !T(Y2) && !h3.isPlaying && !P.current && (P.current = incrementLoader(`video ${t4.id}`));
        }
        ee(), null === (r2 = null === (e7 = R2.current) || void 0 === e7 ? void 0 : e7.getLayer()) || void 0 === r2 || r2.batchDraw();
      }
    });
    return () => {
      e6(), P.current && (P.current(), P.current = null);
    };
  }, [h3, Y2]), import_react3.default.useEffect(() => {
    if (!Y2) {
      return;
    }
    const e6 = () => {
      var e7, r3;
      !T(Y2) && t4.page._exportingOrRendering || P.current && (ee(), null === (r3 = null === (e7 = R2.current) || void 0 === e7 ? void 0 : e7.getLayer()) || void 0 === r3 || r3.batchDraw(), P.current(), P.current = null);
    };
    let r2;
    return t4.page._exportingOrRendering && (r2 = setInterval(e6, 50)), Y2.addEventListener("timeupdate", e6), Y2.addEventListener("canplay", e6), () => {
      clearInterval(r2), Y2.removeEventListener("timeupdate", e6), Y2.removeEventListener("canplay", e6);
    };
  }, [t4.page._exportingOrRendering, Y2, t4.id, incrementLoader]);
  let { cropX: A, cropY: H2, cropWidth: D2, cropHeight: z2 } = t4;
  "loaded" !== W2 && (A = H2 = 0, D2 = z2 = 1);
  const j2 = _2.width * D2, B2 = _2.height * z2, U2 = t4.width / t4.height;
  let V2, Z2;
  const F2 = j2 / B2, N2 = "svg" === t4.type;
  N2 ? (V2 = j2, Z2 = B2) : U2 >= F2 ? (V2 = j2, Z2 = j2 / U2) : (V2 = B2 * U2, Z2 = B2);
  const $ = { x: _2.width * A, y: _2.height * H2, width: V2, height: Z2 }, q = null !== (d3 = t4.cornerRadius) && void 0 !== d3 ? d3 : 0, [G2, J2] = useCornerRadiusAndCrop2(t4, _2, $, h3._elementsPixelRatio, q, g2 || t4._cropModeEnabled || "svg" === t4.type);
  let [K2, Q] = ((t5, r2, n, o2) => {
    const i = ((t6) => {
      const [r3, n2] = import_react3.default.useState(t6);
      return import_react3.default.useEffect(() => {
        (async () => {
          const e6 = await async function(e7) {
            if (!(e7.indexOf("data:image/svg+xml") >= 0 || e7.indexOf(".svg") >= 0)) {
              return e7;
            }
            const t7 = await urlToString(e7), r4 = fixSize(t7);
            return svgToURL(r4);
          }(t6);
          e6 !== r3 && n2(e6);
        })();
      }, [t6]), r3;
    })(t5.clipSrc || ""), [a, h4] = (0, import_use_image2.default)(i, "anonymous"), d4 = t5.clipSrc ? h4 : "loaded";
    useLoader(d4, t5.clipSrc, t5.id);
    const l = import_react3.default.useMemo(() => {
      if (r2 && a) {
        return x();
      }
    }, [r2, a]);
    function u2() {
      var e6;
      if (!a) {
        return;
      }
      if (!r2 || !r2.width || !r2.height) {
        return;
      }
      if (!a || !a.width || !a.height) {
        return;
      }
      if (!l) {
        return;
      }
      const o3 = x(), i2 = Math.max(t5.width / a.width * n, t5.height / a.height * n);
      o3.width = a.width * i2, o3.height = a.height * i2, null === (e6 = o3.getContext("2d")) || void 0 === e6 || e6.drawImage(a, 0, 0, o3.width, o3.height), l.width = Math.max(r2.width, 1), l.height = Math.max(r2.height, 1);
      const h5 = l.getContext("2d");
      h5 && (h5.save(), h5.drawImage(o3, 0, 0, r2.width, r2.height), import_konva2.default.Util.releaseCanvas(o3), h5.globalCompositeOperation = "source-in", h5.drawImage(r2, 0, 0, l.width, l.height), h5.restore());
    }
    return import_react3.default.useLayoutEffect(() => {
      u2();
    }, [l, r2, a, t5.width, t5.height, n, ...o2]), [t5.clipSrc && a ? l : r2, u2];
  })(t4, G2, h3._elementsPixelRatio, [$, q, h3._elementsPixelRatio]);
  function ee() {
    J2(), Q();
  }
  const te = Math.max(t4.width / V2, t4.height / Z2);
  import_react3.default.useEffect(() => {
    var e6;
    if (!t4._cropModeEnabled) {
      return;
    }
    const r2 = null === (e6 = R2.current) || void 0 === e6 ? void 0 : e6.getStage();
    function n(e7) {
      t4._cropModeEnabled && e7.target !== I3.current && t4.toggleCropMode(false);
    }
    function o2(e7) {
      t4._cropModeEnabled && e7.target.parentNode !== r2.content && t4.toggleCropMode(false);
    }
    return document.body.addEventListener("click", o2), null == r2 || r2.on("click", n), null == r2 || r2.on("tap", n), () => {
      document.body.removeEventListener("click", o2), document.body.removeEventListener("touchstart", o2), null == r2 || r2.off("click", n), null == r2 || r2.off("click", n);
    };
  }, [t4._cropModeEnabled]), import_react3.default.useLayoutEffect(() => {
    if (!g2 && !t4._cropModeEnabled) {
      return applyFilter(R2.current, t4), autorun(() => {
        applyFilter(R2.current, t4);
      }, { delay: 100 });
    }
  }, [_2, g2, D2, z2, t4._cropModeEnabled]), import_react3.default.useLayoutEffect(() => {
    var e6;
    g2 || t4._cropModeEnabled ? null === (e6 = R2.current) || void 0 === e6 || e6.clearCache() : applyFilter(R2.current, t4);
  }, [g2, t4.width, t4.height, t4._cropModeEnabled]), import_react3.default.useEffect(() => {
    applyFilter(R2.current, t4);
  }, [t4.shadowEnabled, t4.shadowBlur, t4.cornerRadius, t4.shadowColor, t4.shadowOffsetX, t4.shadowOffsetY, t4.shadowOpacity]);
  const re = import_react3.default.useRef(null), ne = import_react3.default.useRef(null), oe = import_react3.default.useRef(null);
  import_react3.default.useLayoutEffect(() => {
    t4._cropModeEnabled && (ne.current.nodes([re.current]), oe.current.nodes([I3.current]));
  }, [t4._cropModeEnabled]);
  const ie = (e6) => {
    Math.round(e6.target.x()) > 0 && (e6.target.x(0), e6.target.scaleX(1)), Math.round(e6.target.y()) > 0 && (e6.target.y(0), e6.target.scaleY(1));
    const r2 = e6.target.width() * e6.target.scaleX(), n = e6.target.height() * e6.target.scaleY(), o2 = Math.min(1, V2 / r2), i = Math.min(1, Z2 / n), a = 1 - o2, h4 = Math.min(a, Math.max(0, Math.round(-e6.target.x()) / r2)), d4 = 1 - i, c3 = Math.min(d4, Math.max(0, Math.round(-e6.target.y()) / n));
    e6.target.setAttrs({ x: -h4 * _2.width, y: -c3 * _2.height, scaleX: 1, scaleY: 1 }), t4.set({ cropX: h4, cropY: c3, cropWidth: o2, cropHeight: i });
  }, ae = () => {
    "svg" !== t4.type && t4.contentEditable && setTimeout(() => {
      t4.toggleCropMode(true);
    });
  }, he = "loading" === W2, de = "failed" === W2, ce = !he && !de, se = import_react3.default.useRef({ cropX: 0, cropY: 0, cropWidth: 0, cropHeight: 0 }), le = ce ? t4.a.opacity : 0;
  useFadeIn(R2, le);
  const ue = t4.selectable || "admin" === h3.role, ge = isTouchDevice();
  return import_react3.default.createElement(import_react3.default.Fragment, null, he && import_react3.default.createElement(b2, { element: t4 }), de && import_react3.default.createElement(L, { element: t4 }), import_react3.default.createElement(Image, { ref: R2, name: "element", id: t4.id, image: K2, x: t4.a.x, y: t4.a.y, width: t4.a.width || 1, height: t4.a.height || 1, rotation: t4.a.rotation, opacity: le, shadowEnabled: t4.shadowEnabled, shadowBlur: t4.shadowBlur, shadowOffsetX: t4.shadowOffsetX, shadowOffsetY: t4.shadowOffsetY, shadowColor: t4.shadowColor, shadowOpacity: t4.shadowOpacity, customCrop: $, listening: ue, draggable: ge ? t4.draggable && k : t4.draggable, preventDefault: !ge || k, hideInExport: !t4.showInExport, onDragMove: (e6) => {
    t4.set({ x: e6.target.x(), y: e6.target.y() });
  }, onDragEnd: (e6) => {
    t4.set({ x: e6.target.x(), y: e6.target.y() });
  }, onDblClick: ae, onDblTap: ae, onTransformStart: () => {
    m(true), se.current = { cropX: t4.cropX, cropY: t4.cropY, cropWidth: t4.cropWidth, cropHeight: t4.cropHeight };
  }, onTransform: (e6) => {
    var r2;
    const n = e6.currentTarget, o2 = Math.abs(n.scaleX() - 1) < 1e-7 ? 1 : n.scaleX(), i = Math.abs(n.scaleY() - 1) < 1e-7 ? 1 : n.scaleY();
    n.scaleX(1), n.scaleY(1);
    const a = null === (r2 = e6.target.getStage()) || void 0 === r2 ? void 0 : r2.findOne("Transformer"), h4 = 1 - V2 / _2.width, d4 = Math.min(h4, Math.max(0, t4.cropX)), c3 = 1 - Z2 / _2.height, s4 = Math.min(c3, Math.max(0, t4.cropY)), l = a.getActiveAnchor(), u2 = !(l.indexOf("middle") >= 0 || l.indexOf("center") >= 0), g3 = !u2 && o2 < 1 && se.current.cropHeight > Z2 / _2.height;
    let f2 = u2 ? t4.cropWidth : t4.cropWidth * o2;
    g3 && (f2 = t4.cropWidth);
    const m2 = !u2 && i < 1 && se.current.cropWidth > V2 / _2.width;
    let p2 = u2 ? t4.cropHeight : t4.cropHeight * i;
    m2 && (p2 = t4.cropHeight), N2 && (f2 = t4.cropWidth, p2 = t4.cropHeight), t4.set({ cropX: d4, cropY: s4, x: n.x(), y: n.y(), width: n.width() * o2, height: n.height() * i, rotation: e6.target.rotation(), cropWidth: Math.min(f2, 1 - d4), cropHeight: Math.min(p2, 1 - s4) });
  }, onTransformEnd: (e6) => {
    const r2 = e6.currentTarget;
    t4.set({ width: r2.width(), height: r2.height(), x: r2.x(), y: r2.y(), rotation: e6.target.rotation(), cropWidth: V2 / _2.width, cropHeight: Z2 / _2.height }), m(false);
  } }), import_react3.default.createElement(Rect, { x: t4.a.x, y: t4.a.y, width: Math.max(t4.a.width - t4.borderSize, 0), height: Math.max(t4.a.height - t4.borderSize, 0), opacity: le, offsetX: -t4.borderSize / 2, offsetY: -t4.borderSize / 2, stroke: t4.borderColor, strokeWidth: t4.borderSize, listening: false, visible: !!t4.borderSize, rotation: t4.rotation, cornerRadius: Math.max(0, q - t4.borderSize), hideInExport: !t4.showInExport }), !h3.isPlaying && import_react3.default.createElement(Image, { image: S2 ? E2 : y, x: t4.a.x, y: t4.a.y, offsetX: -t4.a.width / 2 + 15 / h3.scale, offsetY: -t4.a.height / 2 + 15 / h3.scale, rotation: t4.a.rotation, width: 30 / h3.scale, height: 30 / h3.scale, hideInExport: true, onClick: () => X2(!S2), onTap: () => X2(!S2) }), t4._cropModeEnabled && import_react3.default.createElement(Portal, { selector: ".page-abs-container", enabled: true }, import_react3.default.createElement(Rect, { x: -window.innerWidth / h3.scale, y: -window.innerWidth / h3.scale, width: window.innerWidth / h3.scale * 3, height: window.innerWidth / h3.scale * 3, fill: "rgba(0,0,0,0.3)" }), import_react3.default.createElement(Image, { listening: false, image: K2, x: t4.a.x, y: t4.a.y, width: t4.a.width, height: t4.a.height, rotation: t4.a.rotation, shadowEnabled: t4.shadowEnabled, shadowBlur: t4.shadowBlur }), import_react3.default.createElement(Group, { x: t4.a.x, y: t4.a.y, rotation: t4.a.rotation, scaleX: te, scaleY: te }, import_react3.default.createElement(Image, { image: _2, ref: I3, opacity: 0.4, draggable: true, x: -t4.cropX * _2.width, y: -t4.cropY * _2.height, onDragMove: ie, onTransform: ie }), import_react3.default.createElement(Transformer, { ref: oe, anchorSize: 20, enabledAnchors: ["top-left", "top-right", "bottom-left", "bottom-right"], boundBoxFunc: (e6, t5) => t5.width < 5 || t5.height < 5 ? e6 : t5, rotateEnabled: false, borderEnabled: false, anchorCornerRadius: 10, anchorStrokeWidth: 2, borderStrokeWidth: 2 }), import_react3.default.createElement(Rect, { width: V2, height: Z2, ref: re, listening: false, onTransform: (e6) => {
    e6.target.x() < -t4.cropX * _2.width - 1e-9 && (e6.target.x(-t4.cropX * _2.width), e6.target.scaleX(1)), e6.target.y() < -t4.cropY * _2.height - 1e-9 && (e6.target.y(-t4.cropY * _2.height), e6.target.scaleY(1));
    const r2 = Math.min(1, Math.max(0, t4.cropX + e6.target.x() / _2.width)), n = Math.min(1, Math.max(0, e6.target.y() / _2.height + t4.cropY)), o2 = e6.target.width() * e6.target.scaleX(), i = e6.target.height() * e6.target.scaleY(), a = Math.min(1 - r2, o2 / _2.width), h4 = Math.min(1 - n, i / _2.height), d4 = e6.target.getAbsolutePosition(e6.target.getParent().getParent());
    e6.target.scale({ x: 1, y: 1 }), e6.target.position({ x: 0, y: 0 }), t4.set({ x: d4.x, y: d4.y, cropX: r2, cropY: n, cropWidth: a, cropHeight: h4, width: Math.min(o2 * te, _2.width * (1 - r2) * te), height: Math.min(i * te, _2.height * (1 - n) * te) });
  } }), import_react3.default.createElement(Transformer, { ref: ne, enabledAnchors: ["top-left", "top-right", "bottom-left", "bottom-right"], boundBoxFunc: (e6, t5) => t5.width < 5 || t5.height < 5 ? e6 : t5, keepRatio: false, rotateEnabled: false, anchorFill: "rgb(240, 240, 240)", anchorStrokeWidth: 2, borderStrokeWidth: 2, visible: t4.resizable }))));
});

// node_modules/polotno/canvas/figure-element.js
var import_react4 = __toESM(require_react(), 1);
var h = {};
var FigureElement = observer(({ element: l, store: c3 }) => {
  const d3 = l.selectable || "admin" === c3.role, g2 = isTouchDevice(), m = c3.selectedShapes.indexOf(l) >= 0 && l.selectable, p2 = Math.min(l.strokeWidth, l.width / 2, l.height / 2), f2 = Math.max(0, Math.min(l.width / 2, l.height / 2, l.cornerRadius)), w2 = useColor(l, l.a.fill, "fill"), u2 = Object.assign(Object.assign({ width: l.a.width, height: l.a.height }, w2), { cornerRadius: f2, opacity: l.animated("opacity"), shadowEnabled: l.shadowEnabled, shadowBlur: l.shadowBlur, shadowOffsetX: l.shadowOffsetX, shadowOffsetY: l.shadowOffsetY, shadowColor: l.shadowColor, shadowOpacity: l.shadowOpacity, preventDefault: !g2 || m, hideInExport: !l.showInExport }), b4 = useColor(l, l.stroke, "stroke"), y3 = Object.assign(Object.assign({ visible: p2 > 0, x: p2 / 2, y: p2 / 2, width: l.a.width - p2, height: l.a.height - p2 }, b4), { strokeWidth: p2, cornerRadius: Math.max(0, f2 - p2), dash: l.dash.map((e6) => e6 * p2), opacity: l.animated("opacity"), hideInExport: !l.showInExport, listening: false }), x2 = (E3 = l.subType, h[E3] || (h[E3] = (k = subTypeToPathDataFunc(E3), observer(({ element: t4, fillProps: o2, strokeProps: i }) => {
    let n = k({ width: t4.a.width, height: t4.a.height, cornerRadius: t4.cornerRadius }), h3 = 1, l2 = 1;
    "string" != typeof n && (h3 = n.scaleX, l2 = n.scaleY, n = n.path);
    const c4 = import_react4.default.useRef(null);
    return import_react4.default.createElement(import_react4.default.Fragment, null, import_react4.default.createElement(Rect, { width: t4.width, height: t4.height, fill: "transparent" }), import_react4.default.createElement(Path, Object.assign({}, o2, { ref: c4, data: n, scaleX: h3, scaleY: l2 })), import_react4.default.createElement(Group, { clipFunc: (e6) => {
      const t5 = c4.current;
      if (t5) {
        var a = t5.dataArray;
        e6.beginPath();
        for (var r2 = 0; r2 < a.length; r2++) {
          var s4 = a[r2].command, o3 = a[r2].points;
          switch (s4) {
            case "L":
              e6.lineTo(o3[0], o3[1]);
              break;
            case "M":
              e6.moveTo(o3[0], o3[1]);
              break;
            case "C":
              e6.bezierCurveTo(o3[0], o3[1], o3[2], o3[3], o3[4], o3[5]);
              break;
            case "Q":
              e6.quadraticCurveTo(o3[0], o3[1], o3[2], o3[3]);
              break;
            case "A":
              var i2 = o3[0], n2 = o3[1], h4 = o3[2], l3 = o3[3], d4 = o3[4], g3 = o3[5], m2 = o3[6], p3 = o3[7], f3 = h4 > l3 ? h4 : l3, w3 = h4 > l3 ? 1 : h4 / l3, u3 = h4 > l3 ? l3 / h4 : 1;
              e6.translate(i2, n2), e6.rotate(m2), e6.scale(w3, u3), e6.arc(0, 0, f3, d4, d4 + g3, 1 - p3), e6.scale(1 / w3, 1 / u3), e6.rotate(-m2), e6.translate(-i2, -n2);
              break;
            case "z":
              e6.closePath();
          }
        }
      }
    }, scaleX: h3, scaleY: l2 }, import_react4.default.createElement(Path, Object.assign({}, i, { x: 0, y: 0, data: n, strokeWidth: 2 * i.strokeWidth, dash: i.dash.map((e6) => e6) }))));
  }))), h[E3] || Group);
  var E3, k;
  return import_react4.default.createElement(import_react4.default.Fragment, null, import_react4.default.createElement(Group, { id: l.id, x: l.a.x, y: l.a.y, rotation: l.a.rotation, opacity: l.a.opacity, listening: d3, draggable: g2 ? l.draggable && m : l.draggable, name: "element", onDragMove: (e6) => {
    l.set({ x: e6.target.x(), y: e6.target.y() });
  }, onDragEnd: (e6) => {
    l.set({ x: e6.target.x(), y: e6.target.y() });
  }, onTransform: (e6) => {
    const t4 = e6.target.scale();
    e6.target.scaleX(1), e6.target.scaleY(1), l.set({ width: l.width * t4.x, height: l.height * t4.y, x: e6.target.x(), y: e6.target.y(), rotation: e6.target.rotation() });
  } }, import_react4.default.createElement(x2, { element: l, fillProps: u2, strokeProps: y3 })));
});

// node_modules/polotno/canvas/gif-element.js
var import_react5 = __toESM(require_react(), 1);
var import_konva3 = __toESM(require_lib(), 1);
var import_gifuct_js = __toESM(require_lib3(), 1);
function p(e6, t4, r2) {
  const a = t4.getContext("2d"), i = r2.getContext("2d");
  if (!a || !i) {
    return;
  }
  2 === e6.disposalType && a.clearRect(0, 0, t4.width, t4.height), r2.width = e6.width, r2.height = e6.height;
  const n = i.createImageData(e6.width, e6.height);
  n.data.set(e6.patch), i.putImageData(n, 0, 0), a.drawImage(r2, e6.left, e6.top);
}
var w = observer(({ element: t4 }) => {
  const r2 = Math.min(30, t4.width / 4, t4.height / 4), a = import_react5.default.useRef(null);
  return import_react5.default.useEffect(() => {
    const e6 = a.current;
    if (!e6) {
      return;
    }
    const t5 = new import_konva3.default.Animation((t6) => {
      e6.rotate(((null == t6 ? void 0 : t6.timeDiff) || 0) / 2);
    }, e6.getLayer());
    return t5.start(), () => {
      t5.stop();
    };
  }, []), import_react5.default.createElement(Group, { x: t4.a.x, y: t4.a.y, rotation: t4.a.rotation, listening: false, opacity: t4.a.opacity, hideInExport: !t4.showInExport }, import_react5.default.createElement(Rect, { width: t4.width, height: t4.height, fill: "rgba(124, 173, 212, 0.8)" }), import_react5.default.createElement(Arc, { ref: a, x: t4.width / 2, y: t4.height / 2, fill: "white", outerRadius: Math.abs(r2), innerRadius: Math.max(1, r2 - 5), angle: 270 }));
});
var y2 = observer(({ element: t4 }) => {
  const r2 = Math.max(10, Math.min(30, t4.width / 22));
  return import_react5.default.createElement(Group, { x: t4.a.x, y: t4.a.y, rotation: t4.a.rotation, listening: false, opacity: t4.a.opacity, hideInExport: !t4.showInExport }, import_react5.default.createElement(Rect, { width: t4.width, height: t4.height, fill: "rgba(223, 102, 102, 0.8)" }), import_react5.default.createElement(Text, { text: "Cannot load the GIF...", fontSize: r2, width: t4.width, height: t4.height, align: "center", fill: "white", verticalAlign: "middle", padding: 5 }));
});
var GifElement = observer(({ element: t4, store: i }) => {
  var o2;
  const [h3, x2] = import_react5.default.useState(false), E3 = i.selectedShapes.indexOf(t4) >= 0 && t4.selectable, b4 = import_react5.default.useRef(null), v2 = import_react5.default.useRef(), [I3, S2, M3, R2] = function(t5) {
    const [r2, a] = import_react5.default.useState([]), [i2, n] = import_react5.default.useState(0), [o3, h4] = import_react5.default.useState("loading"), [d3, l] = import_react5.default.useState({ width: 0, height: 0 });
    return import_react5.default.useEffect(() => {
      (async () => {
        try {
          const e6 = await fetch(t5), r3 = await e6.arrayBuffer(), i3 = (0, import_gifuct_js.parseGIF)(r3), o4 = (0, import_gifuct_js.decompressFrames)(i3, true), d4 = i3.lsd.width, g2 = i3.lsd.height;
          l({ width: d4, height: g2 });
          const m = o4.map((e7) => ({ patch: new Uint8ClampedArray(e7.patch), delay: e7.delay, width: e7.dims.width, height: e7.dims.height, left: e7.dims.left, top: e7.dims.top, disposalType: e7.disposalType })), f2 = m.reduce((e7, t6) => e7 + t6.delay, 0);
          a(m), n(f2), h4("loaded");
        } catch (e6) {
          console.error("Failed to load GIF:", e6), h4("failed");
        }
      })();
    }, [t5]), [r2, i2, d3, o3];
  }(t4.src);
  useImageLoader(R2, t4.src, t4.id), import_react5.default.useEffect(() => (v2.current = document.createElement("canvas"), () => {
    v2.current && import_konva3.default.Util.releaseCanvas(v2.current);
  }), []), import_react5.default.useEffect(() => {
    if ("loaded" === R2 && v2.current && (v2.current.width = M3.width, v2.current.height = M3.height, I3.length > 0)) {
      const e6 = v2.current.getContext("2d");
      if (e6) {
        e6.clearRect(0, 0, M3.width, M3.height);
        const t5 = document.createElement("canvas");
        p(I3[0], v2.current, t5);
      }
    }
  }, [M3, R2, I3]), import_react5.default.useEffect(() => {
    if (!I3.length || !v2.current) {
      return;
    }
    const e6 = v2.current;
    e6.width = M3.width, e6.height = M3.height;
    const a = document.createElement("canvas"), n = e6.getContext("2d");
    n && n.clearRect(0, 0, e6.width, e6.height);
    let o3 = -1;
    p(I3[0], e6, a), D2(), o3 = 0;
    const h4 = (t5) => {
      const r2 = ((e7) => {
        const t6 = e7 % S2;
        let r3 = 0;
        for (let a2 = 0; a2 < I3.length; a2++) {
          if (r3 += I3[a2].delay, r3 > t6) {
            return a2;
          }
        }
        return 0;
      })(t5);
      r2 !== o3 && (p(I3[r2], e6, a), D2(), b4.current.getLayer().draw(), o3 = r2);
    };
    if (i.isPlaying || t4.page._exportingOrRendering) {
      return autorun(() => {
        h4(i.currentTime - t4.page.startTime);
      });
    }
    {
      const e7 = window.setInterval(() => {
        h4(i.currentTime || performance.now());
      }, 16);
      return () => {
        clearInterval(e7);
      };
    }
  }, [i.isPlaying, I3, S2, t4.page._exportingOrRendering]), import_react5.default.useEffect(() => {
    S2 && i.history.ignore(() => {
      t4.set({ duration: S2 });
    });
  }, [S2]);
  let { cropX: C3, cropY: T3, cropWidth: O2, cropHeight: z2 } = t4;
  "loaded" !== R2 && (C3 = T3 = 0, O2 = z2 = 1);
  const X2 = { x: M3.width * C3, y: M3.height * T3, width: M3.width * O2, height: M3.height * z2 }, Y2 = null !== (o2 = t4.cornerRadius) && void 0 !== o2 ? o2 : 0, [j2, D2] = useCornerRadiusAndCrop2(t4, v2.current, X2, i._elementsPixelRatio, Y2, h3 || t4._cropModeEnabled);
  import_react5.default.useLayoutEffect(() => {
    if (!h3 && !t4._cropModeEnabled && b4.current) {
      return applyFilter(b4.current, t4), autorun(() => {
        applyFilter(b4.current, t4);
      }, { delay: 100 });
    }
  }, [v2.current, h3, O2, z2, t4._cropModeEnabled, M3.width, M3.height]);
  const _2 = "loading" === R2, k = "failed" === R2, F2 = _2 || k ? 0 : t4.a.opacity;
  useFadeIn(b4, F2);
  const A = t4.selectable || "admin" === i.role, B2 = isTouchDevice();
  return import_react5.default.createElement(import_react5.default.Fragment, null, _2 && import_react5.default.createElement(w, { element: t4 }), k && import_react5.default.createElement(y2, { element: t4 }), import_react5.default.createElement(Image, { ref: b4, name: "element", id: t4.id, image: j2, x: t4.a.x, y: t4.a.y, width: t4.a.width || 1, height: t4.a.height || 1, rotation: t4.a.rotation, opacity: F2, shadowEnabled: t4.shadowEnabled, shadowBlur: t4.shadowBlur, shadowOffsetX: t4.shadowOffsetX, shadowOffsetY: t4.shadowOffsetY, shadowColor: t4.shadowColor, shadowOpacity: t4.shadowOpacity, customCrop: X2, listening: A, draggable: B2 ? t4.draggable && E3 : t4.draggable, preventDefault: !B2 || E3, hideInExport: !t4.showInExport, onDragMove: (e6) => {
    t4.set({ x: e6.target.x(), y: e6.target.y() });
  }, onDragEnd: (e6) => {
    t4.set({ x: e6.target.x(), y: e6.target.y() });
  }, onTransformStart: () => x2(true), onTransform: (e6) => {
    const r2 = e6.currentTarget, a = Math.abs(r2.scaleX() - 1) < 1e-7 ? 1 : r2.scaleX(), i2 = Math.abs(r2.scaleY() - 1) < 1e-7 ? 1 : r2.scaleY();
    r2.scaleX(1), r2.scaleY(1), t4.set({ x: r2.x(), y: r2.y(), width: r2.width() * a, height: r2.height() * i2, rotation: r2.rotation() });
  }, onTransformEnd: () => x2(false) }), import_react5.default.createElement(Rect, { x: t4.a.x, y: t4.a.y, width: Math.max(t4.a.width - t4.borderSize, 0), height: Math.max(t4.a.height - t4.borderSize, 0), opacity: F2, offsetX: -t4.borderSize / 2, offsetY: -t4.borderSize / 2, stroke: t4.borderColor, strokeWidth: t4.borderSize, listening: false, visible: !!t4.borderSize, rotation: t4.rotation, cornerRadius: Math.max(0, Y2 - t4.borderSize), hideInExport: !t4.showInExport }));
});

// node_modules/polotno/canvas/element.js
var u = { text: TextElement, image: ImageElement, svg: ImageElement, line: LineElement, video: VideoElement, figure: FigureElement, group: observer((t4) => {
  const { element: o2, store: n } = t4, { children: r2 } = o2, i = o2.selectable || "admin" === n.role;
  return import_react6.default.createElement(Group, { opacity: o2.opacity, listening: i, hideInExport: !o2.showInExport }, r2.map((o3) => import_react6.default.createElement(h2, Object.assign({}, t4, { key: o3.id, store: n, element: o3 }))));
}), gif: GifElement };
function registerShapeComponent(e6, t4) {
  u[e6] = t4;
}
var g = (e6, t4) => {
  const n = [];
  forEveryChild(e6, (e7) => {
    "group" !== e7.type && n.push(e7.a);
  });
  const r2 = [];
  n.forEach((e7) => {
    const t5 = [{ x: 0, y: 0 }, { x: 0 + e7.width, y: 0 }, { x: 0 + e7.width, y: 0 + e7.height }, { x: 0, y: 0 + e7.height }], n2 = new import_konva4.default.Transform();
    n2.translate(e7.x, e7.y), n2.rotate(import_konva4.default.Util.degToRad(e7.rotation)), t5.forEach((e8) => {
      const t6 = n2.point(e8);
      r2.push(t6);
    });
  });
  const i = new import_konva4.default.Transform();
  i.rotate(-import_konva4.default.Util.degToRad(t4));
  let m = 1 / 0, l = 1 / 0, s4 = -1 / 0, a = -1 / 0;
  r2.forEach((e7) => {
    const t5 = i.point(e7);
    m = Math.min(m, t5.x), l = Math.min(l, t5.y), s4 = Math.max(s4, t5.x), a = Math.max(a, t5.y);
  }), i.invert();
  const c3 = i.point({ x: m, y: l });
  return { x: c3.x, y: c3.y, width: s4 - m, height: a - l, rotation: t4 };
};
var h2 = observer((t4) => {
  const { element: n, store: r2 } = t4, [m, l] = import_react6.default.useState(false), s4 = r2.selectedElements.indexOf(n) >= 0 && n.selectable, a = "group" === n.parent.type, c3 = ((t5) => {
    const [n2, r3] = import_react6.default.useState(null);
    return import_react6.default.useEffect(() => {
      const e6 = setTimeout(() => {
        const e7 = t5.page.id, n3 = import_konva4.default.stages.find((t6) => t6.getAttr("pageId") === e7);
        n3 || console.error("No stage is found for element", t5.id), r3(n3);
      });
      return () => clearTimeout(e6);
    }, [t5.id]), n2;
  })(n), p2 = null == c3 ? void 0 : c3.findOne("Transformer");
  import_react6.default.useEffect(() => {
    if (c3) {
      const e6 = (e7) => {
        const t6 = e7.target.findAncestor(".element", true), o2 = r2.getElementById(null == t6 ? void 0 : t6.id()), i = null == o2 ? void 0 : o2.top, m2 = null == i ? void 0 : i.id;
        l(m2 === n.id);
      };
      c3.on("mouseover", e6);
      const t5 = () => {
        l(false);
      };
      return c3.on("mouseleave", t5), () => {
        c3.off("mouseover", e6), c3.off("mouseleave", t5);
      };
    }
  }, [c3]);
  let h3 = u[t4.element.type];
  return "text" === t4.element.type && flags.htmlRenderEnabled && (h3 = HTMLElement), t4.element.visible ? h3 ? import_react6.default.createElement(import_react6.default.Fragment, null, import_react6.default.createElement(h3, Object.assign({}, t4)), (m || s4) && !a && import_react6.default.createElement(Highlighter, { element: "group" === n.type ? { a: g(n, (null == p2 ? void 0 : p2.rotation()) || 0) } : n })) : (console.error("Can not find component for " + t4.element.type), null) : null;
});
var element_default = h2;

// node_modules/polotno/canvas/page.js
var import_react7 = __toESM(require_react(), 1);
var import_use_image3 = __toESM(require_use_image(), 1);
var import_konva5 = __toESM(require_lib(), 1);

// node_modules/polotno/utils/crop.js
function getCrop(t4, h3, e6 = "scale") {
  const i = h3.width / h3.height;
  let o2, r2;
  i >= t4.width / t4.height ? (o2 = t4.width, r2 = t4.width / i) : (o2 = t4.height * i, r2 = t4.height);
  let d3 = 0, g2 = 0;
  return "left-top" === e6 ? (d3 = 0, g2 = 0) : "left-middle" === e6 ? (d3 = 0, g2 = (t4.height - r2) / 2) : "left-bottom" === e6 ? (d3 = 0, g2 = t4.height - r2) : "center-top" === e6 ? (d3 = (t4.width - o2) / 2, g2 = 0) : "center-middle" === e6 ? (d3 = (t4.width - o2) / 2, g2 = (t4.height - r2) / 2) : "center-bottom" === e6 ? (d3 = (t4.width - o2) / 2, g2 = t4.height - r2) : "right-top" === e6 ? (d3 = t4.width - o2, g2 = 0) : "right-middle" === e6 ? (d3 = t4.width - o2, g2 = (t4.height - r2) / 2) : "right-bottom" === e6 ? (d3 = t4.width - o2, g2 = t4.height - r2) : "scale" === e6 ? (d3 = 0, g2 = 0, o2 = t4.width, r2 = t4.height) : console.error(new Error("Unknown clip position property - " + e6)), { cropX: d3, cropY: g2, cropWidth: o2, cropHeight: r2 };
}

// node_modules/polotno/canvas/page.js
var e5 = function(e6, t4) {
  var n = {};
  for (var i in e6) {
    Object.prototype.hasOwnProperty.call(e6, i) && t4.indexOf(i) < 0 && (n[i] = e6[i]);
  }
  if (null != e6 && "function" == typeof Object.getOwnPropertySymbols) {
    var o2 = 0;
    for (i = Object.getOwnPropertySymbols(e6); o2 < i.length; o2++) {
      t4.indexOf(i[o2]) < 0 && Object.prototype.propertyIsEnumerable.call(e6, i[o2]) && (n[i[o2]] = e6[i[o2]]);
    }
  }
  return n;
};
var M2 = import_konva5.default.DD._drag;
window.removeEventListener("mousemove", M2), import_konva5.default.DD._drag = function(e6) {
  runInAction(() => {
    M2.call(this, e6);
  });
}, window.addEventListener("mousemove", import_konva5.default.DD._drag);
var j = new import_konva5.default.Group();
var D = 20;
j.add(new import_konva5.default.Rect({ width: D, height: D, fill: "white" })), j.add(new import_konva5.default.Path({ scaleX: D / 24, scaleY: D / 24, data: "M4.98313549,11.0001422 C5.49589839,10.9914935 5.92501998,11.3703506 5.99116425,11.8666444 L5.99985778,11.9831355 L6.00348884,12.2068855 C6.11245031,15.4321748 8.76323537,17.9999971 11.9999971,17.9999971 C12.1869612,17.9999971 12.3726725,17.9914753 12.5567465,17.9745765 L12.2928932,17.7071068 C11.9023689,17.3165825 11.9023689,16.6834175 12.2928932,16.2928932 C12.6834175,15.9023689 13.3165825,15.9023689 13.7071068,16.2928932 L15.7071068,18.2928932 C16.0976311,18.6834175 16.0976311,19.3165825 15.7071068,19.7071068 L13.7071068,21.7071068 C13.3165825,22.0976311 12.6834175,22.0976311 12.2928932,21.7071068 C11.9023689,21.3165825 11.9023689,20.6834175 12.2928932,20.2928932 L12.6111505,19.9769552 C12.4086045,19.9922816 12.2047796,19.9999971 11.9999971,19.9999971 C7.7687005,19.9999971 4.28886152,16.7094374 4.01666425,12.5105203 L4.00420123,12.2575143 L4.00014222,12.0168645 C3.9908282,11.4646583 4.43092928,11.0094562 4.98313549,11.0001422 Z M11.7071068,2.29289322 C12.0675907,2.65337718 12.0953203,3.22060824 11.7902954,3.61289944 L11.7071068,3.70710678 L11.3891629,4.0230186 C11.5916051,4.00770767 11.7953244,4 12,4 C16.418278,4 20,7.581722 20,12 C20,12.5522847 19.5522847,13 19,13 C18.4477153,13 18,12.5522847 18,12 C18,8.6862915 15.3137085,6 12,6 C11.8129339,6 11.6271216,6.00853145 11.4429483,6.02544919 L11.7071068,6.29289322 C12.0976311,6.68341751 12.0976311,7.31658249 11.7071068,7.70710678 C11.3466228,8.06759074 10.7793918,8.09532028 10.3871006,7.79029539 L10.2928932,7.70710678 L8.29289322,5.70710678 C7.93240926,5.34662282 7.90467972,4.77939176 8.20970461,4.38710056 L8.29289322,4.29289322 L10.2928932,2.29289322 C10.6834175,1.90236893 11.3165825,1.90236893 11.7071068,2.29289322 Z", fill: "black" }));
var I2 = j.toCanvas({ pixelRatio: 2, width: D, height: D });
var T2 = { enabledAnchors: ["top-left", "top-center", "top-right", "middle-left", "bottom-left", "bottom-right", "bottom-center", "middle-right"], borderEnabled: true, rotateEnabled: true, rotationSnaps: [0, 45, 90, 135, 180, 225, 270, 315], ignoreStroke: true, flipEnabled: false, anchorStrokeWidth: 2, borderStrokeWidth: 2, rotateAnchorOffset: 30, anchorStyleFunc: (e6) => {
  if (e6.hasName("rotater")) {
    const t4 = 20;
    e6.setAttrs({ width: t4, height: t4, cornerRadius: t4 / 2, offsetX: t4 / 2, offsetY: t4 / 2, fillPatternImage: I2, fillPatternScaleX: t4 / D / 2, fillPatternScaleY: t4 / D / 2, fillPriority: "pattern", fillPatternRepeat: "no-repeat" });
  }
} };
var setTransformerStyle = (e6) => {
  Object.assign(T2, e6);
};
var W = { text: { enabledAnchors: ["top-left", "top-right", "middle-left", "bottom-left", "bottom-right", "middle-right"] }, svg: { enabledAnchors: ["top-left", "top-right", "bottom-left", "bottom-right"] }, gif: { enabledAnchors: ["top-left", "top-right", "bottom-left", "bottom-right"] }, line: { enabledAnchors: [], borderEnabled: false, rotateEnabled: false }, image: { enabledAnchors: ["top-left", "top-right", "bottom-left", "bottom-right"] }, many: { enabledAnchors: ["top-left", "top-right", "bottom-left", "bottom-right"] }, group: { enabledAnchors: ["top-left", "top-right", "bottom-left", "bottom-right"] } };
function registerTransformerAttrs(e6, t4) {
  W[e6] = W[e6] || t4, Object.assign(W[e6], t4);
}
var B = (e6) => import_react7.default.createElement(Rect, Object.assign({}, e6, { preventDefault: false }));
var F = (n) => {
  var { url: i } = n, o2 = e5(n, ["url"]);
  const [r2, l] = (0, import_use_image3.default)(i, "anonymous"), s4 = r2 ? getCrop(r2, { width: o2.width, height: o2.height }, "center-middle") : {};
  return useImageLoader(l, i, "page background"), import_react7.default.createElement(Image, Object.assign({ image: r2 }, o2, s4));
};
var G = (e6) => {
  const n = useColor({ fill: e6.fill, a: { width: e6.width, height: e6.height } });
  return import_react7.default.createElement(Rect, Object.assign({}, e6, n));
};
var _ = (n) => {
  const { background: i, scale: o2, borderColor: r2 } = n, l = e5(n, ["background", "scale", "borderColor"]), a = import_react7.default.useMemo(() => !!import_konva5.default.Util.colorToRGBA(i) || isGradient(i), [i]), s4 = import_react7.default.useMemo(() => {
    const e6 = document.createElement("canvas"), t4 = 30;
    e6.width = 60, e6.height = 60;
    const n2 = e6.getContext("2d");
    return n2 && (n2.fillStyle = "black", n2.fillRect(t4, 0, t4, t4), n2.fillRect(0, t4, t4, t4)), e6;
  }, []);
  return import_react7.default.createElement(import_react7.default.Fragment, null, import_react7.default.createElement(Rect, Object.assign({ fillPatternImage: s4 }, l, { opacity: 0.1, hideInExport: true })), a ? import_react7.default.createElement(G, Object.assign({ fill: i }, l)) : import_react7.default.createElement(F, Object.assign({ url: i }, l)));
};
var z = observer(({ selection: e6, fill: n = "rgba(0, 161, 255, 0.3)", stroke: i = "rgb(0, 161, 255)", strokeWidth: o2 = 1 }) => e6.visible ? import_react7.default.createElement(Rect, { name: "selection", x: Math.min(e6.x1, e6.x2), y: Math.min(e6.y1, e6.y2), width: Math.abs(e6.x1 - e6.x2), height: Math.abs(e6.y1 - e6.y2), fill: n, stroke: i, strokeWidth: o2 }) : null);
var N = observer(({ x: e6, y: n, width: i, height: o2, rotation: r2, anchor: l, store: a, tagFill: c3, textFill: d3 }) => {
  const m = getClientRect({ x: e6, y: n, width: i, height: o2, rotation: import_konva5.default.Util.radToDeg(r2) });
  if (void 0 === l) {
    return null;
  }
  const h3 = (o2 / 2 + 70) * Math.cos(r2 - Math.PI / 2), p2 = (o2 / 2 + 70) * Math.sin(r2 - Math.PI / 2), f2 = pxToUnitRounded({ unit: a.unit, dpi: a.dpi, px: i / a.scale, precious: "px" === a.unit ? 0 : 1 }) + " x " + pxToUnitRounded({ unit: a.unit, dpi: a.dpi, px: o2 / a.scale, precious: "px" === a.unit ? 0 : 1 }) + ("px" === a.unit ? "" : " " + a.unit);
  return import_react7.default.createElement(import_react7.default.Fragment, null, import_react7.default.createElement(Label, { x: (m.minX + m.maxX) / 2 + h3, y: (m.minY + m.maxY) / 2 + p2, offsetX: 14, offsetY: 14, visible: "rotater" === l }, import_react7.default.createElement(Tag, { cornerRadius: 5, fill: c3 || "rgb(0, 161, 255)" }), import_react7.default.createElement(Text, { align: "center", verticalAlign: "middle", fill: d3 || "white", padding: 8, text: Math.round(import_konva5.default.Util.radToDeg(r2)).toString() + "°" })), import_react7.default.createElement(Label, { x: (m.minX + m.maxX) / 2, y: m.maxY + 20, visible: "rotater" !== l }, import_react7.default.createElement(Tag, { cornerRadius: 5, fill: c3 || "rgb(0, 161, 255)", pointerDirection: "up", pointerHeight: 0, pointerWidth: 0 }), import_react7.default.createElement(Text, { align: "center", verticalAlign: "middle", fill: d3 || "white", padding: 8, text: f2 })));
});
var H = observer(({ elements: e6, store: n }) => {
  const i = e6.filter((e7) => e7.alwaysOnTop), o2 = e6.filter((e7) => !e7.alwaysOnTop).concat(i);
  return import_react7.default.createElement(import_react7.default.Fragment, null, o2.map((e7) => import_react7.default.createElement(element_default, { key: e7.id, store: n, element: e7, onClick: () => {
    console.warn("Polotno warning: onClick callback is deprecated. Just stop using it. Polotno will do selection automatically.");
  } })));
});
var useContextMenu = ({ store: e6 }) => {
  const [n, i] = import_react7.default.useState(false), [o2, r2] = import_react7.default.useState({ x: 0, y: 0 }), l = import_react7.default.useCallback((e7) => {
    i(true), r2(e7);
  }, []);
  return { open: l, close: import_react7.default.useCallback(() => {
    i(false);
  }, []), props: { isOpen: n, offset: o2, setIsOpen: i } };
};
var V = null;
var registerNextDomDrop = (e6) => {
  V = e6;
};
var Z = atob("UG9sb3RubyBmcmVlIGxpY2Vuc2UgbGltaXRhdGlvbiBleGNlZWRlZCAtIFBsZWFzZSB1cGdyYWRlIHlvdXIgYWNjb3VudC4=");
var K = atob("cmVk");
var U = atob("djAuOS4y");
var J = (e6) => import_react7.default.createElement(import_react7.default.Fragment, null, import_react7.default.createElement(Label, { fill: K, height: 200 }, import_react7.default.createElement(Tag, { fill: K }), import_react7.default.createElement(Text, Object.assign({}, e6, { fill: "white", text: Z, height: void 0, padding: 10, fontSize: 20 }))));
var page_default = observer(({ store: e6, page: n, width: r2, height: a, pageControlsEnabled: f2, backColor: x2, pageBorderColor: E3, activePageBorderColor: y3, components: S2, bleedColor: P, altCloneEnabled: R2, viewportSize: M3, selectionRectFill: j2, selectionRectStroke: D2, selectionRectStrokeWidth: I3, snapGuideStroke: F2, snapGuideStrokeWidth: G2, snapGuideDash: Z2, transformLabelFill: K2, transformLabelTextFill: $ }) => {
  const q = e6.bleedVisible ? n.bleed : 0, Q = n.computedWidth + 2 * q, ee = n.computedHeight + 2 * q, te = (r2 - Q * e6.scale) / 2, ne = (a - ee * e6.scale) / 2, ie = import_react7.default.useRef(null), oe = import_react7.default.useRef(null), re = import_react7.default.useRef(null), le = null == f2 || f2, [ae, se] = import_react7.default.useState(null), [ce, de] = import_react7.default.useState({}), me = useContextMenu({ store: e6 }), he = e6.selectedElements.find((e7) => e7._cropModeEnabled), ge = e6.selectedShapes.filter((e7) => !e7.resizable).length > 0, ue = e6.selectedShapes.filter((e7) => !e7.draggable).length > 0, pe = e6.selectedElements.filter((e7) => !e7.visible).length > 0;
  import_react7.default.useLayoutEffect(() => {
    var t4, n2, i;
    if (!ie.current) {
      return;
    }
    const o2 = ie.current.getStage(), r3 = e6.selectedShapes.map((e7) => e7._cropModeEnabled ? null : o2.findOne("#" + e7.id)).filter((e7) => e7), l = 1 === e6.selectedElements.length && (null === (t4 = e6.selectedElements[0]) || void 0 === t4 ? void 0 : t4.type) || "many";
    W[l] ? (ie.current.setAttrs(Object.assign(Object.assign({}, T2), W[l])), "svg" !== l && "image" !== l && "gif" !== l || e6.selectedElements[0].keepRatio || ie.current.setAttrs({ enabledAnchors: T2.enabledAnchors }), "text" === l && flags.textVerticalResizeEnabled && ie.current.setAttrs({ enabledAnchors: null === (n2 = W.text.enabledAnchors) || void 0 === n2 ? void 0 : n2.concat(["bottom-center"]) })) : ie.current.setAttrs(T2), ge && ie.current.enabledAnchors([]), ue && ie.current.rotateEnabled(false), r3.find((e7) => null == e7 ? void 0 : e7.isDragging()) && r3.forEach((e7) => {
      e7.isDragging() || null == e7 || e7.startDrag();
    }), ie.current.nodes(r3), null === (i = ie.current.getLayer()) || void 0 === i || i.batchDraw();
  }, [e6.selectedShapes, he, ge, pe, ue]);
  const fe = useLocalObservable(() => ({ visible: false, x1: 0, y1: 0, x2: 0, y2: 0 })), be = import_react7.default.useRef(false), xe = isTouchDevice(), ve = action((e7) => {
    var t4, n2, i, o2;
    if (xe) {
      return;
    }
    be.current = false;
    const r3 = e7.target.findAncestor(".elements-container"), l = e7.target.findAncestor("Transformer"), a2 = e7.target.findAncestor(".page-abs-container");
    if (r3 || l || a2) {
      return;
    }
    const s4 = null === (t4 = e7.target.getStage()) || void 0 === t4 ? void 0 : t4.getPointerPosition();
    s4.x -= null === (n2 = e7.target.getStage()) || void 0 === n2 ? void 0 : n2.x(), s4.y -= null === (i = e7.target.getStage()) || void 0 === i ? void 0 : i.y(), s4 && (fe.visible = true, fe.x1 = s4.x, fe.y1 = s4.y, fe.x2 = s4.x, fe.y2 = s4.y, (null === (o2 = e7.target.getStage()) || void 0 === o2 ? void 0 : o2.getPointersPositions().length) >= 2 && (fe.visible = false));
  });
  (({ stageRef: e7, containerRef: n2, viewportSize: i }) => {
    import_react7.default.useEffect(() => {
      var t4;
      const i2 = null === (t4 = n2.current) || void 0 === t4 ? void 0 : t4.closest(".polotno-workspace-inner");
      function o2() {
        var t5;
        if (!e7.current) {
          return;
        }
        const o3 = null === (t5 = n2.current) || void 0 === t5 ? void 0 : t5.getBoundingClientRect(), r3 = null == i2 ? void 0 : i2.getBoundingClientRect(), l = Math.max(0, r3.left - o3.left - 100), a2 = Math.max(0, r3.top - o3.top - 100);
        e7.current.position({ x: -l, y: -a2 }), e7.current.container().style.transform = `translate(${l}px, ${a2}px)`;
      }
      return o2(), i2.addEventListener("scroll", o2), () => {
        i2.removeEventListener("scroll", o2);
      };
    }, [i.width, i.height]);
  })({ stageRef: oe, containerRef: re, viewportSize: M3 }), import_react7.default.useEffect(() => {
    const t4 = action((e7) => {
      var t5, n3, i, o2;
      if (!fe.visible) {
        return;
      }
      null === (t5 = oe.current) || void 0 === t5 || t5.setPointersPositions(e7);
      let r3 = null === (n3 = oe.current) || void 0 === n3 ? void 0 : n3.getPointerPosition();
      r3 ? (r3.x -= null === (i = oe.current) || void 0 === i ? void 0 : i.x(), r3.y -= null === (o2 = oe.current) || void 0 === o2 ? void 0 : o2.y()) : r3 = { x: fe.x2, y: fe.y2 }, fe.x2 = r3.x, fe.y2 = r3.y;
    }), n2 = action(() => {
      if (!fe.visible) {
        return;
      }
      if (!oe.current) {
        return;
      }
      const t5 = oe.current.findOne(".selection"), n3 = t5 ? t5.getClientRect() : { width: 0, height: 0, x: 0, y: 0 };
      if (n3.width && n3.height) {
        const t6 = [];
        oe.current.find(".element").forEach((i2) => {
          const o2 = i2.getClientRect(), r3 = e6.getElementById(i2.id()), l = null == r3 ? void 0 : r3.draggable, a2 = null == r3 ? void 0 : r3.selectable;
          import_konva5.default.Util.haveIntersection(n3, o2) && l && a2 && t6.push(r3.top.id);
        });
        const i = [...new Set(t6)];
        e6.selectElements(i);
      }
      fe.visible = false, be.current = true;
    });
    return window.addEventListener("mousemove", t4), window.addEventListener("touchmove", t4), window.addEventListener("mouseup", n2), window.addEventListener("touchend", n2), () => {
      window.removeEventListener("mousemove", t4), window.removeEventListener("touchmove", t4), window.removeEventListener("mouseup", n2), window.removeEventListener("touchend", n2);
    };
  }, []);
  const Ee = import_react7.default.useRef(false);
  import_react7.default.useEffect(() => {
    var e7;
    let t4;
    const n2 = null === (e7 = re.current) || void 0 === e7 ? void 0 : e7.closest(".polotno-workspace-inner"), i = () => {
      Ee.current = true, clearTimeout(t4), t4 = setTimeout(() => {
        Ee.current = false;
      }, 300);
    };
    return n2.addEventListener("scroll", i), () => {
      clearTimeout(t4), n2.removeEventListener("scroll", i);
    };
  }, []);
  const ye = (t4) => {
    if (e6.activePage !== n && n.select(), Ee.current) {
      return;
    }
    if (be.current) {
      return;
    }
    const i = t4.evt.ctrlKey || t4.evt.metaKey || t4.evt.shiftKey, o2 = t4.target.findAncestor(".elements-container"), r3 = t4.target.findAncestor(".page-abs-container"), l = t4.target.findAncestor("Transformer");
    if (!(i || o2 || l || r3)) {
      return void e6.selectElements([]);
    }
    const a2 = t4.target.findAncestor(".element", true), s4 = e6.getElementById(null == a2 ? void 0 : a2.id()), c3 = null == s4 ? void 0 : s4.top, d3 = null == c3 ? void 0 : c3.id, m = e6.selectedElementsIds.indexOf(d3) >= 0;
    d3 && i && !m ? e6.selectElements(e6.selectedElementsIds.concat([d3])) : d3 && i && m ? e6.selectElements(e6.selectedElementsIds.filter((e7) => e7 !== d3)) : !d3 || i || m || e6.selectElements([d3]);
  };
  useSnap(ie, e6, { stroke: F2, strokeWidth: G2, dash: Z2 });
  const we = e6.activePage === n, ke = null == S2 ? void 0 : S2.PageControls, Ye = null == S2 ? void 0 : S2.Tooltip, Xe = null == S2 ? void 0 : S2.ContextMenu, Se = 1 / e6.scale, Ce = 0 / e6.scale;
  return import_react7.default.createElement("div", { ref: re, onDragOver: (e7) => e7.preventDefault(), onDrop: (t4) => {
    if (t4.preventDefault(), !oe.current) {
      return;
    }
    oe.current.setPointersPositions(t4);
    const i = oe.current.findOne(".elements-container").getRelativePointerPosition(), o2 = oe.current.getPointerPosition(), r3 = oe.current.getAllIntersections(o2).map((e7) => e7.findAncestor(".element", true)).filter(Boolean), l = [...new Set(r3.reverse())].map((t5) => e6.getElementById(t5.id())), a2 = l[0];
    V && (V(i, a2, { elements: l, page: n }), V = null);
  }, style: { position: "relative", width: r2 + "px", height: a + "px", overflow: "hidden" }, className: "polotno-page-container" + (we ? " active-page" : "") }, import_react7.default.createElement(Stage, { ref: oe, width: Math.min(r2, M3.width + 200), height: Math.min(M3.height + 200, a), onClick: ye, onTap: ye, onContextMenu: (t4) => {
    t4.evt.preventDefault();
    const n2 = t4.target.findAncestor(".element", true), i = e6.getElementById(null == n2 ? void 0 : n2.id()), o2 = null == i ? void 0 : i.top, r3 = null == o2 ? void 0 : o2.id;
    r3 ? e6.selectedElementsIds.indexOf(r3) >= 0 || e6.selectElements([r3]) : e6.selectElements([]), me.open({ x: t4.evt.clientX, y: t4.evt.clientY });
  }, onMouseDown: ve, onMouseMove: (t4) => {
    if (!t4.evt.altKey && ae) {
      return void se(null);
    }
    if (!t4.evt.altKey) {
      return;
    }
    const i = t4.target.findAncestor(".element", true), o2 = null == i ? void 0 : i.id();
    if (!e6.selectedElements[0]) {
      return;
    }
    if (e6.selectedElementsIds.includes(o2)) {
      return;
    }
    const r3 = getTotalClientRect(e6.selectedShapes), l = o2 ? e6.getElementById(o2) : { x: 0, y: 0, width: n.computedWidth, height: n.computedHeight, rotation: 0 }, a2 = getClientRect(l), s4 = [];
    r3.minX > a2.maxX && s4.push({ distance: r3.minX - a2.maxX, box1: r3, box2: a2, points: [{ x: r3.minX, y: r3.minY + r3.height / 2 }, { x: a2.maxX, y: r3.minY + r3.height / 2 }, { x: a2.maxX, y: a2.minY + a2.height / 2 }] }), r3.maxX < a2.minX && s4.push({ distance: a2.minX - r3.maxX, box1: r3, box2: a2, points: [{ x: r3.maxX, y: r3.minY + r3.height / 2 }, { x: a2.minX, y: r3.minY + r3.height / 2 }, { x: a2.minX, y: a2.minY + a2.height / 2 }] }), r3.minY > a2.maxY && s4.push({ box1: r3, box2: a2, distance: r3.minY - a2.maxY, points: [{ x: r3.minX + r3.width / 2, y: r3.minY }, { x: r3.minX + r3.width / 2, y: a2.maxY }, { x: a2.minX + a2.width / 2, y: a2.maxY }] }), r3.maxY < a2.minY && s4.push({ box1: r3, box2: a2, distance: a2.minY - r3.maxY, points: [{ x: r3.minX + r3.width / 2, y: r3.maxY }, { x: r3.minX + r3.width / 2, y: a2.minY }, { x: a2.minX + a2.width / 2, y: a2.minY }] }), r3.minX >= a2.minX && r3.maxX <= a2.maxX && r3.minY >= a2.minY && r3.maxY <= a2.maxY && (s4.push({ distance: r3.minX - a2.minX, box1: r3, box2: a2, points: [{ x: r3.minX, y: r3.minY + r3.height / 2 }, { x: a2.minX, y: r3.minY + r3.height / 2 }, { x: a2.minX, y: a2.minY + a2.height / 2 }] }), s4.push({ distance: a2.maxX - r3.maxX, box1: r3, box2: a2, points: [{ x: r3.maxX, y: r3.minY + r3.height / 2 }, { x: a2.maxX, y: r3.minY + r3.height / 2 }, { x: a2.maxX, y: a2.minY + a2.height / 2 }] }), s4.push({ box1: r3, box2: a2, distance: r3.minY - a2.minY, points: [{ x: r3.minX + r3.width / 2, y: r3.minY }, { x: r3.minX + r3.width / 2, y: a2.minY }, { x: a2.minX + a2.width / 2, y: a2.minY }] }), s4.push({ box1: r3, box2: a2, distance: a2.maxY - r3.maxY, points: [{ x: r3.minX + r3.width / 2, y: r3.maxY }, { x: r3.minX + r3.width / 2, y: a2.maxY }, { x: a2.minX + a2.width / 2, y: a2.maxY }] })), JSON.stringify(ae) !== JSON.stringify(s4) && se(s4);
  }, onDragStart: (t4) => {
    var n2;
    const i = t4.target.findAncestor(".element", true);
    if (i) {
      const o2 = e6.getElementById(null == i ? void 0 : i.id()), r3 = null == o2 ? void 0 : o2.top, l = null == r3 ? void 0 : r3.id;
      !(e6.selectedElementsIds.indexOf(l) >= 0) && l && (e6.selectElements([l]), t4.target.stopDrag(), t4.target.startDrag(t4), null === (n2 = ie.current) || void 0 === n2 || n2.startDrag(t4));
    }
    ae && se(null);
  }, pageId: n.id, style: { position: "absolute", overflow: "hidden", top: 0, left: 0 } }, import_react7.default.createElement(Layer, null, import_react7.default.createElement(B, { width: r2, height: a, fill: x2 }), import_react7.default.createElement(Group, { x: te, y: ne, scaleX: e6.scale, scaleY: e6.scale, name: "page-container" }, import_react7.default.createElement(Group, { name: "page-container-2" }, import_react7.default.createElement(Group, { name: "page-background-group", x: q, y: q }, import_react7.default.createElement(_, { x: -n.bleed, y: -n.bleed, width: n.computedWidth + 2 * n.bleed, height: n.computedHeight + 2 * n.bleed, background: n.background, name: "page-background", preventDefault: false, scale: e6.scale })), import_react7.default.createElement(Group, { x: q, y: q, name: "elements-container", listening: !e6.isPlaying }, import_react7.default.createElement(Rect, { name: "elements-area", width: n.computedWidth, height: n.computedHeight, listening: false }), import_react7.default.createElement(H, { elements: n.children, store: e6 })), import_react7.default.createElement(Rect, { stroke: P, name: "bleed", strokeWidth: n.bleed, x: n.bleed / 2, y: n.bleed / 2, width: n.computedWidth + n.bleed, height: n.computedHeight + n.bleed, listening: false, visible: n.bleed > 0 && e6.bleedVisible, hideInExport: true }), ___() === U && import_react7.default.createElement(J, { name: "hit-detection", x: -Se / 2 - Ce, y: -Se / 2 - Ce, width: Q + Se + 2 * Ce, height: ee + Se + 2 * Ce }))), import_react7.default.createElement(Line, { name: "workspace-background", points: [0, 0, r2, 0, r2, a, 0, a, 0, 0, te, ne, te, a - ne, r2 - te, a - ne, r2 - te, ne, te, ne], listening: false, closed: true, fill: x2 }), import_react7.default.createElement(Group, { x: te, y: ne, scaleX: e6.scale, scaleY: e6.scale }, import_react7.default.createElement(Rect, { name: "page-highlight", hideInExport: true, x: -Se / 2 - Ce, y: -Se / 2 - Ce, width: Q + Se + 2 * Ce, height: ee + Se + 2 * Ce, stroke: we && e6.pages.length > 1 ? y3 : E3, strokeWidth: 2, listening: false, strokeScaleEnabled: false })), import_react7.default.createElement(Group, { x: te + q * e6.scale, y: ne + q * e6.scale, scaleX: e6.scale, scaleY: e6.scale, name: "page-abs-container" }, import_react7.default.createElement(Transformer, { ref: ie, onDragStart: (t4) => {
    var i;
    (null === (i = t4.evt) || void 0 === i ? void 0 : i.altKey) && R2 && e6.selectedElements.forEach((e7) => {
      const t5 = e7.clone({}, { skipSelect: true }), i2 = n.children.indexOf(e7);
      n.setElementZIndex(t5.id, i2);
    }), e6.history.startTransaction();
  }, onDragEnd: () => {
    e6.history.endTransaction();
  }, onTransformStart: () => {
    e6.history.startTransaction(), se(null);
  }, boundBoxFunc: (e7, t4) => {
    const n2 = Math.abs(t4.width) < 1 || Math.abs(t4.height) < 1, i = Math.abs(e7.width) < 1 || Math.abs(e7.height) < 1;
    return n2 && !i ? e7 : t4;
  }, onTransform: (e7) => {
    var t4, n2;
    const i = ie.current.nodes(), o2 = i[i.length - 1];
    if (e7.target !== o2) {
      return;
    }
    const r3 = null === (t4 = ie.current) || void 0 === t4 ? void 0 : t4.__getNodeRect(), l = null === (n2 = ie.current) || void 0 === n2 ? void 0 : n2.getActiveAnchor();
    de({ anchor: l, x: r3.x, y: r3.y, rotation: r3.rotation, width: r3.width, height: r3.height });
  }, onTransformEnd: (t4) => {
    de({}), e6.history.endTransaction();
  }, visible: !e6.isPlaying }), ae && ae.map(({ points: n2, distance: i, box1: o2, box2: r3 }, a2) => import_react7.default.createElement(Group, { name: "distances-container", hideInExport: true, key: a2, listening: false }, import_react7.default.createElement(Rect, Object.assign({}, o2, { stroke: "rgb(0, 161, 255)", strokeWidth: 1, strokeScaleEnabled: false })), import_react7.default.createElement(Rect, Object.assign({}, r3, { stroke: "rgb(0, 161, 255)", strokeWidth: 1, strokeScaleEnabled: false })), import_react7.default.createElement(Line, { points: [n2[0].x, n2[0].y, n2[1].x, n2[1].y], stroke: "rgb(0, 161, 255)", strokeWidth: 1, strokeScaleEnabled: false }), import_react7.default.createElement(Line, { points: [n2[1].x, n2[1].y, n2[2].x, n2[2].y], stroke: "rgb(0, 161, 255)", strokeWidth: 1, strokeScaleEnabled: false }), import_react7.default.createElement(Label, { x: (n2[0].x + n2[1].x) / 2, y: (n2[0].y + n2[1].y) / 2, offsetY: -10, scaleX: 1 / e6.scale, scaleY: 1 / e6.scale }, import_react7.default.createElement(Tag, { cornerRadius: 5, fill: "rgb(0, 161, 255)", pointerDirection: "down" }), import_react7.default.createElement(Text, { align: "center", verticalAlign: "middle", fill: "white", padding: 5, text: pxToUnitString({ unit: e6.unit, dpi: e6.dpi, px: i }) })))), n._rendering && import_react7.default.createElement(Group, null, import_react7.default.createElement(Rect, { width: Q, height: ee, fill: "rgba(255,255,255,0.9)" }), import_react7.default.createElement(Text, { text: "Rendering...", fontSize: 60, width: Q, height: ee, align: "center", verticalAlign: "middle" })), Ye && import_react7.default.createElement(Ye, { components: S2, store: e6, page: n, stageRef: oe }), Xe && import_react7.default.createElement(Html, null, import_react7.default.createElement(Xe, Object.assign({ components: S2, store: e6 }, me.props)))), import_react7.default.createElement(N, Object.assign({}, ce, { store: e6, tagFill: K2, textFill: $ })), import_react7.default.createElement(z, { selection: fe, fill: j2, stroke: D2, strokeWidth: I3 }), isCreditVisible() && import_react7.default.createElement(Text, { text: "Powered by polotno.com", fontSize: 14, fill: "rgba(0,0,0,0.6)", x: r2 - 170, y: a - 18, onMouseEnter: (e7) => {
    e7.target.getStage().container().style.cursor = "pointer";
  }, onMouseLeave: (e7) => {
    e7.target.getStage().container().style.cursor = "";
  }, onTouchStart: (e7) => {
    e7.cancelBubble = true;
  }, onMouseDown: (e7) => {
    e7.cancelBubble = true;
  }, onClick: () => {
    window.open("https://polotno.com");
  }, onTap: () => {
    window.open("https://polotno.com");
  } }), import_react7.default.createElement(Group, { name: "line-guides" }))), le && ke && import_react7.default.createElement(ke, { store: e6, page: n, xPadding: te, yPadding: ne }));
});

export {
  setInnerImageCropTransformerStyle,
  setOuterImageCropTransformerStyle,
  setImageLoaderHook,
  setHighlighterStyle,
  registerShapeComponent,
  setTransformerStyle,
  registerTransformerAttrs,
  registerNextDomDrop,
  page_default
};
//# sourceMappingURL=chunk-RDFIOSVA.js.map
