import {
  AbstractComponent,
  AbstractPureComponent,
  Button,
  Cross,
  DISPLAYNAME_PREFIX,
  InputGroup,
  Menu,
  NumericInput,
  Overlay2,
  Popover,
  PopupKind,
  Search,
  Slider,
  Tab,
  Tabs,
  TagInput,
  classes_exports,
  mergeRefs,
  observer,
  refHandler,
  require_prop_types,
  require_shim,
  setRef,
  styled_default,
  t,
  utils_exports
} from "./chunk-SBOD4ZMK.js";
import {
  isGradient,
  lib_default,
  parseColor,
  sameColors
} from "./chunk-R75DDQOF.js";
import {
  require_classnames
} from "./chunk-KI5MAS3R.js";
import {
  require_react
} from "./chunk-RA4EGHW6.js";
import {
  __commonJS,
  __export,
  __toESM
} from "./chunk-2LSFTFF7.js";

// node_modules/@meronex/icons/lib/cjs/iconsManifest.js
var require_iconsManifest = __commonJS({
  "node_modules/@meronex/icons/lib/cjs/iconsManifest.js"(exports, module) {
    module.exports.IconsManifest = [
      {
        "id": "fa",
        "name": "Font Awesome",
        "projectUrl": "https://fontawesome.com/",
        "license": "CC BY 4.0 License",
        "licenseUrl": "https://creativecommons.org/licenses/by/4.0/"
      },
      {
        "id": "ios",
        "name": "Ionicons",
        "projectUrl": "https://ionicons.com/",
        "license": "MIT",
        "licenseUrl": "https://github.com/ionic-team/ionicons/blob/master/LICENSE"
      },
      {
        "id": "md",
        "name": "Material Design Icons",
        "projectUrl": "http://google.github.io/material-design-icons/",
        "license": "Apache License Version 2.0",
        "licenseUrl": "https://github.com/google/material-design-icons/blob/master/LICENSE"
      },
      {
        "id": "ti",
        "name": "Typicons",
        "projectUrl": "http://s-ings.com/typicons/",
        "license": "CC BY-SA 3.0",
        "licenseUrl": "https://creativecommons.org/licenses/by-sa/3.0/"
      },
      {
        "id": "go",
        "name": "Github Octicons icons",
        "projectUrl": "https://octicons.github.com/",
        "license": "MIT",
        "licenseUrl": "https://github.com/primer/octicons/blob/master/LICENSE"
      },
      {
        "id": "fi",
        "name": "Feather",
        "projectUrl": "https://feathericons.com/",
        "license": "MIT",
        "licenseUrl": "https://github.com/feathericons/feather/blob/master/LICENSE"
      },
      {
        "id": "gi",
        "name": "Game Icons",
        "projectUrl": "https://game-icons.net/",
        "license": "CC BY 3.0",
        "licenseUrl": "https://creativecommons.org/licenses/by/3.0/"
      },
      {
        "id": "wi",
        "name": "Weather Icons",
        "projectUrl": "https://erikflowers.github.io/weather-icons/",
        "license": "SIL OFL 1.1",
        "licenseUrl": "http://scripts.sil.org/OFL"
      },
      {
        "id": "di",
        "name": "Devicons",
        "projectUrl": "https://vorillaz.github.io/devicons/",
        "license": "MIT",
        "licenseUrl": "https://opensource.org/licenses/MIT"
      },
      {
        "id": "ai",
        "name": "Ant Design Icons",
        "projectUrl": "https://github.com/ant-design/ant-design-icons",
        "license": "MIT",
        "licenseUrl": "https://opensource.org/licenses/MIT"
      },
      {
        "id": "bs",
        "name": "Bootstrap Icons",
        "projectUrl": "https://github.com/twbs/icons",
        "license": "MIT",
        "licenseUrl": "https://opensource.org/licenses/MIT"
      },
      {
        "id": "ri",
        "name": "Remix Icon",
        "projectUrl": "https://github.com/Remix-Design/RemixIcon",
        "license": "Apache License Version 2.0",
        "licenseUrl": "http://www.apache.org/licenses/"
      },
      {
        "id": "fc",
        "name": "Flat Color Icons",
        "projectUrl": "https://github.com/icons8/flat-color-icons",
        "license": "MIT",
        "licenseUrl": "https://opensource.org/licenses/MIT"
      },
      {
        "id": "gr",
        "name": "Grommet-Icons",
        "projectUrl": "https://github.com/grommet/grommet-icons",
        "license": "Apache License Version 2.0",
        "licenseUrl": "http://www.apache.org/licenses/"
      },
      {
        "id": "cg",
        "name": "css.gg",
        "projectUrl": "https://github.com/astrit/css.gg",
        "license": "MIT",
        "licenseUrl": "https://opensource.org/licenses/MIT"
      },
      {
        "id": "mdc",
        "name": "MD Community Icons",
        "projectUrl": "https://github.com/templarian/MaterialDesign",
        "license": "SIL",
        "licenseUrl": "https://github.com/Templarian/MaterialDesign/blob/master/LICENSE"
      },
      {
        "id": "si",
        "name": "Simple Icons",
        "projectUrl": "https://simpleicons.org/",
        "license": "CC0 1.0 Universal",
        "licenseUrl": "https://creativecommons.org/publicdomain/zero/1.0/"
      },
      {
        "id": "im",
        "name": "IcoMoon Free",
        "projectUrl": "https://github.com/Keyamoon/IcoMoon-Free",
        "license": "CC BY 4.0 License",
        "licenseUrl": "https://creativecommons.org/licenses/by/4.0/"
      },
      {
        "id": "hi",
        "name": "Heroicons",
        "projectUrl": "https://github.com/refactoringui/heroicons",
        "license": "MIT",
        "licenseUrl": "https://opensource.org/licenses/MIT"
      },
      {
        "id": "vsc",
        "name": "VS Code Icons",
        "projectUrl": "https://github.com/microsoft/vscode-codicons",
        "license": "CC BY 4.0",
        "licenseUrl": "https://creativecommons.org/licenses/by/4.0/"
      },
      {
        "id": "fl",
        "name": "Flags Icons",
        "projectUrl": "https://github.com/lipis/flag-icon-css",
        "license": "MIT License",
        "licenseUrl": "https://github.com/lipis/flag-icon-css/blob/master/LICENSE"
      },
      {
        "id": "lg",
        "name": "Logos Icons",
        "projectUrl": "https://github.com/gilbarbara/logos",
        "license": "CC0 1.0 Universal",
        "licenseUrl": "https://github.com/gilbarbara/logos/blob/master/LICENSE.txt"
      },
      {
        "id": "bi",
        "name": "Boxicons",
        "projectUrl": "https://github.com/atisawd/boxicons",
        "license": "CC BY 4.0 License",
        "licenseUrl": "https://creativecommons.org/licenses/by/4.0/"
      },
      {
        "id": "cr",
        "name": "Cryptoicons",
        "projectUrl": "https://github.com/spothq/cryptocurrency-icons",
        "license": "CC0 1.0 Universal",
        "licenseUrl": "https://github.com/spothq/cryptocurrency-icons/blob/master/LICENSE.md"
      },
      {
        "id": "en",
        "name": "Entypo",
        "projectUrl": "https://github.com/hypermodules/entypo",
        "license": "ISC License",
        "licenseUrl": "https://github.com/hypermodules/entypo/blob/master/LICENSE.md"
      },
      {
        "id": "fd",
        "name": "Foundation",
        "projectUrl": "https://github.com/meronex/foundation-icons-3",
        "license": "MIT",
        "licenseUrl": "https://opensource.org/licenses/MIT"
      },
      {
        "id": "zo",
        "name": "Zondicons",
        "projectUrl": "https://github.com/dukestreetstudio/zondicons",
        "license": "MIT",
        "licenseUrl": "https://opensource.org/licenses/MIT"
      },
      {
        "id": "ei",
        "name": "Evil Icons",
        "projectUrl": "https://github.com/dukestreetstudio/zondicons",
        "license": "MIT",
        "licenseUrl": "https://opensource.org/licenses/MIT"
      },
      {
        "id": "oi",
        "name": "Open Iconic",
        "projectUrl": "https://github.com/iconic/open-iconic",
        "license": "MIT",
        "licenseUrl": "https://opensource.org/licenses/MIT"
      },
      {
        "id": "su",
        "name": "System Uicons",
        "projectUrl": "https://github.com/CoreyGinnivan/system-uicons",
        "license": "The Unlicense",
        "licenseUrl": "https://github.com/CoreyGinnivan/system-uicons/blob/master/LICENSE"
      }
    ];
  }
});

// node_modules/@meronex/icons/lib/cjs/iconContext.js
var require_iconContext = __commonJS({
  "node_modules/@meronex/icons/lib/cjs/iconContext.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IconContext = exports.DefaultContext = void 0;
    var React9 = require_react();
    exports.DefaultContext = {
      color: void 0,
      size: void 0,
      className: void 0,
      style: void 0,
      attr: void 0
    };
    exports.IconContext = React9.createContext && React9.createContext(exports.DefaultContext);
  }
});

// node_modules/@meronex/icons/lib/cjs/iconBase.js
var require_iconBase = __commonJS({
  "node_modules/@meronex/icons/lib/cjs/iconBase.js"(exports) {
    "use strict";
    var __assign2 = exports && exports.__assign || function() {
      __assign2 = Object.assign || function(t4) {
        for (var s2, i = 1, n2 = arguments.length; i < n2; i++) {
          s2 = arguments[i];
          for (var p2 in s2)
            if (Object.prototype.hasOwnProperty.call(s2, p2))
              t4[p2] = s2[p2];
        }
        return t4;
      };
      return __assign2.apply(this, arguments);
    };
    var __rest2 = exports && exports.__rest || function(s2, e3) {
      var t4 = {};
      for (var p2 in s2)
        if (Object.prototype.hasOwnProperty.call(s2, p2) && e3.indexOf(p2) < 0)
          t4[p2] = s2[p2];
      if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p2 = Object.getOwnPropertySymbols(s2); i < p2.length; i++) {
          if (e3.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p2[i]))
            t4[p2[i]] = s2[p2[i]];
        }
      return t4;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IconBase = exports.GenIcon = void 0;
    var React9 = require_react();
    var iconContext_1 = require_iconContext();
    function Tree2Element(tree) {
      return tree && tree.map(function(node, i) {
        return React9.createElement(node.tag, __assign2({ key: i }, node.attr), Tree2Element(node.child));
      });
      return tree && tree.map(function(node, i) {
        return React9.createElement(node.tag, __assign2({ key: i }, node.attr), node.content, Tree2Element(node.child));
      });
    }
    function HasStrokes(svg) {
      for (var prop in svg) {
        if (prop[0] === "_") {
          continue;
        }
        if (prop === "stroke") {
          return true;
        } else if (typeof svg[prop] === "object") {
          var result = HasStrokes(svg[prop]);
          if (result) {
            return result;
          }
        } else if (prop === "content") {
          if (svg["tag"] === "style") {
            if (svg[prop].includes("stroke:")) {
              return true;
            }
          }
        }
      }
      return false;
    }
    function GenIcon(data) {
      return function(props) {
        return React9.createElement(IconBase, __assign2({ attr: __assign2({}, data.attr) }, props, { hasStrokes: HasStrokes(data) }), Tree2Element(data.child));
      };
    }
    exports.GenIcon = GenIcon;
    function IconBase(props) {
      var elem = function(conf) {
        var computedSize = props.size || conf.size || "1em";
        var className;
        if (conf.className)
          className = conf.className;
        if (props.className)
          className = (className ? className + " " : "") + props.className;
        var attr = props.attr, fill = props.fill, title = props.title, hasStrokes = props.hasStrokes, svgProps = __rest2(props, ["attr", "fill", "title", "hasStrokes"]);
        var stroke = hasStrokes ? null : { strokeWidth: 0 };
        return React9.createElement(
          "svg",
          __assign2({ stroke: "currentColor", fill }, stroke, conf.attr, attr, svgProps, { className, style: __assign2(__assign2({ color: props.color || conf.color }, conf.style), props.style), height: computedSize, width: computedSize, xmlns: "http://www.w3.org/2000/svg" }),
          title && React9.createElement("title", null, title),
          props.children
        );
      };
      return iconContext_1.IconContext !== void 0 ? React9.createElement(iconContext_1.IconContext.Consumer, null, function(conf) {
        return elem(conf);
      }) : elem(iconContext_1.DefaultContext);
    }
    exports.IconBase = IconBase;
  }
});

// node_modules/@meronex/icons/lib/cjs/index.js
var require_cjs = __commonJS({
  "node_modules/@meronex/icons/lib/cjs/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m3, k, k2) {
      if (k2 === void 0)
        k2 = k;
      Object.defineProperty(o, k2, { enumerable: true, get: function() {
        return m3[k];
      } });
    } : function(o, m3, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m3[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m3, exports2) {
      for (var p2 in m3)
        if (p2 !== "default" && !exports2.hasOwnProperty(p2))
          __createBinding(exports2, m3, p2);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_iconsManifest(), exports);
    __exportStar(require_iconBase(), exports);
    __exportStar(require_iconContext(), exports);
  }
});

// node_modules/lodash/_freeGlobal.js
var require_freeGlobal = __commonJS({
  "node_modules/lodash/_freeGlobal.js"(exports, module) {
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    module.exports = freeGlobal;
  }
});

// node_modules/lodash/_root.js
var require_root = __commonJS({
  "node_modules/lodash/_root.js"(exports, module) {
    var freeGlobal = require_freeGlobal();
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    module.exports = root;
  }
});

// node_modules/lodash/_Symbol.js
var require_Symbol = __commonJS({
  "node_modules/lodash/_Symbol.js"(exports, module) {
    var root = require_root();
    var Symbol2 = root.Symbol;
    module.exports = Symbol2;
  }
});

// node_modules/lodash/_getRawTag.js
var require_getRawTag = __commonJS({
  "node_modules/lodash/_getRawTag.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var nativeObjectToString = objectProto.toString;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e3) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    module.exports = getRawTag;
  }
});

// node_modules/lodash/_objectToString.js
var require_objectToString = __commonJS({
  "node_modules/lodash/_objectToString.js"(exports, module) {
    var objectProto = Object.prototype;
    var nativeObjectToString = objectProto.toString;
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    module.exports = objectToString;
  }
});

// node_modules/lodash/_baseGetTag.js
var require_baseGetTag = __commonJS({
  "node_modules/lodash/_baseGetTag.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var getRawTag = require_getRawTag();
    var objectToString = require_objectToString();
    var nullTag = "[object Null]";
    var undefinedTag = "[object Undefined]";
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    module.exports = baseGetTag;
  }
});

// node_modules/lodash/isArray.js
var require_isArray = __commonJS({
  "node_modules/lodash/isArray.js"(exports, module) {
    var isArray = Array.isArray;
    module.exports = isArray;
  }
});

// node_modules/lodash/isObjectLike.js
var require_isObjectLike = __commonJS({
  "node_modules/lodash/isObjectLike.js"(exports, module) {
    function isObjectLike(value) {
      return value != null && typeof value == "object";
    }
    module.exports = isObjectLike;
  }
});

// node_modules/lodash/isString.js
var require_isString = __commonJS({
  "node_modules/lodash/isString.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isArray = require_isArray();
    var isObjectLike = require_isObjectLike();
    var stringTag = "[object String]";
    function isString(value) {
      return typeof value == "string" || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
    }
    module.exports = isString;
  }
});

// node_modules/lodash/_createBaseFor.js
var require_createBaseFor = __commonJS({
  "node_modules/lodash/_createBaseFor.js"(exports, module) {
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }
    module.exports = createBaseFor;
  }
});

// node_modules/lodash/_baseFor.js
var require_baseFor = __commonJS({
  "node_modules/lodash/_baseFor.js"(exports, module) {
    var createBaseFor = require_createBaseFor();
    var baseFor = createBaseFor();
    module.exports = baseFor;
  }
});

// node_modules/lodash/_baseTimes.js
var require_baseTimes = __commonJS({
  "node_modules/lodash/_baseTimes.js"(exports, module) {
    function baseTimes(n2, iteratee) {
      var index = -1, result = Array(n2);
      while (++index < n2) {
        result[index] = iteratee(index);
      }
      return result;
    }
    module.exports = baseTimes;
  }
});

// node_modules/lodash/_baseIsArguments.js
var require_baseIsArguments = __commonJS({
  "node_modules/lodash/_baseIsArguments.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    module.exports = baseIsArguments;
  }
});

// node_modules/lodash/isArguments.js
var require_isArguments = __commonJS({
  "node_modules/lodash/isArguments.js"(exports, module) {
    var baseIsArguments = require_baseIsArguments();
    var isObjectLike = require_isObjectLike();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var isArguments = baseIsArguments(function() {
      return arguments;
    }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
    };
    module.exports = isArguments;
  }
});

// node_modules/lodash/stubFalse.js
var require_stubFalse = __commonJS({
  "node_modules/lodash/stubFalse.js"(exports, module) {
    function stubFalse() {
      return false;
    }
    module.exports = stubFalse;
  }
});

// node_modules/lodash/isBuffer.js
var require_isBuffer = __commonJS({
  "node_modules/lodash/isBuffer.js"(exports, module) {
    var root = require_root();
    var stubFalse = require_stubFalse();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer = moduleExports ? root.Buffer : void 0;
    var nativeIsBuffer = Buffer ? Buffer.isBuffer : void 0;
    var isBuffer = nativeIsBuffer || stubFalse;
    module.exports = isBuffer;
  }
});

// node_modules/lodash/_isIndex.js
var require_isIndex = __commonJS({
  "node_modules/lodash/_isIndex.js"(exports, module) {
    var MAX_SAFE_INTEGER = 9007199254740991;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
    }
    module.exports = isIndex;
  }
});

// node_modules/lodash/isLength.js
var require_isLength = __commonJS({
  "node_modules/lodash/isLength.js"(exports, module) {
    var MAX_SAFE_INTEGER = 9007199254740991;
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    module.exports = isLength;
  }
});

// node_modules/lodash/_baseIsTypedArray.js
var require_baseIsTypedArray = __commonJS({
  "node_modules/lodash/_baseIsTypedArray.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isLength = require_isLength();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    module.exports = baseIsTypedArray;
  }
});

// node_modules/lodash/_baseUnary.js
var require_baseUnary = __commonJS({
  "node_modules/lodash/_baseUnary.js"(exports, module) {
    function baseUnary(func) {
      return function(value) {
        return func(value);
      };
    }
    module.exports = baseUnary;
  }
});

// node_modules/lodash/_nodeUtil.js
var require_nodeUtil = __commonJS({
  "node_modules/lodash/_nodeUtil.js"(exports, module) {
    var freeGlobal = require_freeGlobal();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function() {
      try {
        var types = freeModule && freeModule.require && freeModule.require("util").types;
        if (types) {
          return types;
        }
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e3) {
      }
    }();
    module.exports = nodeUtil;
  }
});

// node_modules/lodash/isTypedArray.js
var require_isTypedArray = __commonJS({
  "node_modules/lodash/isTypedArray.js"(exports, module) {
    var baseIsTypedArray = require_baseIsTypedArray();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    module.exports = isTypedArray;
  }
});

// node_modules/lodash/_arrayLikeKeys.js
var require_arrayLikeKeys = __commonJS({
  "node_modules/lodash/_arrayLikeKeys.js"(exports, module) {
    var baseTimes = require_baseTimes();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isIndex = require_isIndex();
    var isTypedArray = require_isTypedArray();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
        (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
        isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
        isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
        isIndex(key, length)))) {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = arrayLikeKeys;
  }
});

// node_modules/lodash/_isPrototype.js
var require_isPrototype = __commonJS({
  "node_modules/lodash/_isPrototype.js"(exports, module) {
    var objectProto = Object.prototype;
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    module.exports = isPrototype;
  }
});

// node_modules/lodash/_overArg.js
var require_overArg = __commonJS({
  "node_modules/lodash/_overArg.js"(exports, module) {
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    module.exports = overArg;
  }
});

// node_modules/lodash/_nativeKeys.js
var require_nativeKeys = __commonJS({
  "node_modules/lodash/_nativeKeys.js"(exports, module) {
    var overArg = require_overArg();
    var nativeKeys = overArg(Object.keys, Object);
    module.exports = nativeKeys;
  }
});

// node_modules/lodash/_baseKeys.js
var require_baseKeys = __commonJS({
  "node_modules/lodash/_baseKeys.js"(exports, module) {
    var isPrototype = require_isPrototype();
    var nativeKeys = require_nativeKeys();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != "constructor") {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = baseKeys;
  }
});

// node_modules/lodash/isObject.js
var require_isObject = __commonJS({
  "node_modules/lodash/isObject.js"(exports, module) {
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    module.exports = isObject;
  }
});

// node_modules/lodash/isFunction.js
var require_isFunction = __commonJS({
  "node_modules/lodash/isFunction.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObject = require_isObject();
    var asyncTag = "[object AsyncFunction]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var proxyTag = "[object Proxy]";
    function isFunction2(value) {
      if (!isObject(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    module.exports = isFunction2;
  }
});

// node_modules/lodash/isArrayLike.js
var require_isArrayLike = __commonJS({
  "node_modules/lodash/isArrayLike.js"(exports, module) {
    var isFunction2 = require_isFunction();
    var isLength = require_isLength();
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction2(value);
    }
    module.exports = isArrayLike;
  }
});

// node_modules/lodash/keys.js
var require_keys = __commonJS({
  "node_modules/lodash/keys.js"(exports, module) {
    var arrayLikeKeys = require_arrayLikeKeys();
    var baseKeys = require_baseKeys();
    var isArrayLike = require_isArrayLike();
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }
    module.exports = keys;
  }
});

// node_modules/lodash/_baseForOwn.js
var require_baseForOwn = __commonJS({
  "node_modules/lodash/_baseForOwn.js"(exports, module) {
    var baseFor = require_baseFor();
    var keys = require_keys();
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }
    module.exports = baseForOwn;
  }
});

// node_modules/lodash/identity.js
var require_identity = __commonJS({
  "node_modules/lodash/identity.js"(exports, module) {
    function identity(value) {
      return value;
    }
    module.exports = identity;
  }
});

// node_modules/lodash/_castFunction.js
var require_castFunction = __commonJS({
  "node_modules/lodash/_castFunction.js"(exports, module) {
    var identity = require_identity();
    function castFunction(value) {
      return typeof value == "function" ? value : identity;
    }
    module.exports = castFunction;
  }
});

// node_modules/lodash/forOwn.js
var require_forOwn = __commonJS({
  "node_modules/lodash/forOwn.js"(exports, module) {
    var baseForOwn = require_baseForOwn();
    var castFunction = require_castFunction();
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, castFunction(iteratee));
    }
    module.exports = forOwn;
  }
});

// node_modules/lodash/_getPrototype.js
var require_getPrototype = __commonJS({
  "node_modules/lodash/_getPrototype.js"(exports, module) {
    var overArg = require_overArg();
    var getPrototype = overArg(Object.getPrototypeOf, Object);
    module.exports = getPrototype;
  }
});

// node_modules/lodash/isPlainObject.js
var require_isPlainObject = __commonJS({
  "node_modules/lodash/isPlainObject.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var getPrototype = require_getPrototype();
    var isObjectLike = require_isObjectLike();
    var objectTag = "[object Object]";
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var objectCtorString = funcToString.call(Object);
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
      return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
    }
    module.exports = isPlainObject;
  }
});

// node_modules/lodash/_arrayMap.js
var require_arrayMap = __commonJS({
  "node_modules/lodash/_arrayMap.js"(exports, module) {
    function arrayMap(array, iteratee) {
      var index = -1, length = array == null ? 0 : array.length, result = Array(length);
      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }
      return result;
    }
    module.exports = arrayMap;
  }
});

// node_modules/lodash/_listCacheClear.js
var require_listCacheClear = __commonJS({
  "node_modules/lodash/_listCacheClear.js"(exports, module) {
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    module.exports = listCacheClear;
  }
});

// node_modules/lodash/eq.js
var require_eq = __commonJS({
  "node_modules/lodash/eq.js"(exports, module) {
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    module.exports = eq;
  }
});

// node_modules/lodash/_assocIndexOf.js
var require_assocIndexOf = __commonJS({
  "node_modules/lodash/_assocIndexOf.js"(exports, module) {
    var eq = require_eq();
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }
    module.exports = assocIndexOf;
  }
});

// node_modules/lodash/_listCacheDelete.js
var require_listCacheDelete = __commonJS({
  "node_modules/lodash/_listCacheDelete.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    var arrayProto = Array.prototype;
    var splice = arrayProto.splice;
    function listCacheDelete(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }
    module.exports = listCacheDelete;
  }
});

// node_modules/lodash/_listCacheGet.js
var require_listCacheGet = __commonJS({
  "node_modules/lodash/_listCacheGet.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheGet(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      return index < 0 ? void 0 : data[index][1];
    }
    module.exports = listCacheGet;
  }
});

// node_modules/lodash/_listCacheHas.js
var require_listCacheHas = __commonJS({
  "node_modules/lodash/_listCacheHas.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    module.exports = listCacheHas;
  }
});

// node_modules/lodash/_listCacheSet.js
var require_listCacheSet = __commonJS({
  "node_modules/lodash/_listCacheSet.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheSet(key, value) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    module.exports = listCacheSet;
  }
});

// node_modules/lodash/_ListCache.js
var require_ListCache = __commonJS({
  "node_modules/lodash/_ListCache.js"(exports, module) {
    var listCacheClear = require_listCacheClear();
    var listCacheDelete = require_listCacheDelete();
    var listCacheGet = require_listCacheGet();
    var listCacheHas = require_listCacheHas();
    var listCacheSet = require_listCacheSet();
    function ListCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    module.exports = ListCache;
  }
});

// node_modules/lodash/_stackClear.js
var require_stackClear = __commonJS({
  "node_modules/lodash/_stackClear.js"(exports, module) {
    var ListCache = require_ListCache();
    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }
    module.exports = stackClear;
  }
});

// node_modules/lodash/_stackDelete.js
var require_stackDelete = __commonJS({
  "node_modules/lodash/_stackDelete.js"(exports, module) {
    function stackDelete(key) {
      var data = this.__data__, result = data["delete"](key);
      this.size = data.size;
      return result;
    }
    module.exports = stackDelete;
  }
});

// node_modules/lodash/_stackGet.js
var require_stackGet = __commonJS({
  "node_modules/lodash/_stackGet.js"(exports, module) {
    function stackGet(key) {
      return this.__data__.get(key);
    }
    module.exports = stackGet;
  }
});

// node_modules/lodash/_stackHas.js
var require_stackHas = __commonJS({
  "node_modules/lodash/_stackHas.js"(exports, module) {
    function stackHas(key) {
      return this.__data__.has(key);
    }
    module.exports = stackHas;
  }
});

// node_modules/lodash/_coreJsData.js
var require_coreJsData = __commonJS({
  "node_modules/lodash/_coreJsData.js"(exports, module) {
    var root = require_root();
    var coreJsData = root["__core-js_shared__"];
    module.exports = coreJsData;
  }
});

// node_modules/lodash/_isMasked.js
var require_isMasked = __commonJS({
  "node_modules/lodash/_isMasked.js"(exports, module) {
    var coreJsData = require_coreJsData();
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    module.exports = isMasked;
  }
});

// node_modules/lodash/_toSource.js
var require_toSource = __commonJS({
  "node_modules/lodash/_toSource.js"(exports, module) {
    var funcProto = Function.prototype;
    var funcToString = funcProto.toString;
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e3) {
        }
        try {
          return func + "";
        } catch (e3) {
        }
      }
      return "";
    }
    module.exports = toSource;
  }
});

// node_modules/lodash/_baseIsNative.js
var require_baseIsNative = __commonJS({
  "node_modules/lodash/_baseIsNative.js"(exports, module) {
    var isFunction2 = require_isFunction();
    var isMasked = require_isMasked();
    var isObject = require_isObject();
    var toSource = require_toSource();
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var reIsNative = RegExp(
      "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction2(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    module.exports = baseIsNative;
  }
});

// node_modules/lodash/_getValue.js
var require_getValue = __commonJS({
  "node_modules/lodash/_getValue.js"(exports, module) {
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    module.exports = getValue;
  }
});

// node_modules/lodash/_getNative.js
var require_getNative = __commonJS({
  "node_modules/lodash/_getNative.js"(exports, module) {
    var baseIsNative = require_baseIsNative();
    var getValue = require_getValue();
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    module.exports = getNative;
  }
});

// node_modules/lodash/_Map.js
var require_Map = __commonJS({
  "node_modules/lodash/_Map.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Map2 = getNative(root, "Map");
    module.exports = Map2;
  }
});

// node_modules/lodash/_nativeCreate.js
var require_nativeCreate = __commonJS({
  "node_modules/lodash/_nativeCreate.js"(exports, module) {
    var getNative = require_getNative();
    var nativeCreate = getNative(Object, "create");
    module.exports = nativeCreate;
  }
});

// node_modules/lodash/_hashClear.js
var require_hashClear = __commonJS({
  "node_modules/lodash/_hashClear.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    module.exports = hashClear;
  }
});

// node_modules/lodash/_hashDelete.js
var require_hashDelete = __commonJS({
  "node_modules/lodash/_hashDelete.js"(exports, module) {
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = hashDelete;
  }
});

// node_modules/lodash/_hashGet.js
var require_hashGet = __commonJS({
  "node_modules/lodash/_hashGet.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : void 0;
    }
    module.exports = hashGet;
  }
});

// node_modules/lodash/_hashHas.js
var require_hashHas = __commonJS({
  "node_modules/lodash/_hashHas.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
    }
    module.exports = hashHas;
  }
});

// node_modules/lodash/_hashSet.js
var require_hashSet = __commonJS({
  "node_modules/lodash/_hashSet.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    module.exports = hashSet;
  }
});

// node_modules/lodash/_Hash.js
var require_Hash = __commonJS({
  "node_modules/lodash/_Hash.js"(exports, module) {
    var hashClear = require_hashClear();
    var hashDelete = require_hashDelete();
    var hashGet = require_hashGet();
    var hashHas = require_hashHas();
    var hashSet = require_hashSet();
    function Hash(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    module.exports = Hash;
  }
});

// node_modules/lodash/_mapCacheClear.js
var require_mapCacheClear = __commonJS({
  "node_modules/lodash/_mapCacheClear.js"(exports, module) {
    var Hash = require_Hash();
    var ListCache = require_ListCache();
    var Map2 = require_Map();
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map2 || ListCache)(),
        "string": new Hash()
      };
    }
    module.exports = mapCacheClear;
  }
});

// node_modules/lodash/_isKeyable.js
var require_isKeyable = __commonJS({
  "node_modules/lodash/_isKeyable.js"(exports, module) {
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    module.exports = isKeyable;
  }
});

// node_modules/lodash/_getMapData.js
var require_getMapData = __commonJS({
  "node_modules/lodash/_getMapData.js"(exports, module) {
    var isKeyable = require_isKeyable();
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    module.exports = getMapData;
  }
});

// node_modules/lodash/_mapCacheDelete.js
var require_mapCacheDelete = __commonJS({
  "node_modules/lodash/_mapCacheDelete.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheDelete(key) {
      var result = getMapData(this, key)["delete"](key);
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = mapCacheDelete;
  }
});

// node_modules/lodash/_mapCacheGet.js
var require_mapCacheGet = __commonJS({
  "node_modules/lodash/_mapCacheGet.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    module.exports = mapCacheGet;
  }
});

// node_modules/lodash/_mapCacheHas.js
var require_mapCacheHas = __commonJS({
  "node_modules/lodash/_mapCacheHas.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    module.exports = mapCacheHas;
  }
});

// node_modules/lodash/_mapCacheSet.js
var require_mapCacheSet = __commonJS({
  "node_modules/lodash/_mapCacheSet.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheSet(key, value) {
      var data = getMapData(this, key), size = data.size;
      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }
    module.exports = mapCacheSet;
  }
});

// node_modules/lodash/_MapCache.js
var require_MapCache = __commonJS({
  "node_modules/lodash/_MapCache.js"(exports, module) {
    var mapCacheClear = require_mapCacheClear();
    var mapCacheDelete = require_mapCacheDelete();
    var mapCacheGet = require_mapCacheGet();
    var mapCacheHas = require_mapCacheHas();
    var mapCacheSet = require_mapCacheSet();
    function MapCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    module.exports = MapCache;
  }
});

// node_modules/lodash/_stackSet.js
var require_stackSet = __commonJS({
  "node_modules/lodash/_stackSet.js"(exports, module) {
    var ListCache = require_ListCache();
    var Map2 = require_Map();
    var MapCache = require_MapCache();
    var LARGE_ARRAY_SIZE = 200;
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }
    module.exports = stackSet;
  }
});

// node_modules/lodash/_Stack.js
var require_Stack = __commonJS({
  "node_modules/lodash/_Stack.js"(exports, module) {
    var ListCache = require_ListCache();
    var stackClear = require_stackClear();
    var stackDelete = require_stackDelete();
    var stackGet = require_stackGet();
    var stackHas = require_stackHas();
    var stackSet = require_stackSet();
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype["delete"] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    module.exports = Stack;
  }
});

// node_modules/lodash/_setCacheAdd.js
var require_setCacheAdd = __commonJS({
  "node_modules/lodash/_setCacheAdd.js"(exports, module) {
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    module.exports = setCacheAdd;
  }
});

// node_modules/lodash/_setCacheHas.js
var require_setCacheHas = __commonJS({
  "node_modules/lodash/_setCacheHas.js"(exports, module) {
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    module.exports = setCacheHas;
  }
});

// node_modules/lodash/_SetCache.js
var require_SetCache = __commonJS({
  "node_modules/lodash/_SetCache.js"(exports, module) {
    var MapCache = require_MapCache();
    var setCacheAdd = require_setCacheAdd();
    var setCacheHas = require_setCacheHas();
    function SetCache(values) {
      var index = -1, length = values == null ? 0 : values.length;
      this.__data__ = new MapCache();
      while (++index < length) {
        this.add(values[index]);
      }
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    module.exports = SetCache;
  }
});

// node_modules/lodash/_arraySome.js
var require_arraySome = __commonJS({
  "node_modules/lodash/_arraySome.js"(exports, module) {
    function arraySome(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }
    module.exports = arraySome;
  }
});

// node_modules/lodash/_cacheHas.js
var require_cacheHas = __commonJS({
  "node_modules/lodash/_cacheHas.js"(exports, module) {
    function cacheHas(cache2, key) {
      return cache2.has(key);
    }
    module.exports = cacheHas;
  }
});

// node_modules/lodash/_equalArrays.js
var require_equalArrays = __commonJS({
  "node_modules/lodash/_equalArrays.js"(exports, module) {
    var SetCache = require_SetCache();
    var arraySome = require_arraySome();
    var cacheHas = require_cacheHas();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      var arrStacked = stack.get(array);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array;
      }
      var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : void 0;
      stack.set(array, other);
      stack.set(other, array);
      while (++index < arrLength) {
        var arrValue = array[index], othValue = other[index];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== void 0) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        if (seen) {
          if (!arraySome(other, function(othValue2, othIndex) {
            if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }
      stack["delete"](array);
      stack["delete"](other);
      return result;
    }
    module.exports = equalArrays;
  }
});

// node_modules/lodash/_Uint8Array.js
var require_Uint8Array = __commonJS({
  "node_modules/lodash/_Uint8Array.js"(exports, module) {
    var root = require_root();
    var Uint8Array = root.Uint8Array;
    module.exports = Uint8Array;
  }
});

// node_modules/lodash/_mapToArray.js
var require_mapToArray = __commonJS({
  "node_modules/lodash/_mapToArray.js"(exports, module) {
    function mapToArray(map) {
      var index = -1, result = Array(map.size);
      map.forEach(function(value, key) {
        result[++index] = [key, value];
      });
      return result;
    }
    module.exports = mapToArray;
  }
});

// node_modules/lodash/_setToArray.js
var require_setToArray = __commonJS({
  "node_modules/lodash/_setToArray.js"(exports, module) {
    function setToArray(set) {
      var index = -1, result = Array(set.size);
      set.forEach(function(value) {
        result[++index] = value;
      });
      return result;
    }
    module.exports = setToArray;
  }
});

// node_modules/lodash/_equalByTag.js
var require_equalByTag = __commonJS({
  "node_modules/lodash/_equalByTag.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var Uint8Array = require_Uint8Array();
    var eq = require_eq();
    var equalArrays = require_equalArrays();
    var mapToArray = require_mapToArray();
    var setToArray = require_setToArray();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;
        case arrayBufferTag:
          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;
        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object, +other);
        case errorTag:
          return object.name == other.name && object.message == other.message;
        case regexpTag:
        case stringTag:
          return object == other + "";
        case mapTag:
          var convert = mapToArray;
        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);
          if (object.size != other.size && !isPartial) {
            return false;
          }
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack["delete"](object);
          return result;
        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }
    module.exports = equalByTag;
  }
});

// node_modules/lodash/_arrayPush.js
var require_arrayPush = __commonJS({
  "node_modules/lodash/_arrayPush.js"(exports, module) {
    function arrayPush(array, values) {
      var index = -1, length = values.length, offset = array.length;
      while (++index < length) {
        array[offset + index] = values[index];
      }
      return array;
    }
    module.exports = arrayPush;
  }
});

// node_modules/lodash/_baseGetAllKeys.js
var require_baseGetAllKeys = __commonJS({
  "node_modules/lodash/_baseGetAllKeys.js"(exports, module) {
    var arrayPush = require_arrayPush();
    var isArray = require_isArray();
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }
    module.exports = baseGetAllKeys;
  }
});

// node_modules/lodash/_arrayFilter.js
var require_arrayFilter = __commonJS({
  "node_modules/lodash/_arrayFilter.js"(exports, module) {
    function arrayFilter(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }
    module.exports = arrayFilter;
  }
});

// node_modules/lodash/stubArray.js
var require_stubArray = __commonJS({
  "node_modules/lodash/stubArray.js"(exports, module) {
    function stubArray() {
      return [];
    }
    module.exports = stubArray;
  }
});

// node_modules/lodash/_getSymbols.js
var require_getSymbols = __commonJS({
  "node_modules/lodash/_getSymbols.js"(exports, module) {
    var arrayFilter = require_arrayFilter();
    var stubArray = require_stubArray();
    var objectProto = Object.prototype;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };
    module.exports = getSymbols;
  }
});

// node_modules/lodash/_getAllKeys.js
var require_getAllKeys = __commonJS({
  "node_modules/lodash/_getAllKeys.js"(exports, module) {
    var baseGetAllKeys = require_baseGetAllKeys();
    var getSymbols = require_getSymbols();
    var keys = require_keys();
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }
    module.exports = getAllKeys;
  }
});

// node_modules/lodash/_equalObjects.js
var require_equalObjects = __commonJS({
  "node_modules/lodash/_equalObjects.js"(exports, module) {
    var getAllKeys = require_getAllKeys();
    var COMPARE_PARTIAL_FLAG = 1;
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      var objStacked = stack.get(object);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);
      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key], othValue = other[key];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        }
        if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == "constructor");
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack["delete"](object);
      stack["delete"](other);
      return result;
    }
    module.exports = equalObjects;
  }
});

// node_modules/lodash/_DataView.js
var require_DataView = __commonJS({
  "node_modules/lodash/_DataView.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var DataView = getNative(root, "DataView");
    module.exports = DataView;
  }
});

// node_modules/lodash/_Promise.js
var require_Promise = __commonJS({
  "node_modules/lodash/_Promise.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Promise2 = getNative(root, "Promise");
    module.exports = Promise2;
  }
});

// node_modules/lodash/_Set.js
var require_Set = __commonJS({
  "node_modules/lodash/_Set.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Set2 = getNative(root, "Set");
    module.exports = Set2;
  }
});

// node_modules/lodash/_WeakMap.js
var require_WeakMap = __commonJS({
  "node_modules/lodash/_WeakMap.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var WeakMap2 = getNative(root, "WeakMap");
    module.exports = WeakMap2;
  }
});

// node_modules/lodash/_getTag.js
var require_getTag = __commonJS({
  "node_modules/lodash/_getTag.js"(exports, module) {
    var DataView = require_DataView();
    var Map2 = require_Map();
    var Promise2 = require_Promise();
    var Set2 = require_Set();
    var WeakMap2 = require_WeakMap();
    var baseGetTag = require_baseGetTag();
    var toSource = require_toSource();
    var mapTag = "[object Map]";
    var objectTag = "[object Object]";
    var promiseTag = "[object Promise]";
    var setTag = "[object Set]";
    var weakMapTag = "[object WeakMap]";
    var dataViewTag = "[object DataView]";
    var dataViewCtorString = toSource(DataView);
    var mapCtorString = toSource(Map2);
    var promiseCtorString = toSource(Promise2);
    var setCtorString = toSource(Set2);
    var weakMapCtorString = toSource(WeakMap2);
    var getTag = baseGetTag;
    if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap2 && getTag(new WeakMap2()) != weakMapTag) {
      getTag = function(value) {
        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }
    module.exports = getTag;
  }
});

// node_modules/lodash/_baseIsEqualDeep.js
var require_baseIsEqualDeep = __commonJS({
  "node_modules/lodash/_baseIsEqualDeep.js"(exports, module) {
    var Stack = require_Stack();
    var equalArrays = require_equalArrays();
    var equalByTag = require_equalByTag();
    var equalObjects = require_equalObjects();
    var getTag = require_getTag();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isTypedArray = require_isTypedArray();
    var COMPARE_PARTIAL_FLAG = 1;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var objectTag = "[object Object]";
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;
      var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }
    module.exports = baseIsEqualDeep;
  }
});

// node_modules/lodash/_baseIsEqual.js
var require_baseIsEqual = __commonJS({
  "node_modules/lodash/_baseIsEqual.js"(exports, module) {
    var baseIsEqualDeep = require_baseIsEqualDeep();
    var isObjectLike = require_isObjectLike();
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }
    module.exports = baseIsEqual;
  }
});

// node_modules/lodash/_baseIsMatch.js
var require_baseIsMatch = __commonJS({
  "node_modules/lodash/_baseIsMatch.js"(exports, module) {
    var Stack = require_Stack();
    var baseIsEqual = require_baseIsEqual();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length, length = index, noCustomizer = !customizer;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0], objValue = object[key], srcValue = data[1];
        if (noCustomizer && data[2]) {
          if (objValue === void 0 && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack();
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === void 0 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
            return false;
          }
        }
      }
      return true;
    }
    module.exports = baseIsMatch;
  }
});

// node_modules/lodash/_isStrictComparable.js
var require_isStrictComparable = __commonJS({
  "node_modules/lodash/_isStrictComparable.js"(exports, module) {
    var isObject = require_isObject();
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }
    module.exports = isStrictComparable;
  }
});

// node_modules/lodash/_getMatchData.js
var require_getMatchData = __commonJS({
  "node_modules/lodash/_getMatchData.js"(exports, module) {
    var isStrictComparable = require_isStrictComparable();
    var keys = require_keys();
    function getMatchData(object) {
      var result = keys(object), length = result.length;
      while (length--) {
        var key = result[length], value = object[key];
        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }
    module.exports = getMatchData;
  }
});

// node_modules/lodash/_matchesStrictComparable.js
var require_matchesStrictComparable = __commonJS({
  "node_modules/lodash/_matchesStrictComparable.js"(exports, module) {
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue && (srcValue !== void 0 || key in Object(object));
      };
    }
    module.exports = matchesStrictComparable;
  }
});

// node_modules/lodash/_baseMatches.js
var require_baseMatches = __commonJS({
  "node_modules/lodash/_baseMatches.js"(exports, module) {
    var baseIsMatch = require_baseIsMatch();
    var getMatchData = require_getMatchData();
    var matchesStrictComparable = require_matchesStrictComparable();
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }
    module.exports = baseMatches;
  }
});

// node_modules/lodash/isSymbol.js
var require_isSymbol = __commonJS({
  "node_modules/lodash/isSymbol.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var symbolTag = "[object Symbol]";
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
    }
    module.exports = isSymbol;
  }
});

// node_modules/lodash/_isKey.js
var require_isKey = __commonJS({
  "node_modules/lodash/_isKey.js"(exports, module) {
    var isArray = require_isArray();
    var isSymbol = require_isSymbol();
    var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
    var reIsPlainProp = /^\w*$/;
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
    }
    module.exports = isKey;
  }
});

// node_modules/lodash/memoize.js
var require_memoize = __commonJS({
  "node_modules/lodash/memoize.js"(exports, module) {
    var MapCache = require_MapCache();
    var FUNC_ERROR_TEXT = "Expected a function";
    function memoize(func, resolver) {
      if (typeof func != "function" || resolver != null && typeof resolver != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache2 = memoized.cache;
        if (cache2.has(key)) {
          return cache2.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache2.set(key, result) || cache2;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache)();
      return memoized;
    }
    memoize.Cache = MapCache;
    module.exports = memoize;
  }
});

// node_modules/lodash/_memoizeCapped.js
var require_memoizeCapped = __commonJS({
  "node_modules/lodash/_memoizeCapped.js"(exports, module) {
    var memoize = require_memoize();
    var MAX_MEMOIZE_SIZE = 500;
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache2.size === MAX_MEMOIZE_SIZE) {
          cache2.clear();
        }
        return key;
      });
      var cache2 = result.cache;
      return result;
    }
    module.exports = memoizeCapped;
  }
});

// node_modules/lodash/_stringToPath.js
var require_stringToPath = __commonJS({
  "node_modules/lodash/_stringToPath.js"(exports, module) {
    var memoizeCapped = require_memoizeCapped();
    var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    var reEscapeChar = /\\(\\)?/g;
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46) {
        result.push("");
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
      });
      return result;
    });
    module.exports = stringToPath;
  }
});

// node_modules/lodash/_baseToString.js
var require_baseToString = __commonJS({
  "node_modules/lodash/_baseToString.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var arrayMap = require_arrayMap();
    var isArray = require_isArray();
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolToString = symbolProto ? symbolProto.toString : void 0;
    function baseToString(value) {
      if (typeof value == "string") {
        return value;
      }
      if (isArray(value)) {
        return arrayMap(value, baseToString) + "";
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : "";
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module.exports = baseToString;
  }
});

// node_modules/lodash/toString.js
var require_toString = __commonJS({
  "node_modules/lodash/toString.js"(exports, module) {
    var baseToString = require_baseToString();
    function toString(value) {
      return value == null ? "" : baseToString(value);
    }
    module.exports = toString;
  }
});

// node_modules/lodash/_castPath.js
var require_castPath = __commonJS({
  "node_modules/lodash/_castPath.js"(exports, module) {
    var isArray = require_isArray();
    var isKey = require_isKey();
    var stringToPath = require_stringToPath();
    var toString = require_toString();
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }
    module.exports = castPath;
  }
});

// node_modules/lodash/_toKey.js
var require_toKey = __commonJS({
  "node_modules/lodash/_toKey.js"(exports, module) {
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    function toKey(value) {
      if (typeof value == "string" || isSymbol(value)) {
        return value;
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module.exports = toKey;
  }
});

// node_modules/lodash/_baseGet.js
var require_baseGet = __commonJS({
  "node_modules/lodash/_baseGet.js"(exports, module) {
    var castPath = require_castPath();
    var toKey = require_toKey();
    function baseGet(object, path) {
      path = castPath(path, object);
      var index = 0, length = path.length;
      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return index && index == length ? object : void 0;
    }
    module.exports = baseGet;
  }
});

// node_modules/lodash/get.js
var require_get = __commonJS({
  "node_modules/lodash/get.js"(exports, module) {
    var baseGet = require_baseGet();
    function get(object, path, defaultValue) {
      var result = object == null ? void 0 : baseGet(object, path);
      return result === void 0 ? defaultValue : result;
    }
    module.exports = get;
  }
});

// node_modules/lodash/_baseHasIn.js
var require_baseHasIn = __commonJS({
  "node_modules/lodash/_baseHasIn.js"(exports, module) {
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }
    module.exports = baseHasIn;
  }
});

// node_modules/lodash/_hasPath.js
var require_hasPath = __commonJS({
  "node_modules/lodash/_hasPath.js"(exports, module) {
    var castPath = require_castPath();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isIndex = require_isIndex();
    var isLength = require_isLength();
    var toKey = require_toKey();
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);
      var index = -1, length = path.length, result = false;
      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
    }
    module.exports = hasPath;
  }
});

// node_modules/lodash/hasIn.js
var require_hasIn = __commonJS({
  "node_modules/lodash/hasIn.js"(exports, module) {
    var baseHasIn = require_baseHasIn();
    var hasPath = require_hasPath();
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }
    module.exports = hasIn;
  }
});

// node_modules/lodash/_baseMatchesProperty.js
var require_baseMatchesProperty = __commonJS({
  "node_modules/lodash/_baseMatchesProperty.js"(exports, module) {
    var baseIsEqual = require_baseIsEqual();
    var get = require_get();
    var hasIn = require_hasIn();
    var isKey = require_isKey();
    var isStrictComparable = require_isStrictComparable();
    var matchesStrictComparable = require_matchesStrictComparable();
    var toKey = require_toKey();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return objValue === void 0 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }
    module.exports = baseMatchesProperty;
  }
});

// node_modules/lodash/_baseProperty.js
var require_baseProperty = __commonJS({
  "node_modules/lodash/_baseProperty.js"(exports, module) {
    function baseProperty(key) {
      return function(object) {
        return object == null ? void 0 : object[key];
      };
    }
    module.exports = baseProperty;
  }
});

// node_modules/lodash/_basePropertyDeep.js
var require_basePropertyDeep = __commonJS({
  "node_modules/lodash/_basePropertyDeep.js"(exports, module) {
    var baseGet = require_baseGet();
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }
    module.exports = basePropertyDeep;
  }
});

// node_modules/lodash/property.js
var require_property = __commonJS({
  "node_modules/lodash/property.js"(exports, module) {
    var baseProperty = require_baseProperty();
    var basePropertyDeep = require_basePropertyDeep();
    var isKey = require_isKey();
    var toKey = require_toKey();
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }
    module.exports = property;
  }
});

// node_modules/lodash/_baseIteratee.js
var require_baseIteratee = __commonJS({
  "node_modules/lodash/_baseIteratee.js"(exports, module) {
    var baseMatches = require_baseMatches();
    var baseMatchesProperty = require_baseMatchesProperty();
    var identity = require_identity();
    var isArray = require_isArray();
    var property = require_property();
    function baseIteratee(value) {
      if (typeof value == "function") {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == "object") {
        return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
      }
      return property(value);
    }
    module.exports = baseIteratee;
  }
});

// node_modules/lodash/_createBaseEach.js
var require_createBaseEach = __commonJS({
  "node_modules/lodash/_createBaseEach.js"(exports, module) {
    var isArrayLike = require_isArrayLike();
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length, index = fromRight ? length : -1, iterable = Object(collection);
        while (fromRight ? index-- : ++index < length) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }
    module.exports = createBaseEach;
  }
});

// node_modules/lodash/_baseEach.js
var require_baseEach = __commonJS({
  "node_modules/lodash/_baseEach.js"(exports, module) {
    var baseForOwn = require_baseForOwn();
    var createBaseEach = require_createBaseEach();
    var baseEach = createBaseEach(baseForOwn);
    module.exports = baseEach;
  }
});

// node_modules/lodash/_baseMap.js
var require_baseMap = __commonJS({
  "node_modules/lodash/_baseMap.js"(exports, module) {
    var baseEach = require_baseEach();
    var isArrayLike = require_isArrayLike();
    function baseMap(collection, iteratee) {
      var index = -1, result = isArrayLike(collection) ? Array(collection.length) : [];
      baseEach(collection, function(value, key, collection2) {
        result[++index] = iteratee(value, key, collection2);
      });
      return result;
    }
    module.exports = baseMap;
  }
});

// node_modules/lodash/map.js
var require_map = __commonJS({
  "node_modules/lodash/map.js"(exports, module) {
    var arrayMap = require_arrayMap();
    var baseIteratee = require_baseIteratee();
    var baseMap = require_baseMap();
    var isArray = require_isArray();
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, baseIteratee(iteratee, 3));
    }
    module.exports = map;
  }
});

// node_modules/reactcss/lib/flattenNames.js
var require_flattenNames = __commonJS({
  "node_modules/reactcss/lib/flattenNames.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.flattenNames = void 0;
    var _isString2 = require_isString();
    var _isString3 = _interopRequireDefault(_isString2);
    var _forOwn2 = require_forOwn();
    var _forOwn3 = _interopRequireDefault(_forOwn2);
    var _isPlainObject2 = require_isPlainObject();
    var _isPlainObject3 = _interopRequireDefault(_isPlainObject2);
    var _map2 = require_map();
    var _map3 = _interopRequireDefault(_map2);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var flattenNames = exports.flattenNames = function flattenNames2() {
      var things = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      var names = [];
      (0, _map3.default)(things, function(thing) {
        if (Array.isArray(thing)) {
          flattenNames2(thing).map(function(name) {
            return names.push(name);
          });
        } else if ((0, _isPlainObject3.default)(thing)) {
          (0, _forOwn3.default)(thing, function(value, key) {
            value === true && names.push(key);
            names.push(key + "-" + value);
          });
        } else if ((0, _isString3.default)(thing)) {
          names.push(thing);
        }
      });
      return names;
    };
    exports.default = flattenNames;
  }
});

// node_modules/lodash/_arrayEach.js
var require_arrayEach = __commonJS({
  "node_modules/lodash/_arrayEach.js"(exports, module) {
    function arrayEach(array, iteratee) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (iteratee(array[index], index, array) === false) {
          break;
        }
      }
      return array;
    }
    module.exports = arrayEach;
  }
});

// node_modules/lodash/_defineProperty.js
var require_defineProperty = __commonJS({
  "node_modules/lodash/_defineProperty.js"(exports, module) {
    var getNative = require_getNative();
    var defineProperty = function() {
      try {
        var func = getNative(Object, "defineProperty");
        func({}, "", {});
        return func;
      } catch (e3) {
      }
    }();
    module.exports = defineProperty;
  }
});

// node_modules/lodash/_baseAssignValue.js
var require_baseAssignValue = __commonJS({
  "node_modules/lodash/_baseAssignValue.js"(exports, module) {
    var defineProperty = require_defineProperty();
    function baseAssignValue(object, key, value) {
      if (key == "__proto__" && defineProperty) {
        defineProperty(object, key, {
          "configurable": true,
          "enumerable": true,
          "value": value,
          "writable": true
        });
      } else {
        object[key] = value;
      }
    }
    module.exports = baseAssignValue;
  }
});

// node_modules/lodash/_assignValue.js
var require_assignValue = __commonJS({
  "node_modules/lodash/_assignValue.js"(exports, module) {
    var baseAssignValue = require_baseAssignValue();
    var eq = require_eq();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === void 0 && !(key in object)) {
        baseAssignValue(object, key, value);
      }
    }
    module.exports = assignValue;
  }
});

// node_modules/lodash/_copyObject.js
var require_copyObject = __commonJS({
  "node_modules/lodash/_copyObject.js"(exports, module) {
    var assignValue = require_assignValue();
    var baseAssignValue = require_baseAssignValue();
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});
      var index = -1, length = props.length;
      while (++index < length) {
        var key = props[index];
        var newValue = customizer ? customizer(object[key], source[key], key, object, source) : void 0;
        if (newValue === void 0) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }
    module.exports = copyObject;
  }
});

// node_modules/lodash/_baseAssign.js
var require_baseAssign = __commonJS({
  "node_modules/lodash/_baseAssign.js"(exports, module) {
    var copyObject = require_copyObject();
    var keys = require_keys();
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }
    module.exports = baseAssign;
  }
});

// node_modules/lodash/_nativeKeysIn.js
var require_nativeKeysIn = __commonJS({
  "node_modules/lodash/_nativeKeysIn.js"(exports, module) {
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = nativeKeysIn;
  }
});

// node_modules/lodash/_baseKeysIn.js
var require_baseKeysIn = __commonJS({
  "node_modules/lodash/_baseKeysIn.js"(exports, module) {
    var isObject = require_isObject();
    var isPrototype = require_isPrototype();
    var nativeKeysIn = require_nativeKeysIn();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object), result = [];
      for (var key in object) {
        if (!(key == "constructor" && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = baseKeysIn;
  }
});

// node_modules/lodash/keysIn.js
var require_keysIn = __commonJS({
  "node_modules/lodash/keysIn.js"(exports, module) {
    var arrayLikeKeys = require_arrayLikeKeys();
    var baseKeysIn = require_baseKeysIn();
    var isArrayLike = require_isArrayLike();
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }
    module.exports = keysIn;
  }
});

// node_modules/lodash/_baseAssignIn.js
var require_baseAssignIn = __commonJS({
  "node_modules/lodash/_baseAssignIn.js"(exports, module) {
    var copyObject = require_copyObject();
    var keysIn = require_keysIn();
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }
    module.exports = baseAssignIn;
  }
});

// node_modules/lodash/_cloneBuffer.js
var require_cloneBuffer = __commonJS({
  "node_modules/lodash/_cloneBuffer.js"(exports, module) {
    var root = require_root();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer = moduleExports ? root.Buffer : void 0;
    var allocUnsafe = Buffer ? Buffer.allocUnsafe : void 0;
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length, result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
      buffer.copy(result);
      return result;
    }
    module.exports = cloneBuffer;
  }
});

// node_modules/lodash/_copyArray.js
var require_copyArray = __commonJS({
  "node_modules/lodash/_copyArray.js"(exports, module) {
    function copyArray(source, array) {
      var index = -1, length = source.length;
      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }
    module.exports = copyArray;
  }
});

// node_modules/lodash/_copySymbols.js
var require_copySymbols = __commonJS({
  "node_modules/lodash/_copySymbols.js"(exports, module) {
    var copyObject = require_copyObject();
    var getSymbols = require_getSymbols();
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }
    module.exports = copySymbols;
  }
});

// node_modules/lodash/_getSymbolsIn.js
var require_getSymbolsIn = __commonJS({
  "node_modules/lodash/_getSymbolsIn.js"(exports, module) {
    var arrayPush = require_arrayPush();
    var getPrototype = require_getPrototype();
    var getSymbols = require_getSymbols();
    var stubArray = require_stubArray();
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };
    module.exports = getSymbolsIn;
  }
});

// node_modules/lodash/_copySymbolsIn.js
var require_copySymbolsIn = __commonJS({
  "node_modules/lodash/_copySymbolsIn.js"(exports, module) {
    var copyObject = require_copyObject();
    var getSymbolsIn = require_getSymbolsIn();
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }
    module.exports = copySymbolsIn;
  }
});

// node_modules/lodash/_getAllKeysIn.js
var require_getAllKeysIn = __commonJS({
  "node_modules/lodash/_getAllKeysIn.js"(exports, module) {
    var baseGetAllKeys = require_baseGetAllKeys();
    var getSymbolsIn = require_getSymbolsIn();
    var keysIn = require_keysIn();
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }
    module.exports = getAllKeysIn;
  }
});

// node_modules/lodash/_initCloneArray.js
var require_initCloneArray = __commonJS({
  "node_modules/lodash/_initCloneArray.js"(exports, module) {
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function initCloneArray(array) {
      var length = array.length, result = new array.constructor(length);
      if (length && typeof array[0] == "string" && hasOwnProperty.call(array, "index")) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }
    module.exports = initCloneArray;
  }
});

// node_modules/lodash/_cloneArrayBuffer.js
var require_cloneArrayBuffer = __commonJS({
  "node_modules/lodash/_cloneArrayBuffer.js"(exports, module) {
    var Uint8Array = require_Uint8Array();
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }
    module.exports = cloneArrayBuffer;
  }
});

// node_modules/lodash/_cloneDataView.js
var require_cloneDataView = __commonJS({
  "node_modules/lodash/_cloneDataView.js"(exports, module) {
    var cloneArrayBuffer = require_cloneArrayBuffer();
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }
    module.exports = cloneDataView;
  }
});

// node_modules/lodash/_cloneRegExp.js
var require_cloneRegExp = __commonJS({
  "node_modules/lodash/_cloneRegExp.js"(exports, module) {
    var reFlags = /\w*$/;
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }
    module.exports = cloneRegExp;
  }
});

// node_modules/lodash/_cloneSymbol.js
var require_cloneSymbol = __commonJS({
  "node_modules/lodash/_cloneSymbol.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }
    module.exports = cloneSymbol;
  }
});

// node_modules/lodash/_cloneTypedArray.js
var require_cloneTypedArray = __commonJS({
  "node_modules/lodash/_cloneTypedArray.js"(exports, module) {
    var cloneArrayBuffer = require_cloneArrayBuffer();
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }
    module.exports = cloneTypedArray;
  }
});

// node_modules/lodash/_initCloneByTag.js
var require_initCloneByTag = __commonJS({
  "node_modules/lodash/_initCloneByTag.js"(exports, module) {
    var cloneArrayBuffer = require_cloneArrayBuffer();
    var cloneDataView = require_cloneDataView();
    var cloneRegExp = require_cloneRegExp();
    var cloneSymbol = require_cloneSymbol();
    var cloneTypedArray = require_cloneTypedArray();
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);
        case boolTag:
        case dateTag:
          return new Ctor(+object);
        case dataViewTag:
          return cloneDataView(object, isDeep);
        case float32Tag:
        case float64Tag:
        case int8Tag:
        case int16Tag:
        case int32Tag:
        case uint8Tag:
        case uint8ClampedTag:
        case uint16Tag:
        case uint32Tag:
          return cloneTypedArray(object, isDeep);
        case mapTag:
          return new Ctor();
        case numberTag:
        case stringTag:
          return new Ctor(object);
        case regexpTag:
          return cloneRegExp(object);
        case setTag:
          return new Ctor();
        case symbolTag:
          return cloneSymbol(object);
      }
    }
    module.exports = initCloneByTag;
  }
});

// node_modules/lodash/_baseCreate.js
var require_baseCreate = __commonJS({
  "node_modules/lodash/_baseCreate.js"(exports, module) {
    var isObject = require_isObject();
    var objectCreate = Object.create;
    var baseCreate = function() {
      function object() {
      }
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object();
        object.prototype = void 0;
        return result;
      };
    }();
    module.exports = baseCreate;
  }
});

// node_modules/lodash/_initCloneObject.js
var require_initCloneObject = __commonJS({
  "node_modules/lodash/_initCloneObject.js"(exports, module) {
    var baseCreate = require_baseCreate();
    var getPrototype = require_getPrototype();
    var isPrototype = require_isPrototype();
    function initCloneObject(object) {
      return typeof object.constructor == "function" && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
    }
    module.exports = initCloneObject;
  }
});

// node_modules/lodash/_baseIsMap.js
var require_baseIsMap = __commonJS({
  "node_modules/lodash/_baseIsMap.js"(exports, module) {
    var getTag = require_getTag();
    var isObjectLike = require_isObjectLike();
    var mapTag = "[object Map]";
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }
    module.exports = baseIsMap;
  }
});

// node_modules/lodash/isMap.js
var require_isMap = __commonJS({
  "node_modules/lodash/isMap.js"(exports, module) {
    var baseIsMap = require_baseIsMap();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsMap = nodeUtil && nodeUtil.isMap;
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
    module.exports = isMap;
  }
});

// node_modules/lodash/_baseIsSet.js
var require_baseIsSet = __commonJS({
  "node_modules/lodash/_baseIsSet.js"(exports, module) {
    var getTag = require_getTag();
    var isObjectLike = require_isObjectLike();
    var setTag = "[object Set]";
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }
    module.exports = baseIsSet;
  }
});

// node_modules/lodash/isSet.js
var require_isSet = __commonJS({
  "node_modules/lodash/isSet.js"(exports, module) {
    var baseIsSet = require_baseIsSet();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsSet = nodeUtil && nodeUtil.isSet;
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
    module.exports = isSet;
  }
});

// node_modules/lodash/_baseClone.js
var require_baseClone = __commonJS({
  "node_modules/lodash/_baseClone.js"(exports, module) {
    var Stack = require_Stack();
    var arrayEach = require_arrayEach();
    var assignValue = require_assignValue();
    var baseAssign = require_baseAssign();
    var baseAssignIn = require_baseAssignIn();
    var cloneBuffer = require_cloneBuffer();
    var copyArray = require_copyArray();
    var copySymbols = require_copySymbols();
    var copySymbolsIn = require_copySymbolsIn();
    var getAllKeys = require_getAllKeys();
    var getAllKeysIn = require_getAllKeysIn();
    var getTag = require_getTag();
    var initCloneArray = require_initCloneArray();
    var initCloneByTag = require_initCloneByTag();
    var initCloneObject = require_initCloneObject();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isMap = require_isMap();
    var isObject = require_isObject();
    var isSet = require_isSet();
    var keys = require_keys();
    var keysIn = require_keysIn();
    var CLONE_DEEP_FLAG = 1;
    var CLONE_FLAT_FLAG = 2;
    var CLONE_SYMBOLS_FLAG = 4;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var cloneableTags = {};
    cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
    cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== void 0) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || isFunc && !object) {
          result = isFlat || isFunc ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      stack || (stack = new Stack());
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);
      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key2) {
          result.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
        });
      }
      var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
      var props = isArr ? void 0 : keysFunc(value);
      arrayEach(props || value, function(subValue, key2) {
        if (props) {
          key2 = subValue;
          subValue = value[key2];
        }
        assignValue(result, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
      });
      return result;
    }
    module.exports = baseClone;
  }
});

// node_modules/lodash/cloneDeep.js
var require_cloneDeep = __commonJS({
  "node_modules/lodash/cloneDeep.js"(exports, module) {
    var baseClone = require_baseClone();
    var CLONE_DEEP_FLAG = 1;
    var CLONE_SYMBOLS_FLAG = 4;
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }
    module.exports = cloneDeep;
  }
});

// node_modules/reactcss/lib/mergeClasses.js
var require_mergeClasses = __commonJS({
  "node_modules/reactcss/lib/mergeClasses.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.mergeClasses = void 0;
    var _forOwn2 = require_forOwn();
    var _forOwn3 = _interopRequireDefault(_forOwn2);
    var _cloneDeep2 = require_cloneDeep();
    var _cloneDeep3 = _interopRequireDefault(_cloneDeep2);
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var mergeClasses = exports.mergeClasses = function mergeClasses2(classes) {
      var activeNames = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
      var styles = classes.default && (0, _cloneDeep3.default)(classes.default) || {};
      activeNames.map(function(name) {
        var toMerge = classes[name];
        if (toMerge) {
          (0, _forOwn3.default)(toMerge, function(value, key) {
            if (!styles[key]) {
              styles[key] = {};
            }
            styles[key] = _extends({}, styles[key], toMerge[key]);
          });
        }
        return name;
      });
      return styles;
    };
    exports.default = mergeClasses;
  }
});

// node_modules/reactcss/lib/autoprefix.js
var require_autoprefix = __commonJS({
  "node_modules/reactcss/lib/autoprefix.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.autoprefix = void 0;
    var _forOwn2 = require_forOwn();
    var _forOwn3 = _interopRequireDefault(_forOwn2);
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var transforms = {
      borderRadius: function borderRadius(value) {
        return {
          msBorderRadius: value,
          MozBorderRadius: value,
          OBorderRadius: value,
          WebkitBorderRadius: value,
          borderRadius: value
        };
      },
      boxShadow: function boxShadow(value) {
        return {
          msBoxShadow: value,
          MozBoxShadow: value,
          OBoxShadow: value,
          WebkitBoxShadow: value,
          boxShadow: value
        };
      },
      userSelect: function userSelect(value) {
        return {
          WebkitTouchCallout: value,
          KhtmlUserSelect: value,
          MozUserSelect: value,
          msUserSelect: value,
          WebkitUserSelect: value,
          userSelect: value
        };
      },
      flex: function flex(value) {
        return {
          WebkitBoxFlex: value,
          MozBoxFlex: value,
          WebkitFlex: value,
          msFlex: value,
          flex: value
        };
      },
      flexBasis: function flexBasis(value) {
        return {
          WebkitFlexBasis: value,
          flexBasis: value
        };
      },
      justifyContent: function justifyContent(value) {
        return {
          WebkitJustifyContent: value,
          justifyContent: value
        };
      },
      transition: function transition(value) {
        return {
          msTransition: value,
          MozTransition: value,
          OTransition: value,
          WebkitTransition: value,
          transition: value
        };
      },
      transform: function transform(value) {
        return {
          msTransform: value,
          MozTransform: value,
          OTransform: value,
          WebkitTransform: value,
          transform: value
        };
      },
      absolute: function absolute(value) {
        var direction = value && value.split(" ");
        return {
          position: "absolute",
          top: direction && direction[0],
          right: direction && direction[1],
          bottom: direction && direction[2],
          left: direction && direction[3]
        };
      },
      extend: function extend(name, otherElementStyles) {
        var otherStyle = otherElementStyles[name];
        if (otherStyle) {
          return otherStyle;
        }
        return {
          "extend": name
        };
      }
    };
    var autoprefix = exports.autoprefix = function autoprefix2(elements) {
      var prefixed = {};
      (0, _forOwn3.default)(elements, function(styles, element) {
        var expanded = {};
        (0, _forOwn3.default)(styles, function(value, key) {
          var transform = transforms[key];
          if (transform) {
            expanded = _extends({}, expanded, transform(value));
          } else {
            expanded[key] = value;
          }
        });
        prefixed[element] = expanded;
      });
      return prefixed;
    };
    exports.default = autoprefix;
  }
});

// node_modules/reactcss/lib/components/hover.js
var require_hover = __commonJS({
  "node_modules/reactcss/lib/components/hover.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.hover = void 0;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var hover = exports.hover = function hover2(Component) {
      var Span = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "span";
      return function(_React$Component) {
        _inherits(Hover, _React$Component);
        function Hover() {
          var _ref;
          var _temp, _this, _ret;
          _classCallCheck(this, Hover);
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Hover.__proto__ || Object.getPrototypeOf(Hover)).call.apply(_ref, [this].concat(args))), _this), _this.state = { hover: false }, _this.handleMouseOver = function() {
            return _this.setState({ hover: true });
          }, _this.handleMouseOut = function() {
            return _this.setState({ hover: false });
          }, _this.render = function() {
            return _react2.default.createElement(
              Span,
              { onMouseOver: _this.handleMouseOver, onMouseOut: _this.handleMouseOut },
              _react2.default.createElement(Component, _extends({}, _this.props, _this.state))
            );
          }, _temp), _possibleConstructorReturn(_this, _ret);
        }
        return Hover;
      }(_react2.default.Component);
    };
    exports.default = hover;
  }
});

// node_modules/reactcss/lib/components/active.js
var require_active = __commonJS({
  "node_modules/reactcss/lib/components/active.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.active = void 0;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var active = exports.active = function active2(Component) {
      var Span = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "span";
      return function(_React$Component) {
        _inherits(Active, _React$Component);
        function Active() {
          var _ref;
          var _temp, _this, _ret;
          _classCallCheck(this, Active);
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Active.__proto__ || Object.getPrototypeOf(Active)).call.apply(_ref, [this].concat(args))), _this), _this.state = { active: false }, _this.handleMouseDown = function() {
            return _this.setState({ active: true });
          }, _this.handleMouseUp = function() {
            return _this.setState({ active: false });
          }, _this.render = function() {
            return _react2.default.createElement(
              Span,
              { onMouseDown: _this.handleMouseDown, onMouseUp: _this.handleMouseUp },
              _react2.default.createElement(Component, _extends({}, _this.props, _this.state))
            );
          }, _temp), _possibleConstructorReturn(_this, _ret);
        }
        return Active;
      }(_react2.default.Component);
    };
    exports.default = active;
  }
});

// node_modules/reactcss/lib/loop.js
var require_loop = __commonJS({
  "node_modules/reactcss/lib/loop.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var loopable = function loopable2(i, length) {
      var props = {};
      var setProp = function setProp2(name) {
        var value = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
        props[name] = value;
      };
      i === 0 && setProp("first-child");
      i === length - 1 && setProp("last-child");
      (i === 0 || i % 2 === 0) && setProp("even");
      Math.abs(i % 2) === 1 && setProp("odd");
      setProp("nth-child", i);
      return props;
    };
    exports.default = loopable;
  }
});

// node_modules/reactcss/lib/index.js
var require_lib = __commonJS({
  "node_modules/reactcss/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ReactCSS = exports.loop = exports.handleActive = exports.handleHover = exports.hover = void 0;
    var _flattenNames = require_flattenNames();
    var _flattenNames2 = _interopRequireDefault(_flattenNames);
    var _mergeClasses = require_mergeClasses();
    var _mergeClasses2 = _interopRequireDefault(_mergeClasses);
    var _autoprefix = require_autoprefix();
    var _autoprefix2 = _interopRequireDefault(_autoprefix);
    var _hover2 = require_hover();
    var _hover3 = _interopRequireDefault(_hover2);
    var _active = require_active();
    var _active2 = _interopRequireDefault(_active);
    var _loop2 = require_loop();
    var _loop3 = _interopRequireDefault(_loop2);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    exports.hover = _hover3.default;
    exports.handleHover = _hover3.default;
    exports.handleActive = _active2.default;
    exports.loop = _loop3.default;
    var ReactCSS = exports.ReactCSS = function ReactCSS2(classes) {
      for (var _len = arguments.length, activations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        activations[_key - 1] = arguments[_key];
      }
      var activeNames = (0, _flattenNames2.default)(activations);
      var merged = (0, _mergeClasses2.default)(classes, activeNames);
      return (0, _autoprefix2.default)(merged);
    };
    exports.default = ReactCSS;
  }
});

// node_modules/lodash/_assignMergeValue.js
var require_assignMergeValue = __commonJS({
  "node_modules/lodash/_assignMergeValue.js"(exports, module) {
    var baseAssignValue = require_baseAssignValue();
    var eq = require_eq();
    function assignMergeValue(object, key, value) {
      if (value !== void 0 && !eq(object[key], value) || value === void 0 && !(key in object)) {
        baseAssignValue(object, key, value);
      }
    }
    module.exports = assignMergeValue;
  }
});

// node_modules/lodash/isArrayLikeObject.js
var require_isArrayLikeObject = __commonJS({
  "node_modules/lodash/isArrayLikeObject.js"(exports, module) {
    var isArrayLike = require_isArrayLike();
    var isObjectLike = require_isObjectLike();
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }
    module.exports = isArrayLikeObject;
  }
});

// node_modules/lodash/_safeGet.js
var require_safeGet = __commonJS({
  "node_modules/lodash/_safeGet.js"(exports, module) {
    function safeGet(object, key) {
      if (key === "constructor" && typeof object[key] === "function") {
        return;
      }
      if (key == "__proto__") {
        return;
      }
      return object[key];
    }
    module.exports = safeGet;
  }
});

// node_modules/lodash/toPlainObject.js
var require_toPlainObject = __commonJS({
  "node_modules/lodash/toPlainObject.js"(exports, module) {
    var copyObject = require_copyObject();
    var keysIn = require_keysIn();
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }
    module.exports = toPlainObject;
  }
});

// node_modules/lodash/_baseMergeDeep.js
var require_baseMergeDeep = __commonJS({
  "node_modules/lodash/_baseMergeDeep.js"(exports, module) {
    var assignMergeValue = require_assignMergeValue();
    var cloneBuffer = require_cloneBuffer();
    var cloneTypedArray = require_cloneTypedArray();
    var copyArray = require_copyArray();
    var initCloneObject = require_initCloneObject();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isArrayLikeObject = require_isArrayLikeObject();
    var isBuffer = require_isBuffer();
    var isFunction2 = require_isFunction();
    var isObject = require_isObject();
    var isPlainObject = require_isPlainObject();
    var isTypedArray = require_isTypedArray();
    var safeGet = require_safeGet();
    var toPlainObject = require_toPlainObject();
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : void 0;
      var isCommon = newValue === void 0;
      if (isCommon) {
        var isArr = isArray(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          } else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          } else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          } else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          } else {
            newValue = [];
          }
        } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          } else if (!isObject(objValue) || isFunction2(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        } else {
          isCommon = false;
        }
      }
      if (isCommon) {
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack["delete"](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }
    module.exports = baseMergeDeep;
  }
});

// node_modules/lodash/_baseMerge.js
var require_baseMerge = __commonJS({
  "node_modules/lodash/_baseMerge.js"(exports, module) {
    var Stack = require_Stack();
    var assignMergeValue = require_assignMergeValue();
    var baseFor = require_baseFor();
    var baseMergeDeep = require_baseMergeDeep();
    var isObject = require_isObject();
    var keysIn = require_keysIn();
    var safeGet = require_safeGet();
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        stack || (stack = new Stack());
        if (isObject(srcValue)) {
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        } else {
          var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + "", object, source, stack) : void 0;
          if (newValue === void 0) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }
    module.exports = baseMerge;
  }
});

// node_modules/lodash/_apply.js
var require_apply = __commonJS({
  "node_modules/lodash/_apply.js"(exports, module) {
    function apply(func, thisArg, args) {
      switch (args.length) {
        case 0:
          return func.call(thisArg);
        case 1:
          return func.call(thisArg, args[0]);
        case 2:
          return func.call(thisArg, args[0], args[1]);
        case 3:
          return func.call(thisArg, args[0], args[1], args[2]);
      }
      return func.apply(thisArg, args);
    }
    module.exports = apply;
  }
});

// node_modules/lodash/_overRest.js
var require_overRest = __commonJS({
  "node_modules/lodash/_overRest.js"(exports, module) {
    var apply = require_apply();
    var nativeMax = Math.max;
    function overRest(func, start, transform) {
      start = nativeMax(start === void 0 ? func.length - 1 : start, 0);
      return function() {
        var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array(length);
        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }
    module.exports = overRest;
  }
});

// node_modules/lodash/constant.js
var require_constant = __commonJS({
  "node_modules/lodash/constant.js"(exports, module) {
    function constant(value) {
      return function() {
        return value;
      };
    }
    module.exports = constant;
  }
});

// node_modules/lodash/_baseSetToString.js
var require_baseSetToString = __commonJS({
  "node_modules/lodash/_baseSetToString.js"(exports, module) {
    var constant = require_constant();
    var defineProperty = require_defineProperty();
    var identity = require_identity();
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, "toString", {
        "configurable": true,
        "enumerable": false,
        "value": constant(string),
        "writable": true
      });
    };
    module.exports = baseSetToString;
  }
});

// node_modules/lodash/_shortOut.js
var require_shortOut = __commonJS({
  "node_modules/lodash/_shortOut.js"(exports, module) {
    var HOT_COUNT = 800;
    var HOT_SPAN = 16;
    var nativeNow = Date.now;
    function shortOut(func) {
      var count = 0, lastCalled = 0;
      return function() {
        var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(void 0, arguments);
      };
    }
    module.exports = shortOut;
  }
});

// node_modules/lodash/_setToString.js
var require_setToString = __commonJS({
  "node_modules/lodash/_setToString.js"(exports, module) {
    var baseSetToString = require_baseSetToString();
    var shortOut = require_shortOut();
    var setToString = shortOut(baseSetToString);
    module.exports = setToString;
  }
});

// node_modules/lodash/_baseRest.js
var require_baseRest = __commonJS({
  "node_modules/lodash/_baseRest.js"(exports, module) {
    var identity = require_identity();
    var overRest = require_overRest();
    var setToString = require_setToString();
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + "");
    }
    module.exports = baseRest;
  }
});

// node_modules/lodash/_isIterateeCall.js
var require_isIterateeCall = __commonJS({
  "node_modules/lodash/_isIterateeCall.js"(exports, module) {
    var eq = require_eq();
    var isArrayLike = require_isArrayLike();
    var isIndex = require_isIndex();
    var isObject = require_isObject();
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == "number" ? isArrayLike(object) && isIndex(index, object.length) : type == "string" && index in object) {
        return eq(object[index], value);
      }
      return false;
    }
    module.exports = isIterateeCall;
  }
});

// node_modules/lodash/_createAssigner.js
var require_createAssigner = __commonJS({
  "node_modules/lodash/_createAssigner.js"(exports, module) {
    var baseRest = require_baseRest();
    var isIterateeCall = require_isIterateeCall();
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : void 0, guard = length > 2 ? sources[2] : void 0;
        customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : void 0;
        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? void 0 : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }
    module.exports = createAssigner;
  }
});

// node_modules/lodash/merge.js
var require_merge = __commonJS({
  "node_modules/lodash/merge.js"(exports, module) {
    var baseMerge = require_baseMerge();
    var createAssigner = require_createAssigner();
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });
    module.exports = merge;
  }
});

// node_modules/@meronex/icons/cg/CgColorPicker.js
var require_CgColorPicker = __commonJS({
  "node_modules/@meronex/icons/cg/CgColorPicker.js"(exports, module) {
    var GenIcon = require_cjs().GenIcon;
    module.exports = function(props) {
      return GenIcon({ "tag": "svg", "attr": { "viewBox": "0 0 24 24", "fill": "none" }, "child": [{ "tag": "path", "attr": { "d": "M20.3847 2.87868C19.2132 1.70711 17.3137 1.70711 16.1421 2.87868L14.0202 5.00052L13.313 4.29332C12.9225 3.9028 12.2894 3.9028 11.8988 4.29332C11.5083 4.68385 11.5083 5.31701 11.8988 5.70754L17.5557 11.3644C17.9462 11.7549 18.5794 11.7549 18.9699 11.3644C19.3604 10.9739 19.3604 10.3407 18.9699 9.95018L18.2629 9.24316L20.3847 7.12132C21.5563 5.94975 21.5563 4.05025 20.3847 2.87868Z", "fill": "currentColor" } }, { "tag": "path", "attr": { "fillRule": "evenodd", "clipRule": "evenodd", "d": "M11.9297 7.09116L4.1515 14.8693C3.22786 15.793 3.03239 17.169 3.5651 18.2842L1.99994 19.8493L3.41415 21.2635L4.97931 19.6984C6.09444 20.2311 7.4705 20.0356 8.39414 19.112L16.1723 11.3338L11.9297 7.09116ZM13.3439 11.3338L11.9297 9.91959L5.56571 16.2835C5.17518 16.6741 5.17518 17.3072 5.56571 17.6978C5.95623 18.0883 6.5894 18.0883 6.97992 17.6978L13.3439 11.3338Z", "fill": "currentColor" } }], "content": "\n" })(props);
    };
  }
});

// node_modules/react-color/lib/helpers/alpha.js
var require_alpha = __commonJS({
  "node_modules/react-color/lib/helpers/alpha.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var calculateChange = exports.calculateChange = function calculateChange2(e3, hsl, direction, initialA, container) {
      var containerWidth = container.clientWidth;
      var containerHeight = container.clientHeight;
      var x2 = typeof e3.pageX === "number" ? e3.pageX : e3.touches[0].pageX;
      var y = typeof e3.pageY === "number" ? e3.pageY : e3.touches[0].pageY;
      var left = x2 - (container.getBoundingClientRect().left + window.pageXOffset);
      var top = y - (container.getBoundingClientRect().top + window.pageYOffset);
      if (direction === "vertical") {
        var a2 = void 0;
        if (top < 0) {
          a2 = 0;
        } else if (top > containerHeight) {
          a2 = 1;
        } else {
          a2 = Math.round(top * 100 / containerHeight) / 100;
        }
        if (hsl.a !== a2) {
          return {
            h: hsl.h,
            s: hsl.s,
            l: hsl.l,
            a: a2,
            source: "rgb"
          };
        }
      } else {
        var _a = void 0;
        if (left < 0) {
          _a = 0;
        } else if (left > containerWidth) {
          _a = 1;
        } else {
          _a = Math.round(left * 100 / containerWidth) / 100;
        }
        if (initialA !== _a) {
          return {
            h: hsl.h,
            s: hsl.s,
            l: hsl.l,
            a: _a,
            source: "rgb"
          };
        }
      }
      return null;
    };
  }
});

// node_modules/react-color/lib/helpers/checkboard.js
var require_checkboard = __commonJS({
  "node_modules/react-color/lib/helpers/checkboard.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var checkboardCache = {};
    var render = exports.render = function render2(c1, c2, size, serverCanvas) {
      if (typeof document === "undefined" && !serverCanvas) {
        return null;
      }
      var canvas = serverCanvas ? new serverCanvas() : document.createElement("canvas");
      canvas.width = size * 2;
      canvas.height = size * 2;
      var ctx = canvas.getContext("2d");
      if (!ctx) {
        return null;
      }
      ctx.fillStyle = c1;
      ctx.fillRect(0, 0, canvas.width, canvas.height);
      ctx.fillStyle = c2;
      ctx.fillRect(0, 0, size, size);
      ctx.translate(size, size);
      ctx.fillRect(0, 0, size, size);
      return canvas.toDataURL();
    };
    var get = exports.get = function get2(c1, c2, size, serverCanvas) {
      var key = c1 + "-" + c2 + "-" + size + (serverCanvas ? "-server" : "");
      if (checkboardCache[key]) {
        return checkboardCache[key];
      }
      var checkboard = render(c1, c2, size, serverCanvas);
      checkboardCache[key] = checkboard;
      return checkboard;
    };
  }
});

// node_modules/react-color/lib/components/common/Checkboard.js
var require_Checkboard = __commonJS({
  "node_modules/react-color/lib/components/common/Checkboard.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Checkboard = void 0;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _reactcss = require_lib();
    var _reactcss2 = _interopRequireDefault(_reactcss);
    var _checkboard = require_checkboard();
    var checkboard = _interopRequireWildcard(_checkboard);
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key))
              newObj[key] = obj[key];
          }
        }
        newObj.default = obj;
        return newObj;
      }
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var Checkboard = exports.Checkboard = function Checkboard2(_ref) {
      var white = _ref.white, grey = _ref.grey, size = _ref.size, renderers = _ref.renderers, borderRadius = _ref.borderRadius, boxShadow = _ref.boxShadow, children = _ref.children;
      var styles = (0, _reactcss2.default)({
        "default": {
          grid: {
            borderRadius,
            boxShadow,
            absolute: "0px 0px 0px 0px",
            background: "url(" + checkboard.get(white, grey, size, renderers.canvas) + ") center left"
          }
        }
      });
      return (0, _react.isValidElement)(children) ? _react2.default.cloneElement(children, _extends({}, children.props, { style: _extends({}, children.props.style, styles.grid) })) : _react2.default.createElement("div", { style: styles.grid });
    };
    Checkboard.defaultProps = {
      size: 8,
      white: "transparent",
      grey: "rgba(0,0,0,.08)",
      renderers: {}
    };
    exports.default = Checkboard;
  }
});

// node_modules/react-color/lib/components/common/Alpha.js
var require_Alpha = __commonJS({
  "node_modules/react-color/lib/components/common/Alpha.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Alpha = void 0;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _reactcss = require_lib();
    var _reactcss2 = _interopRequireDefault(_reactcss);
    var _alpha = require_alpha();
    var alpha = _interopRequireWildcard(_alpha);
    var _Checkboard = require_Checkboard();
    var _Checkboard2 = _interopRequireDefault(_Checkboard);
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key))
              newObj[key] = obj[key];
          }
        }
        newObj.default = obj;
        return newObj;
      }
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Alpha = exports.Alpha = function(_ref) {
      _inherits(Alpha2, _ref);
      function Alpha2() {
        var _ref2;
        var _temp, _this, _ret;
        _classCallCheck(this, Alpha2);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = Alpha2.__proto__ || Object.getPrototypeOf(Alpha2)).call.apply(_ref2, [this].concat(args))), _this), _this.handleChange = function(e3) {
          var change = alpha.calculateChange(e3, _this.props.hsl, _this.props.direction, _this.props.a, _this.container);
          change && typeof _this.props.onChange === "function" && _this.props.onChange(change, e3);
        }, _this.handleMouseDown = function(e3) {
          _this.handleChange(e3);
          window.addEventListener("mousemove", _this.handleChange);
          window.addEventListener("mouseup", _this.handleMouseUp);
        }, _this.handleMouseUp = function() {
          _this.unbindEventListeners();
        }, _this.unbindEventListeners = function() {
          window.removeEventListener("mousemove", _this.handleChange);
          window.removeEventListener("mouseup", _this.handleMouseUp);
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }
      _createClass(Alpha2, [{
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.unbindEventListeners();
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;
          var rgb = this.props.rgb;
          var styles = (0, _reactcss2.default)({
            "default": {
              alpha: {
                absolute: "0px 0px 0px 0px",
                borderRadius: this.props.radius
              },
              checkboard: {
                absolute: "0px 0px 0px 0px",
                overflow: "hidden",
                borderRadius: this.props.radius
              },
              gradient: {
                absolute: "0px 0px 0px 0px",
                background: "linear-gradient(to right, rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + ", 0) 0%,\n           rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + ", 1) 100%)",
                boxShadow: this.props.shadow,
                borderRadius: this.props.radius
              },
              container: {
                position: "relative",
                height: "100%",
                margin: "0 3px"
              },
              pointer: {
                position: "absolute",
                left: rgb.a * 100 + "%"
              },
              slider: {
                width: "4px",
                borderRadius: "1px",
                height: "8px",
                boxShadow: "0 0 2px rgba(0, 0, 0, .6)",
                background: "#fff",
                marginTop: "1px",
                transform: "translateX(-2px)"
              }
            },
            "vertical": {
              gradient: {
                background: "linear-gradient(to bottom, rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + ", 0) 0%,\n           rgba(" + rgb.r + "," + rgb.g + "," + rgb.b + ", 1) 100%)"
              },
              pointer: {
                left: 0,
                top: rgb.a * 100 + "%"
              }
            },
            "overwrite": _extends({}, this.props.style)
          }, {
            vertical: this.props.direction === "vertical",
            overwrite: true
          });
          return _react2.default.createElement(
            "div",
            { style: styles.alpha },
            _react2.default.createElement(
              "div",
              { style: styles.checkboard },
              _react2.default.createElement(_Checkboard2.default, { renderers: this.props.renderers })
            ),
            _react2.default.createElement("div", { style: styles.gradient }),
            _react2.default.createElement(
              "div",
              {
                style: styles.container,
                ref: function ref(container) {
                  return _this2.container = container;
                },
                onMouseDown: this.handleMouseDown,
                onTouchMove: this.handleChange,
                onTouchStart: this.handleChange
              },
              _react2.default.createElement(
                "div",
                { style: styles.pointer },
                this.props.pointer ? _react2.default.createElement(this.props.pointer, this.props) : _react2.default.createElement("div", { style: styles.slider })
              )
            )
          );
        }
      }]);
      return Alpha2;
    }(_react.PureComponent || _react.Component);
    exports.default = Alpha;
  }
});

// node_modules/react-color/lib/components/common/EditableInput.js
var require_EditableInput = __commonJS({
  "node_modules/react-color/lib/components/common/EditableInput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.EditableInput = void 0;
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _reactcss = require_lib();
    var _reactcss2 = _interopRequireDefault(_reactcss);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var DEFAULT_ARROW_OFFSET = 1;
    var UP_KEY_CODE = 38;
    var DOWN_KEY_CODE = 40;
    var VALID_KEY_CODES = [UP_KEY_CODE, DOWN_KEY_CODE];
    var isValidKeyCode = function isValidKeyCode2(keyCode) {
      return VALID_KEY_CODES.indexOf(keyCode) > -1;
    };
    var getNumberValue = function getNumberValue2(value) {
      return Number(String(value).replace(/%/g, ""));
    };
    var idCounter = 1;
    var EditableInput = exports.EditableInput = function(_ref) {
      _inherits(EditableInput2, _ref);
      function EditableInput2(props) {
        _classCallCheck(this, EditableInput2);
        var _this = _possibleConstructorReturn(this, (EditableInput2.__proto__ || Object.getPrototypeOf(EditableInput2)).call(this));
        _this.handleBlur = function() {
          if (_this.state.blurValue) {
            _this.setState({ value: _this.state.blurValue, blurValue: null });
          }
        };
        _this.handleChange = function(e3) {
          _this.setUpdatedValue(e3.target.value, e3);
        };
        _this.handleKeyDown = function(e3) {
          var value = getNumberValue(e3.target.value);
          if (!isNaN(value) && isValidKeyCode(e3.keyCode)) {
            var offset = _this.getArrowOffset();
            var updatedValue = e3.keyCode === UP_KEY_CODE ? value + offset : value - offset;
            _this.setUpdatedValue(updatedValue, e3);
          }
        };
        _this.handleDrag = function(e3) {
          if (_this.props.dragLabel) {
            var newValue = Math.round(_this.props.value + e3.movementX);
            if (newValue >= 0 && newValue <= _this.props.dragMax) {
              _this.props.onChange && _this.props.onChange(_this.getValueObjectWithLabel(newValue), e3);
            }
          }
        };
        _this.handleMouseDown = function(e3) {
          if (_this.props.dragLabel) {
            e3.preventDefault();
            _this.handleDrag(e3);
            window.addEventListener("mousemove", _this.handleDrag);
            window.addEventListener("mouseup", _this.handleMouseUp);
          }
        };
        _this.handleMouseUp = function() {
          _this.unbindEventListeners();
        };
        _this.unbindEventListeners = function() {
          window.removeEventListener("mousemove", _this.handleDrag);
          window.removeEventListener("mouseup", _this.handleMouseUp);
        };
        _this.state = {
          value: String(props.value).toUpperCase(),
          blurValue: String(props.value).toUpperCase()
        };
        _this.inputId = "rc-editable-input-" + idCounter++;
        return _this;
      }
      _createClass(EditableInput2, [{
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps, prevState) {
          if (this.props.value !== this.state.value && (prevProps.value !== this.props.value || prevState.value !== this.state.value)) {
            if (this.input === document.activeElement) {
              this.setState({ blurValue: String(this.props.value).toUpperCase() });
            } else {
              this.setState({ value: String(this.props.value).toUpperCase(), blurValue: !this.state.blurValue && String(this.props.value).toUpperCase() });
            }
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.unbindEventListeners();
        }
      }, {
        key: "getValueObjectWithLabel",
        value: function getValueObjectWithLabel(value) {
          return _defineProperty({}, this.props.label, value);
        }
      }, {
        key: "getArrowOffset",
        value: function getArrowOffset() {
          return this.props.arrowOffset || DEFAULT_ARROW_OFFSET;
        }
      }, {
        key: "setUpdatedValue",
        value: function setUpdatedValue(value, e3) {
          var onChangeValue = this.props.label ? this.getValueObjectWithLabel(value) : value;
          this.props.onChange && this.props.onChange(onChangeValue, e3);
          this.setState({ value });
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;
          var styles = (0, _reactcss2.default)({
            "default": {
              wrap: {
                position: "relative"
              }
            },
            "user-override": {
              wrap: this.props.style && this.props.style.wrap ? this.props.style.wrap : {},
              input: this.props.style && this.props.style.input ? this.props.style.input : {},
              label: this.props.style && this.props.style.label ? this.props.style.label : {}
            },
            "dragLabel-true": {
              label: {
                cursor: "ew-resize"
              }
            }
          }, {
            "user-override": true
          }, this.props);
          return _react2.default.createElement(
            "div",
            { style: styles.wrap },
            _react2.default.createElement("input", {
              id: this.inputId,
              style: styles.input,
              ref: function ref(input) {
                return _this2.input = input;
              },
              value: this.state.value,
              onKeyDown: this.handleKeyDown,
              onChange: this.handleChange,
              onBlur: this.handleBlur,
              placeholder: this.props.placeholder,
              spellCheck: "false"
            }),
            this.props.label && !this.props.hideLabel ? _react2.default.createElement(
              "label",
              {
                htmlFor: this.inputId,
                style: styles.label,
                onMouseDown: this.handleMouseDown
              },
              this.props.label
            ) : null
          );
        }
      }]);
      return EditableInput2;
    }(_react.PureComponent || _react.Component);
    exports.default = EditableInput;
  }
});

// node_modules/react-color/lib/helpers/hue.js
var require_hue = __commonJS({
  "node_modules/react-color/lib/helpers/hue.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var calculateChange = exports.calculateChange = function calculateChange2(e3, direction, hsl, container) {
      var containerWidth = container.clientWidth;
      var containerHeight = container.clientHeight;
      var x2 = typeof e3.pageX === "number" ? e3.pageX : e3.touches[0].pageX;
      var y = typeof e3.pageY === "number" ? e3.pageY : e3.touches[0].pageY;
      var left = x2 - (container.getBoundingClientRect().left + window.pageXOffset);
      var top = y - (container.getBoundingClientRect().top + window.pageYOffset);
      if (direction === "vertical") {
        var h3 = void 0;
        if (top < 0) {
          h3 = 359;
        } else if (top > containerHeight) {
          h3 = 0;
        } else {
          var percent = -(top * 100 / containerHeight) + 100;
          h3 = 360 * percent / 100;
        }
        if (hsl.h !== h3) {
          return {
            h: h3,
            s: hsl.s,
            l: hsl.l,
            a: hsl.a,
            source: "hsl"
          };
        }
      } else {
        var _h = void 0;
        if (left < 0) {
          _h = 0;
        } else if (left > containerWidth) {
          _h = 359;
        } else {
          var _percent = left * 100 / containerWidth;
          _h = 360 * _percent / 100;
        }
        if (hsl.h !== _h) {
          return {
            h: _h,
            s: hsl.s,
            l: hsl.l,
            a: hsl.a,
            source: "hsl"
          };
        }
      }
      return null;
    };
  }
});

// node_modules/react-color/lib/components/common/Hue.js
var require_Hue = __commonJS({
  "node_modules/react-color/lib/components/common/Hue.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Hue = void 0;
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _reactcss = require_lib();
    var _reactcss2 = _interopRequireDefault(_reactcss);
    var _hue = require_hue();
    var hue = _interopRequireWildcard(_hue);
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key))
              newObj[key] = obj[key];
          }
        }
        newObj.default = obj;
        return newObj;
      }
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Hue = exports.Hue = function(_ref) {
      _inherits(Hue2, _ref);
      function Hue2() {
        var _ref2;
        var _temp, _this, _ret;
        _classCallCheck(this, Hue2);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = Hue2.__proto__ || Object.getPrototypeOf(Hue2)).call.apply(_ref2, [this].concat(args))), _this), _this.handleChange = function(e3) {
          var change = hue.calculateChange(e3, _this.props.direction, _this.props.hsl, _this.container);
          change && typeof _this.props.onChange === "function" && _this.props.onChange(change, e3);
        }, _this.handleMouseDown = function(e3) {
          _this.handleChange(e3);
          window.addEventListener("mousemove", _this.handleChange);
          window.addEventListener("mouseup", _this.handleMouseUp);
        }, _this.handleMouseUp = function() {
          _this.unbindEventListeners();
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }
      _createClass(Hue2, [{
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.unbindEventListeners();
        }
      }, {
        key: "unbindEventListeners",
        value: function unbindEventListeners() {
          window.removeEventListener("mousemove", this.handleChange);
          window.removeEventListener("mouseup", this.handleMouseUp);
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;
          var _props$direction = this.props.direction, direction = _props$direction === void 0 ? "horizontal" : _props$direction;
          var styles = (0, _reactcss2.default)({
            "default": {
              hue: {
                absolute: "0px 0px 0px 0px",
                borderRadius: this.props.radius,
                boxShadow: this.props.shadow
              },
              container: {
                padding: "0 2px",
                position: "relative",
                height: "100%",
                borderRadius: this.props.radius
              },
              pointer: {
                position: "absolute",
                left: this.props.hsl.h * 100 / 360 + "%"
              },
              slider: {
                marginTop: "1px",
                width: "4px",
                borderRadius: "1px",
                height: "8px",
                boxShadow: "0 0 2px rgba(0, 0, 0, .6)",
                background: "#fff",
                transform: "translateX(-2px)"
              }
            },
            "vertical": {
              pointer: {
                left: "0px",
                top: -(this.props.hsl.h * 100 / 360) + 100 + "%"
              }
            }
          }, { vertical: direction === "vertical" });
          return _react2.default.createElement(
            "div",
            { style: styles.hue },
            _react2.default.createElement(
              "div",
              {
                className: "hue-" + direction,
                style: styles.container,
                ref: function ref(container) {
                  return _this2.container = container;
                },
                onMouseDown: this.handleMouseDown,
                onTouchMove: this.handleChange,
                onTouchStart: this.handleChange
              },
              _react2.default.createElement(
                "style",
                null,
                "\n            .hue-horizontal {\n              background: linear-gradient(to right, #f00 0%, #ff0 17%, #0f0\n                33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n              background: -webkit-linear-gradient(to right, #f00 0%, #ff0\n                17%, #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n            }\n\n            .hue-vertical {\n              background: linear-gradient(to top, #f00 0%, #ff0 17%, #0f0 33%,\n                #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n              background: -webkit-linear-gradient(to top, #f00 0%, #ff0 17%,\n                #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n            }\n          "
              ),
              _react2.default.createElement(
                "div",
                { style: styles.pointer },
                this.props.pointer ? _react2.default.createElement(this.props.pointer, this.props) : _react2.default.createElement("div", { style: styles.slider })
              )
            )
          );
        }
      }]);
      return Hue2;
    }(_react.PureComponent || _react.Component);
    exports.default = Hue;
  }
});

// node_modules/react-color/lib/components/common/Raised.js
var require_Raised = __commonJS({
  "node_modules/react-color/lib/components/common/Raised.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Raised = void 0;
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _reactcss = require_lib();
    var _reactcss2 = _interopRequireDefault(_reactcss);
    var _merge = require_merge();
    var _merge2 = _interopRequireDefault(_merge);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var Raised = exports.Raised = function Raised2(_ref) {
      var zDepth = _ref.zDepth, radius = _ref.radius, background = _ref.background, children = _ref.children, _ref$styles = _ref.styles, passedStyles = _ref$styles === void 0 ? {} : _ref$styles;
      var styles = (0, _reactcss2.default)((0, _merge2.default)({
        "default": {
          wrap: {
            position: "relative",
            display: "inline-block"
          },
          content: {
            position: "relative"
          },
          bg: {
            absolute: "0px 0px 0px 0px",
            boxShadow: "0 " + zDepth + "px " + zDepth * 4 + "px rgba(0,0,0,.24)",
            borderRadius: radius,
            background
          }
        },
        "zDepth-0": {
          bg: {
            boxShadow: "none"
          }
        },
        "zDepth-1": {
          bg: {
            boxShadow: "0 2px 10px rgba(0,0,0,.12), 0 2px 5px rgba(0,0,0,.16)"
          }
        },
        "zDepth-2": {
          bg: {
            boxShadow: "0 6px 20px rgba(0,0,0,.19), 0 8px 17px rgba(0,0,0,.2)"
          }
        },
        "zDepth-3": {
          bg: {
            boxShadow: "0 17px 50px rgba(0,0,0,.19), 0 12px 15px rgba(0,0,0,.24)"
          }
        },
        "zDepth-4": {
          bg: {
            boxShadow: "0 25px 55px rgba(0,0,0,.21), 0 16px 28px rgba(0,0,0,.22)"
          }
        },
        "zDepth-5": {
          bg: {
            boxShadow: "0 40px 77px rgba(0,0,0,.22), 0 27px 24px rgba(0,0,0,.2)"
          }
        },
        "square": {
          bg: {
            borderRadius: "0"
          }
        },
        "circle": {
          bg: {
            borderRadius: "50%"
          }
        }
      }, passedStyles), { "zDepth-1": zDepth === 1 });
      return _react2.default.createElement(
        "div",
        { style: styles.wrap },
        _react2.default.createElement("div", { style: styles.bg }),
        _react2.default.createElement(
          "div",
          { style: styles.content },
          children
        )
      );
    };
    Raised.propTypes = {
      background: _propTypes2.default.string,
      zDepth: _propTypes2.default.oneOf([0, 1, 2, 3, 4, 5]),
      radius: _propTypes2.default.number,
      styles: _propTypes2.default.object
    };
    Raised.defaultProps = {
      background: "#fff",
      zDepth: 1,
      radius: 2,
      styles: {}
    };
    exports.default = Raised;
  }
});

// node_modules/lodash/now.js
var require_now = __commonJS({
  "node_modules/lodash/now.js"(exports, module) {
    var root = require_root();
    var now = function() {
      return root.Date.now();
    };
    module.exports = now;
  }
});

// node_modules/lodash/_trimmedEndIndex.js
var require_trimmedEndIndex = __commonJS({
  "node_modules/lodash/_trimmedEndIndex.js"(exports, module) {
    var reWhitespace = /\s/;
    function trimmedEndIndex(string) {
      var index = string.length;
      while (index-- && reWhitespace.test(string.charAt(index))) {
      }
      return index;
    }
    module.exports = trimmedEndIndex;
  }
});

// node_modules/lodash/_baseTrim.js
var require_baseTrim = __commonJS({
  "node_modules/lodash/_baseTrim.js"(exports, module) {
    var trimmedEndIndex = require_trimmedEndIndex();
    var reTrimStart = /^\s+/;
    function baseTrim(string) {
      return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
    }
    module.exports = baseTrim;
  }
});

// node_modules/lodash/toNumber.js
var require_toNumber = __commonJS({
  "node_modules/lodash/toNumber.js"(exports, module) {
    var baseTrim = require_baseTrim();
    var isObject = require_isObject();
    var isSymbol = require_isSymbol();
    var NAN = 0 / 0;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module.exports = toNumber;
  }
});

// node_modules/lodash/debounce.js
var require_debounce = __commonJS({
  "node_modules/lodash/debounce.js"(exports, module) {
    var isObject = require_isObject();
    var now = require_now();
    var toNumber = require_toNumber();
    var FUNC_ERROR_TEXT = "Expected a function";
    var nativeMax = Math.max;
    var nativeMin = Math.min;
    function debounce(func, wait, options) {
      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = "maxWait" in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = "trailing" in options ? !!options.trailing : trailing;
      }
      function invokeFunc(time) {
        var args = lastArgs, thisArg = lastThis;
        lastArgs = lastThis = void 0;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }
      function leadingEdge(time) {
        lastInvokeTime = time;
        timerId = setTimeout(timerExpired, wait);
        return leading ? invokeFunc(time) : result;
      }
      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
        return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
      }
      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
      }
      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        timerId = setTimeout(timerExpired, remainingWait(time));
      }
      function trailingEdge(time) {
        timerId = void 0;
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = void 0;
        return result;
      }
      function cancel() {
        if (timerId !== void 0) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = void 0;
      }
      function flush() {
        return timerId === void 0 ? result : trailingEdge(now());
      }
      function debounced() {
        var time = now(), isInvoking = shouldInvoke(time);
        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;
        if (isInvoking) {
          if (timerId === void 0) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === void 0) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }
    module.exports = debounce;
  }
});

// node_modules/lodash/throttle.js
var require_throttle = __commonJS({
  "node_modules/lodash/throttle.js"(exports, module) {
    var debounce = require_debounce();
    var isObject = require_isObject();
    var FUNC_ERROR_TEXT = "Expected a function";
    function throttle(func, wait, options) {
      var leading = true, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = "leading" in options ? !!options.leading : leading;
        trailing = "trailing" in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        "leading": leading,
        "maxWait": wait,
        "trailing": trailing
      });
    }
    module.exports = throttle;
  }
});

// node_modules/react-color/lib/helpers/saturation.js
var require_saturation = __commonJS({
  "node_modules/react-color/lib/helpers/saturation.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var calculateChange = exports.calculateChange = function calculateChange2(e3, hsl, container) {
      var _container$getBoundin = container.getBoundingClientRect(), containerWidth = _container$getBoundin.width, containerHeight = _container$getBoundin.height;
      var x2 = typeof e3.pageX === "number" ? e3.pageX : e3.touches[0].pageX;
      var y = typeof e3.pageY === "number" ? e3.pageY : e3.touches[0].pageY;
      var left = x2 - (container.getBoundingClientRect().left + window.pageXOffset);
      var top = y - (container.getBoundingClientRect().top + window.pageYOffset);
      if (left < 0) {
        left = 0;
      } else if (left > containerWidth) {
        left = containerWidth;
      }
      if (top < 0) {
        top = 0;
      } else if (top > containerHeight) {
        top = containerHeight;
      }
      var saturation = left / containerWidth;
      var bright = 1 - top / containerHeight;
      return {
        h: hsl.h,
        s: saturation,
        v: bright,
        a: hsl.a,
        source: "hsv"
      };
    };
  }
});

// node_modules/react-color/lib/components/common/Saturation.js
var require_Saturation = __commonJS({
  "node_modules/react-color/lib/components/common/Saturation.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Saturation = void 0;
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _reactcss = require_lib();
    var _reactcss2 = _interopRequireDefault(_reactcss);
    var _throttle = require_throttle();
    var _throttle2 = _interopRequireDefault(_throttle);
    var _saturation = require_saturation();
    var saturation = _interopRequireWildcard(_saturation);
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key))
              newObj[key] = obj[key];
          }
        }
        newObj.default = obj;
        return newObj;
      }
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var Saturation = exports.Saturation = function(_ref) {
      _inherits(Saturation2, _ref);
      function Saturation2(props) {
        _classCallCheck(this, Saturation2);
        var _this = _possibleConstructorReturn(this, (Saturation2.__proto__ || Object.getPrototypeOf(Saturation2)).call(this, props));
        _this.handleChange = function(e3) {
          typeof _this.props.onChange === "function" && _this.throttle(_this.props.onChange, saturation.calculateChange(e3, _this.props.hsl, _this.container), e3);
        };
        _this.handleMouseDown = function(e3) {
          _this.handleChange(e3);
          var renderWindow = _this.getContainerRenderWindow();
          renderWindow.addEventListener("mousemove", _this.handleChange);
          renderWindow.addEventListener("mouseup", _this.handleMouseUp);
        };
        _this.handleMouseUp = function() {
          _this.unbindEventListeners();
        };
        _this.throttle = (0, _throttle2.default)(function(fn, data, e3) {
          fn(data, e3);
        }, 50);
        return _this;
      }
      _createClass(Saturation2, [{
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.throttle.cancel();
          this.unbindEventListeners();
        }
      }, {
        key: "getContainerRenderWindow",
        value: function getContainerRenderWindow() {
          var container = this.container;
          var renderWindow = window;
          while (!renderWindow.document.contains(container) && renderWindow.parent !== renderWindow) {
            renderWindow = renderWindow.parent;
          }
          return renderWindow;
        }
      }, {
        key: "unbindEventListeners",
        value: function unbindEventListeners() {
          var renderWindow = this.getContainerRenderWindow();
          renderWindow.removeEventListener("mousemove", this.handleChange);
          renderWindow.removeEventListener("mouseup", this.handleMouseUp);
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;
          var _ref2 = this.props.style || {}, color = _ref2.color, white = _ref2.white, black = _ref2.black, pointer = _ref2.pointer, circle = _ref2.circle;
          var styles = (0, _reactcss2.default)({
            "default": {
              color: {
                absolute: "0px 0px 0px 0px",
                background: "hsl(" + this.props.hsl.h + ",100%, 50%)",
                borderRadius: this.props.radius
              },
              white: {
                absolute: "0px 0px 0px 0px",
                borderRadius: this.props.radius
              },
              black: {
                absolute: "0px 0px 0px 0px",
                boxShadow: this.props.shadow,
                borderRadius: this.props.radius
              },
              pointer: {
                position: "absolute",
                top: -(this.props.hsv.v * 100) + 100 + "%",
                left: this.props.hsv.s * 100 + "%",
                cursor: "default"
              },
              circle: {
                width: "4px",
                height: "4px",
                boxShadow: "0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3),\n            0 0 1px 2px rgba(0,0,0,.4)",
                borderRadius: "50%",
                cursor: "hand",
                transform: "translate(-2px, -2px)"
              }
            },
            "custom": {
              color,
              white,
              black,
              pointer,
              circle
            }
          }, { "custom": !!this.props.style });
          return _react2.default.createElement(
            "div",
            {
              style: styles.color,
              ref: function ref(container) {
                return _this2.container = container;
              },
              onMouseDown: this.handleMouseDown,
              onTouchMove: this.handleChange,
              onTouchStart: this.handleChange
            },
            _react2.default.createElement(
              "style",
              null,
              "\n          .saturation-white {\n            background: -webkit-linear-gradient(to right, #fff, rgba(255,255,255,0));\n            background: linear-gradient(to right, #fff, rgba(255,255,255,0));\n          }\n          .saturation-black {\n            background: -webkit-linear-gradient(to top, #000, rgba(0,0,0,0));\n            background: linear-gradient(to top, #000, rgba(0,0,0,0));\n          }\n        "
            ),
            _react2.default.createElement(
              "div",
              { style: styles.white, className: "saturation-white" },
              _react2.default.createElement("div", { style: styles.black, className: "saturation-black" }),
              _react2.default.createElement(
                "div",
                { style: styles.pointer },
                this.props.pointer ? _react2.default.createElement(this.props.pointer, this.props) : _react2.default.createElement("div", { style: styles.circle })
              )
            )
          );
        }
      }]);
      return Saturation2;
    }(_react.PureComponent || _react.Component);
    exports.default = Saturation;
  }
});

// node_modules/lodash/forEach.js
var require_forEach = __commonJS({
  "node_modules/lodash/forEach.js"(exports, module) {
    var arrayEach = require_arrayEach();
    var baseEach = require_baseEach();
    var castFunction = require_castFunction();
    var isArray = require_isArray();
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, castFunction(iteratee));
    }
    module.exports = forEach;
  }
});

// node_modules/lodash/each.js
var require_each = __commonJS({
  "node_modules/lodash/each.js"(exports, module) {
    module.exports = require_forEach();
  }
});

// node_modules/tinycolor2/cjs/tinycolor.js
var require_tinycolor = __commonJS({
  "node_modules/tinycolor2/cjs/tinycolor.js"(exports, module) {
    (function(global2, factory) {
      typeof exports === "object" && typeof module !== "undefined" ? module.exports = factory() : typeof define === "function" && define.amd ? define(factory) : (global2 = typeof globalThis !== "undefined" ? globalThis : global2 || self, global2.tinycolor = factory());
    })(exports, function() {
      "use strict";
      function _typeof(obj) {
        "@babel/helpers - typeof";
        return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
          return typeof obj2;
        } : function(obj2) {
          return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        }, _typeof(obj);
      }
      var trimLeft = /^\s+/;
      var trimRight = /\s+$/;
      function tinycolor(color, opts) {
        color = color ? color : "";
        opts = opts || {};
        if (color instanceof tinycolor) {
          return color;
        }
        if (!(this instanceof tinycolor)) {
          return new tinycolor(color, opts);
        }
        var rgb = inputToRGB(color);
        this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = Math.round(100 * this._a) / 100, this._format = opts.format || rgb.format;
        this._gradientType = opts.gradientType;
        if (this._r < 1)
          this._r = Math.round(this._r);
        if (this._g < 1)
          this._g = Math.round(this._g);
        if (this._b < 1)
          this._b = Math.round(this._b);
        this._ok = rgb.ok;
      }
      tinycolor.prototype = {
        isDark: function isDark() {
          return this.getBrightness() < 128;
        },
        isLight: function isLight() {
          return !this.isDark();
        },
        isValid: function isValid() {
          return this._ok;
        },
        getOriginalInput: function getOriginalInput() {
          return this._originalInput;
        },
        getFormat: function getFormat() {
          return this._format;
        },
        getAlpha: function getAlpha() {
          return this._a;
        },
        getBrightness: function getBrightness() {
          var rgb = this.toRgb();
          return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1e3;
        },
        getLuminance: function getLuminance() {
          var rgb = this.toRgb();
          var RsRGB, GsRGB, BsRGB, R, G, B;
          RsRGB = rgb.r / 255;
          GsRGB = rgb.g / 255;
          BsRGB = rgb.b / 255;
          if (RsRGB <= 0.03928)
            R = RsRGB / 12.92;
          else
            R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);
          if (GsRGB <= 0.03928)
            G = GsRGB / 12.92;
          else
            G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);
          if (BsRGB <= 0.03928)
            B = BsRGB / 12.92;
          else
            B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);
          return 0.2126 * R + 0.7152 * G + 0.0722 * B;
        },
        setAlpha: function setAlpha(value) {
          this._a = boundAlpha(value);
          this._roundA = Math.round(100 * this._a) / 100;
          return this;
        },
        toHsv: function toHsv() {
          var hsv = rgbToHsv(this._r, this._g, this._b);
          return {
            h: hsv.h * 360,
            s: hsv.s,
            v: hsv.v,
            a: this._a
          };
        },
        toHsvString: function toHsvString() {
          var hsv = rgbToHsv(this._r, this._g, this._b);
          var h3 = Math.round(hsv.h * 360), s2 = Math.round(hsv.s * 100), v2 = Math.round(hsv.v * 100);
          return this._a == 1 ? "hsv(" + h3 + ", " + s2 + "%, " + v2 + "%)" : "hsva(" + h3 + ", " + s2 + "%, " + v2 + "%, " + this._roundA + ")";
        },
        toHsl: function toHsl() {
          var hsl = rgbToHsl(this._r, this._g, this._b);
          return {
            h: hsl.h * 360,
            s: hsl.s,
            l: hsl.l,
            a: this._a
          };
        },
        toHslString: function toHslString() {
          var hsl = rgbToHsl(this._r, this._g, this._b);
          var h3 = Math.round(hsl.h * 360), s2 = Math.round(hsl.s * 100), l2 = Math.round(hsl.l * 100);
          return this._a == 1 ? "hsl(" + h3 + ", " + s2 + "%, " + l2 + "%)" : "hsla(" + h3 + ", " + s2 + "%, " + l2 + "%, " + this._roundA + ")";
        },
        toHex: function toHex(allow3Char) {
          return rgbToHex(this._r, this._g, this._b, allow3Char);
        },
        toHexString: function toHexString(allow3Char) {
          return "#" + this.toHex(allow3Char);
        },
        toHex8: function toHex8(allow4Char) {
          return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);
        },
        toHex8String: function toHex8String(allow4Char) {
          return "#" + this.toHex8(allow4Char);
        },
        toRgb: function toRgb() {
          return {
            r: Math.round(this._r),
            g: Math.round(this._g),
            b: Math.round(this._b),
            a: this._a
          };
        },
        toRgbString: function toRgbString() {
          return this._a == 1 ? "rgb(" + Math.round(this._r) + ", " + Math.round(this._g) + ", " + Math.round(this._b) + ")" : "rgba(" + Math.round(this._r) + ", " + Math.round(this._g) + ", " + Math.round(this._b) + ", " + this._roundA + ")";
        },
        toPercentageRgb: function toPercentageRgb() {
          return {
            r: Math.round(bound01(this._r, 255) * 100) + "%",
            g: Math.round(bound01(this._g, 255) * 100) + "%",
            b: Math.round(bound01(this._b, 255) * 100) + "%",
            a: this._a
          };
        },
        toPercentageRgbString: function toPercentageRgbString() {
          return this._a == 1 ? "rgb(" + Math.round(bound01(this._r, 255) * 100) + "%, " + Math.round(bound01(this._g, 255) * 100) + "%, " + Math.round(bound01(this._b, 255) * 100) + "%)" : "rgba(" + Math.round(bound01(this._r, 255) * 100) + "%, " + Math.round(bound01(this._g, 255) * 100) + "%, " + Math.round(bound01(this._b, 255) * 100) + "%, " + this._roundA + ")";
        },
        toName: function toName() {
          if (this._a === 0) {
            return "transparent";
          }
          if (this._a < 1) {
            return false;
          }
          return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;
        },
        toFilter: function toFilter(secondColor) {
          var hex8String = "#" + rgbaToArgbHex(this._r, this._g, this._b, this._a);
          var secondHex8String = hex8String;
          var gradientType = this._gradientType ? "GradientType = 1, " : "";
          if (secondColor) {
            var s2 = tinycolor(secondColor);
            secondHex8String = "#" + rgbaToArgbHex(s2._r, s2._g, s2._b, s2._a);
          }
          return "progid:DXImageTransform.Microsoft.gradient(" + gradientType + "startColorstr=" + hex8String + ",endColorstr=" + secondHex8String + ")";
        },
        toString: function toString(format) {
          var formatSet = !!format;
          format = format || this._format;
          var formattedString = false;
          var hasAlpha = this._a < 1 && this._a >= 0;
          var needsAlphaFormat = !formatSet && hasAlpha && (format === "hex" || format === "hex6" || format === "hex3" || format === "hex4" || format === "hex8" || format === "name");
          if (needsAlphaFormat) {
            if (format === "name" && this._a === 0) {
              return this.toName();
            }
            return this.toRgbString();
          }
          if (format === "rgb") {
            formattedString = this.toRgbString();
          }
          if (format === "prgb") {
            formattedString = this.toPercentageRgbString();
          }
          if (format === "hex" || format === "hex6") {
            formattedString = this.toHexString();
          }
          if (format === "hex3") {
            formattedString = this.toHexString(true);
          }
          if (format === "hex4") {
            formattedString = this.toHex8String(true);
          }
          if (format === "hex8") {
            formattedString = this.toHex8String();
          }
          if (format === "name") {
            formattedString = this.toName();
          }
          if (format === "hsl") {
            formattedString = this.toHslString();
          }
          if (format === "hsv") {
            formattedString = this.toHsvString();
          }
          return formattedString || this.toHexString();
        },
        clone: function clone() {
          return tinycolor(this.toString());
        },
        _applyModification: function _applyModification(fn, args) {
          var color = fn.apply(null, [this].concat([].slice.call(args)));
          this._r = color._r;
          this._g = color._g;
          this._b = color._b;
          this.setAlpha(color._a);
          return this;
        },
        lighten: function lighten() {
          return this._applyModification(_lighten, arguments);
        },
        brighten: function brighten() {
          return this._applyModification(_brighten, arguments);
        },
        darken: function darken() {
          return this._applyModification(_darken, arguments);
        },
        desaturate: function desaturate() {
          return this._applyModification(_desaturate, arguments);
        },
        saturate: function saturate() {
          return this._applyModification(_saturate, arguments);
        },
        greyscale: function greyscale() {
          return this._applyModification(_greyscale, arguments);
        },
        spin: function spin() {
          return this._applyModification(_spin, arguments);
        },
        _applyCombination: function _applyCombination(fn, args) {
          return fn.apply(null, [this].concat([].slice.call(args)));
        },
        analogous: function analogous() {
          return this._applyCombination(_analogous, arguments);
        },
        complement: function complement() {
          return this._applyCombination(_complement, arguments);
        },
        monochromatic: function monochromatic() {
          return this._applyCombination(_monochromatic, arguments);
        },
        splitcomplement: function splitcomplement() {
          return this._applyCombination(_splitcomplement, arguments);
        },
        // Disabled until https://github.com/bgrins/TinyColor/issues/254
        // polyad: function (number) {
        //   return this._applyCombination(polyad, [number]);
        // },
        triad: function triad() {
          return this._applyCombination(polyad, [3]);
        },
        tetrad: function tetrad() {
          return this._applyCombination(polyad, [4]);
        }
      };
      tinycolor.fromRatio = function(color, opts) {
        if (_typeof(color) == "object") {
          var newColor = {};
          for (var i in color) {
            if (color.hasOwnProperty(i)) {
              if (i === "a") {
                newColor[i] = color[i];
              } else {
                newColor[i] = convertToPercentage(color[i]);
              }
            }
          }
          color = newColor;
        }
        return tinycolor(color, opts);
      };
      function inputToRGB(color) {
        var rgb = {
          r: 0,
          g: 0,
          b: 0
        };
        var a2 = 1;
        var s2 = null;
        var v2 = null;
        var l2 = null;
        var ok = false;
        var format = false;
        if (typeof color == "string") {
          color = stringInputToObject(color);
        }
        if (_typeof(color) == "object") {
          if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {
            rgb = rgbToRgb(color.r, color.g, color.b);
            ok = true;
            format = String(color.r).substr(-1) === "%" ? "prgb" : "rgb";
          } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {
            s2 = convertToPercentage(color.s);
            v2 = convertToPercentage(color.v);
            rgb = hsvToRgb(color.h, s2, v2);
            ok = true;
            format = "hsv";
          } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {
            s2 = convertToPercentage(color.s);
            l2 = convertToPercentage(color.l);
            rgb = hslToRgb(color.h, s2, l2);
            ok = true;
            format = "hsl";
          }
          if (color.hasOwnProperty("a")) {
            a2 = color.a;
          }
        }
        a2 = boundAlpha(a2);
        return {
          ok,
          format: color.format || format,
          r: Math.min(255, Math.max(rgb.r, 0)),
          g: Math.min(255, Math.max(rgb.g, 0)),
          b: Math.min(255, Math.max(rgb.b, 0)),
          a: a2
        };
      }
      function rgbToRgb(r2, g, b2) {
        return {
          r: bound01(r2, 255) * 255,
          g: bound01(g, 255) * 255,
          b: bound01(b2, 255) * 255
        };
      }
      function rgbToHsl(r2, g, b2) {
        r2 = bound01(r2, 255);
        g = bound01(g, 255);
        b2 = bound01(b2, 255);
        var max = Math.max(r2, g, b2), min = Math.min(r2, g, b2);
        var h3, s2, l2 = (max + min) / 2;
        if (max == min) {
          h3 = s2 = 0;
        } else {
          var d2 = max - min;
          s2 = l2 > 0.5 ? d2 / (2 - max - min) : d2 / (max + min);
          switch (max) {
            case r2:
              h3 = (g - b2) / d2 + (g < b2 ? 6 : 0);
              break;
            case g:
              h3 = (b2 - r2) / d2 + 2;
              break;
            case b2:
              h3 = (r2 - g) / d2 + 4;
              break;
          }
          h3 /= 6;
        }
        return {
          h: h3,
          s: s2,
          l: l2
        };
      }
      function hslToRgb(h3, s2, l2) {
        var r2, g, b2;
        h3 = bound01(h3, 360);
        s2 = bound01(s2, 100);
        l2 = bound01(l2, 100);
        function hue2rgb(p3, q2, t4) {
          if (t4 < 0)
            t4 += 1;
          if (t4 > 1)
            t4 -= 1;
          if (t4 < 1 / 6)
            return p3 + (q2 - p3) * 6 * t4;
          if (t4 < 1 / 2)
            return q2;
          if (t4 < 2 / 3)
            return p3 + (q2 - p3) * (2 / 3 - t4) * 6;
          return p3;
        }
        if (s2 === 0) {
          r2 = g = b2 = l2;
        } else {
          var q = l2 < 0.5 ? l2 * (1 + s2) : l2 + s2 - l2 * s2;
          var p2 = 2 * l2 - q;
          r2 = hue2rgb(p2, q, h3 + 1 / 3);
          g = hue2rgb(p2, q, h3);
          b2 = hue2rgb(p2, q, h3 - 1 / 3);
        }
        return {
          r: r2 * 255,
          g: g * 255,
          b: b2 * 255
        };
      }
      function rgbToHsv(r2, g, b2) {
        r2 = bound01(r2, 255);
        g = bound01(g, 255);
        b2 = bound01(b2, 255);
        var max = Math.max(r2, g, b2), min = Math.min(r2, g, b2);
        var h3, s2, v2 = max;
        var d2 = max - min;
        s2 = max === 0 ? 0 : d2 / max;
        if (max == min) {
          h3 = 0;
        } else {
          switch (max) {
            case r2:
              h3 = (g - b2) / d2 + (g < b2 ? 6 : 0);
              break;
            case g:
              h3 = (b2 - r2) / d2 + 2;
              break;
            case b2:
              h3 = (r2 - g) / d2 + 4;
              break;
          }
          h3 /= 6;
        }
        return {
          h: h3,
          s: s2,
          v: v2
        };
      }
      function hsvToRgb(h3, s2, v2) {
        h3 = bound01(h3, 360) * 6;
        s2 = bound01(s2, 100);
        v2 = bound01(v2, 100);
        var i = Math.floor(h3), f2 = h3 - i, p2 = v2 * (1 - s2), q = v2 * (1 - f2 * s2), t4 = v2 * (1 - (1 - f2) * s2), mod = i % 6, r2 = [v2, q, p2, p2, t4, v2][mod], g = [t4, v2, v2, q, p2, p2][mod], b2 = [p2, p2, t4, v2, v2, q][mod];
        return {
          r: r2 * 255,
          g: g * 255,
          b: b2 * 255
        };
      }
      function rgbToHex(r2, g, b2, allow3Char) {
        var hex = [pad2(Math.round(r2).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b2).toString(16))];
        if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {
          return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);
        }
        return hex.join("");
      }
      function rgbaToHex(r2, g, b2, a2, allow4Char) {
        var hex = [pad2(Math.round(r2).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b2).toString(16)), pad2(convertDecimalToHex(a2))];
        if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {
          return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);
        }
        return hex.join("");
      }
      function rgbaToArgbHex(r2, g, b2, a2) {
        var hex = [pad2(convertDecimalToHex(a2)), pad2(Math.round(r2).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b2).toString(16))];
        return hex.join("");
      }
      tinycolor.equals = function(color1, color2) {
        if (!color1 || !color2)
          return false;
        return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();
      };
      tinycolor.random = function() {
        return tinycolor.fromRatio({
          r: Math.random(),
          g: Math.random(),
          b: Math.random()
        });
      };
      function _desaturate(color, amount) {
        amount = amount === 0 ? 0 : amount || 10;
        var hsl = tinycolor(color).toHsl();
        hsl.s -= amount / 100;
        hsl.s = clamp01(hsl.s);
        return tinycolor(hsl);
      }
      function _saturate(color, amount) {
        amount = amount === 0 ? 0 : amount || 10;
        var hsl = tinycolor(color).toHsl();
        hsl.s += amount / 100;
        hsl.s = clamp01(hsl.s);
        return tinycolor(hsl);
      }
      function _greyscale(color) {
        return tinycolor(color).desaturate(100);
      }
      function _lighten(color, amount) {
        amount = amount === 0 ? 0 : amount || 10;
        var hsl = tinycolor(color).toHsl();
        hsl.l += amount / 100;
        hsl.l = clamp01(hsl.l);
        return tinycolor(hsl);
      }
      function _brighten(color, amount) {
        amount = amount === 0 ? 0 : amount || 10;
        var rgb = tinycolor(color).toRgb();
        rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));
        rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));
        rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));
        return tinycolor(rgb);
      }
      function _darken(color, amount) {
        amount = amount === 0 ? 0 : amount || 10;
        var hsl = tinycolor(color).toHsl();
        hsl.l -= amount / 100;
        hsl.l = clamp01(hsl.l);
        return tinycolor(hsl);
      }
      function _spin(color, amount) {
        var hsl = tinycolor(color).toHsl();
        var hue = (hsl.h + amount) % 360;
        hsl.h = hue < 0 ? 360 + hue : hue;
        return tinycolor(hsl);
      }
      function _complement(color) {
        var hsl = tinycolor(color).toHsl();
        hsl.h = (hsl.h + 180) % 360;
        return tinycolor(hsl);
      }
      function polyad(color, number) {
        if (isNaN(number) || number <= 0) {
          throw new Error("Argument to polyad must be a positive number");
        }
        var hsl = tinycolor(color).toHsl();
        var result = [tinycolor(color)];
        var step = 360 / number;
        for (var i = 1; i < number; i++) {
          result.push(tinycolor({
            h: (hsl.h + i * step) % 360,
            s: hsl.s,
            l: hsl.l
          }));
        }
        return result;
      }
      function _splitcomplement(color) {
        var hsl = tinycolor(color).toHsl();
        var h3 = hsl.h;
        return [tinycolor(color), tinycolor({
          h: (h3 + 72) % 360,
          s: hsl.s,
          l: hsl.l
        }), tinycolor({
          h: (h3 + 216) % 360,
          s: hsl.s,
          l: hsl.l
        })];
      }
      function _analogous(color, results, slices) {
        results = results || 6;
        slices = slices || 30;
        var hsl = tinycolor(color).toHsl();
        var part = 360 / slices;
        var ret = [tinycolor(color)];
        for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results; ) {
          hsl.h = (hsl.h + part) % 360;
          ret.push(tinycolor(hsl));
        }
        return ret;
      }
      function _monochromatic(color, results) {
        results = results || 6;
        var hsv = tinycolor(color).toHsv();
        var h3 = hsv.h, s2 = hsv.s, v2 = hsv.v;
        var ret = [];
        var modification = 1 / results;
        while (results--) {
          ret.push(tinycolor({
            h: h3,
            s: s2,
            v: v2
          }));
          v2 = (v2 + modification) % 1;
        }
        return ret;
      }
      tinycolor.mix = function(color1, color2, amount) {
        amount = amount === 0 ? 0 : amount || 50;
        var rgb1 = tinycolor(color1).toRgb();
        var rgb2 = tinycolor(color2).toRgb();
        var p2 = amount / 100;
        var rgba = {
          r: (rgb2.r - rgb1.r) * p2 + rgb1.r,
          g: (rgb2.g - rgb1.g) * p2 + rgb1.g,
          b: (rgb2.b - rgb1.b) * p2 + rgb1.b,
          a: (rgb2.a - rgb1.a) * p2 + rgb1.a
        };
        return tinycolor(rgba);
      };
      tinycolor.readability = function(color1, color2) {
        var c1 = tinycolor(color1);
        var c2 = tinycolor(color2);
        return (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) / (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05);
      };
      tinycolor.isReadable = function(color1, color2, wcag2) {
        var readability = tinycolor.readability(color1, color2);
        var wcag2Parms, out;
        out = false;
        wcag2Parms = validateWCAG2Parms(wcag2);
        switch (wcag2Parms.level + wcag2Parms.size) {
          case "AAsmall":
          case "AAAlarge":
            out = readability >= 4.5;
            break;
          case "AAlarge":
            out = readability >= 3;
            break;
          case "AAAsmall":
            out = readability >= 7;
            break;
        }
        return out;
      };
      tinycolor.mostReadable = function(baseColor, colorList, args) {
        var bestColor = null;
        var bestScore = 0;
        var readability;
        var includeFallbackColors, level, size;
        args = args || {};
        includeFallbackColors = args.includeFallbackColors;
        level = args.level;
        size = args.size;
        for (var i = 0; i < colorList.length; i++) {
          readability = tinycolor.readability(baseColor, colorList[i]);
          if (readability > bestScore) {
            bestScore = readability;
            bestColor = tinycolor(colorList[i]);
          }
        }
        if (tinycolor.isReadable(baseColor, bestColor, {
          level,
          size
        }) || !includeFallbackColors) {
          return bestColor;
        } else {
          args.includeFallbackColors = false;
          return tinycolor.mostReadable(baseColor, ["#fff", "#000"], args);
        }
      };
      var names = tinycolor.names = {
        aliceblue: "f0f8ff",
        antiquewhite: "faebd7",
        aqua: "0ff",
        aquamarine: "7fffd4",
        azure: "f0ffff",
        beige: "f5f5dc",
        bisque: "ffe4c4",
        black: "000",
        blanchedalmond: "ffebcd",
        blue: "00f",
        blueviolet: "8a2be2",
        brown: "a52a2a",
        burlywood: "deb887",
        burntsienna: "ea7e5d",
        cadetblue: "5f9ea0",
        chartreuse: "7fff00",
        chocolate: "d2691e",
        coral: "ff7f50",
        cornflowerblue: "6495ed",
        cornsilk: "fff8dc",
        crimson: "dc143c",
        cyan: "0ff",
        darkblue: "00008b",
        darkcyan: "008b8b",
        darkgoldenrod: "b8860b",
        darkgray: "a9a9a9",
        darkgreen: "006400",
        darkgrey: "a9a9a9",
        darkkhaki: "bdb76b",
        darkmagenta: "8b008b",
        darkolivegreen: "556b2f",
        darkorange: "ff8c00",
        darkorchid: "9932cc",
        darkred: "8b0000",
        darksalmon: "e9967a",
        darkseagreen: "8fbc8f",
        darkslateblue: "483d8b",
        darkslategray: "2f4f4f",
        darkslategrey: "2f4f4f",
        darkturquoise: "00ced1",
        darkviolet: "9400d3",
        deeppink: "ff1493",
        deepskyblue: "00bfff",
        dimgray: "696969",
        dimgrey: "696969",
        dodgerblue: "1e90ff",
        firebrick: "b22222",
        floralwhite: "fffaf0",
        forestgreen: "228b22",
        fuchsia: "f0f",
        gainsboro: "dcdcdc",
        ghostwhite: "f8f8ff",
        gold: "ffd700",
        goldenrod: "daa520",
        gray: "808080",
        green: "008000",
        greenyellow: "adff2f",
        grey: "808080",
        honeydew: "f0fff0",
        hotpink: "ff69b4",
        indianred: "cd5c5c",
        indigo: "4b0082",
        ivory: "fffff0",
        khaki: "f0e68c",
        lavender: "e6e6fa",
        lavenderblush: "fff0f5",
        lawngreen: "7cfc00",
        lemonchiffon: "fffacd",
        lightblue: "add8e6",
        lightcoral: "f08080",
        lightcyan: "e0ffff",
        lightgoldenrodyellow: "fafad2",
        lightgray: "d3d3d3",
        lightgreen: "90ee90",
        lightgrey: "d3d3d3",
        lightpink: "ffb6c1",
        lightsalmon: "ffa07a",
        lightseagreen: "20b2aa",
        lightskyblue: "87cefa",
        lightslategray: "789",
        lightslategrey: "789",
        lightsteelblue: "b0c4de",
        lightyellow: "ffffe0",
        lime: "0f0",
        limegreen: "32cd32",
        linen: "faf0e6",
        magenta: "f0f",
        maroon: "800000",
        mediumaquamarine: "66cdaa",
        mediumblue: "0000cd",
        mediumorchid: "ba55d3",
        mediumpurple: "9370db",
        mediumseagreen: "3cb371",
        mediumslateblue: "7b68ee",
        mediumspringgreen: "00fa9a",
        mediumturquoise: "48d1cc",
        mediumvioletred: "c71585",
        midnightblue: "191970",
        mintcream: "f5fffa",
        mistyrose: "ffe4e1",
        moccasin: "ffe4b5",
        navajowhite: "ffdead",
        navy: "000080",
        oldlace: "fdf5e6",
        olive: "808000",
        olivedrab: "6b8e23",
        orange: "ffa500",
        orangered: "ff4500",
        orchid: "da70d6",
        palegoldenrod: "eee8aa",
        palegreen: "98fb98",
        paleturquoise: "afeeee",
        palevioletred: "db7093",
        papayawhip: "ffefd5",
        peachpuff: "ffdab9",
        peru: "cd853f",
        pink: "ffc0cb",
        plum: "dda0dd",
        powderblue: "b0e0e6",
        purple: "800080",
        rebeccapurple: "663399",
        red: "f00",
        rosybrown: "bc8f8f",
        royalblue: "4169e1",
        saddlebrown: "8b4513",
        salmon: "fa8072",
        sandybrown: "f4a460",
        seagreen: "2e8b57",
        seashell: "fff5ee",
        sienna: "a0522d",
        silver: "c0c0c0",
        skyblue: "87ceeb",
        slateblue: "6a5acd",
        slategray: "708090",
        slategrey: "708090",
        snow: "fffafa",
        springgreen: "00ff7f",
        steelblue: "4682b4",
        tan: "d2b48c",
        teal: "008080",
        thistle: "d8bfd8",
        tomato: "ff6347",
        turquoise: "40e0d0",
        violet: "ee82ee",
        wheat: "f5deb3",
        white: "fff",
        whitesmoke: "f5f5f5",
        yellow: "ff0",
        yellowgreen: "9acd32"
      };
      var hexNames = tinycolor.hexNames = flip(names);
      function flip(o) {
        var flipped = {};
        for (var i in o) {
          if (o.hasOwnProperty(i)) {
            flipped[o[i]] = i;
          }
        }
        return flipped;
      }
      function boundAlpha(a2) {
        a2 = parseFloat(a2);
        if (isNaN(a2) || a2 < 0 || a2 > 1) {
          a2 = 1;
        }
        return a2;
      }
      function bound01(n2, max) {
        if (isOnePointZero(n2))
          n2 = "100%";
        var processPercent = isPercentage(n2);
        n2 = Math.min(max, Math.max(0, parseFloat(n2)));
        if (processPercent) {
          n2 = parseInt(n2 * max, 10) / 100;
        }
        if (Math.abs(n2 - max) < 1e-6) {
          return 1;
        }
        return n2 % max / parseFloat(max);
      }
      function clamp01(val) {
        return Math.min(1, Math.max(0, val));
      }
      function parseIntFromHex(val) {
        return parseInt(val, 16);
      }
      function isOnePointZero(n2) {
        return typeof n2 == "string" && n2.indexOf(".") != -1 && parseFloat(n2) === 1;
      }
      function isPercentage(n2) {
        return typeof n2 === "string" && n2.indexOf("%") != -1;
      }
      function pad2(c2) {
        return c2.length == 1 ? "0" + c2 : "" + c2;
      }
      function convertToPercentage(n2) {
        if (n2 <= 1) {
          n2 = n2 * 100 + "%";
        }
        return n2;
      }
      function convertDecimalToHex(d2) {
        return Math.round(parseFloat(d2) * 255).toString(16);
      }
      function convertHexToDecimal(h3) {
        return parseIntFromHex(h3) / 255;
      }
      var matchers = function() {
        var CSS_INTEGER = "[-\\+]?\\d+%?";
        var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?";
        var CSS_UNIT = "(?:" + CSS_NUMBER + ")|(?:" + CSS_INTEGER + ")";
        var PERMISSIVE_MATCH3 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
        var PERMISSIVE_MATCH4 = "[\\s|\\(]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")[,|\\s]+(" + CSS_UNIT + ")\\s*\\)?";
        return {
          CSS_UNIT: new RegExp(CSS_UNIT),
          rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
          rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
          hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
          hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
          hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
          hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),
          hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
          hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
          hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
          hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
        };
      }();
      function isValidCSSUnit(color) {
        return !!matchers.CSS_UNIT.exec(color);
      }
      function stringInputToObject(color) {
        color = color.replace(trimLeft, "").replace(trimRight, "").toLowerCase();
        var named = false;
        if (names[color]) {
          color = names[color];
          named = true;
        } else if (color == "transparent") {
          return {
            r: 0,
            g: 0,
            b: 0,
            a: 0,
            format: "name"
          };
        }
        var match;
        if (match = matchers.rgb.exec(color)) {
          return {
            r: match[1],
            g: match[2],
            b: match[3]
          };
        }
        if (match = matchers.rgba.exec(color)) {
          return {
            r: match[1],
            g: match[2],
            b: match[3],
            a: match[4]
          };
        }
        if (match = matchers.hsl.exec(color)) {
          return {
            h: match[1],
            s: match[2],
            l: match[3]
          };
        }
        if (match = matchers.hsla.exec(color)) {
          return {
            h: match[1],
            s: match[2],
            l: match[3],
            a: match[4]
          };
        }
        if (match = matchers.hsv.exec(color)) {
          return {
            h: match[1],
            s: match[2],
            v: match[3]
          };
        }
        if (match = matchers.hsva.exec(color)) {
          return {
            h: match[1],
            s: match[2],
            v: match[3],
            a: match[4]
          };
        }
        if (match = matchers.hex8.exec(color)) {
          return {
            r: parseIntFromHex(match[1]),
            g: parseIntFromHex(match[2]),
            b: parseIntFromHex(match[3]),
            a: convertHexToDecimal(match[4]),
            format: named ? "name" : "hex8"
          };
        }
        if (match = matchers.hex6.exec(color)) {
          return {
            r: parseIntFromHex(match[1]),
            g: parseIntFromHex(match[2]),
            b: parseIntFromHex(match[3]),
            format: named ? "name" : "hex"
          };
        }
        if (match = matchers.hex4.exec(color)) {
          return {
            r: parseIntFromHex(match[1] + "" + match[1]),
            g: parseIntFromHex(match[2] + "" + match[2]),
            b: parseIntFromHex(match[3] + "" + match[3]),
            a: convertHexToDecimal(match[4] + "" + match[4]),
            format: named ? "name" : "hex8"
          };
        }
        if (match = matchers.hex3.exec(color)) {
          return {
            r: parseIntFromHex(match[1] + "" + match[1]),
            g: parseIntFromHex(match[2] + "" + match[2]),
            b: parseIntFromHex(match[3] + "" + match[3]),
            format: named ? "name" : "hex"
          };
        }
        return false;
      }
      function validateWCAG2Parms(parms) {
        var level, size;
        parms = parms || {
          level: "AA",
          size: "small"
        };
        level = (parms.level || "AA").toUpperCase();
        size = (parms.size || "small").toLowerCase();
        if (level !== "AA" && level !== "AAA") {
          level = "AA";
        }
        if (size !== "small" && size !== "large") {
          size = "small";
        }
        return {
          level,
          size
        };
      }
      return tinycolor;
    });
  }
});

// node_modules/react-color/lib/helpers/color.js
var require_color = __commonJS({
  "node_modules/react-color/lib/helpers/color.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.isvalidColorString = exports.red = exports.getContrastingColor = exports.isValidHex = exports.toState = exports.simpleCheckForValidColor = void 0;
    var _each = require_each();
    var _each2 = _interopRequireDefault(_each);
    var _tinycolor = require_tinycolor();
    var _tinycolor2 = _interopRequireDefault(_tinycolor);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var simpleCheckForValidColor = exports.simpleCheckForValidColor = function simpleCheckForValidColor2(data) {
      var keysToCheck = ["r", "g", "b", "a", "h", "s", "l", "v"];
      var checked = 0;
      var passed = 0;
      (0, _each2.default)(keysToCheck, function(letter) {
        if (data[letter]) {
          checked += 1;
          if (!isNaN(data[letter])) {
            passed += 1;
          }
          if (letter === "s" || letter === "l") {
            var percentPatt = /^\d+%$/;
            if (percentPatt.test(data[letter])) {
              passed += 1;
            }
          }
        }
      });
      return checked === passed ? data : false;
    };
    var toState = exports.toState = function toState2(data, oldHue) {
      var color = data.hex ? (0, _tinycolor2.default)(data.hex) : (0, _tinycolor2.default)(data);
      var hsl = color.toHsl();
      var hsv = color.toHsv();
      var rgb = color.toRgb();
      var hex = color.toHex();
      if (hsl.s === 0) {
        hsl.h = oldHue || 0;
        hsv.h = oldHue || 0;
      }
      var transparent = hex === "000000" && rgb.a === 0;
      return {
        hsl,
        hex: transparent ? "transparent" : "#" + hex,
        rgb,
        hsv,
        oldHue: data.h || oldHue || hsl.h,
        source: data.source
      };
    };
    var isValidHex = exports.isValidHex = function isValidHex2(hex) {
      if (hex === "transparent") {
        return true;
      }
      var lh = String(hex).charAt(0) === "#" ? 1 : 0;
      return hex.length !== 4 + lh && hex.length < 7 + lh && (0, _tinycolor2.default)(hex).isValid();
    };
    var getContrastingColor = exports.getContrastingColor = function getContrastingColor2(data) {
      if (!data) {
        return "#fff";
      }
      var col = toState(data);
      if (col.hex === "transparent") {
        return "rgba(0,0,0,0.4)";
      }
      var yiq = (col.rgb.r * 299 + col.rgb.g * 587 + col.rgb.b * 114) / 1e3;
      return yiq >= 128 ? "#000" : "#fff";
    };
    var red = exports.red = {
      hsl: { a: 1, h: 0, l: 0.5, s: 1 },
      hex: "#ff0000",
      rgb: { r: 255, g: 0, b: 0, a: 1 },
      hsv: { h: 0, s: 1, v: 1, a: 1 }
    };
    var isvalidColorString = exports.isvalidColorString = function isvalidColorString2(string, type) {
      var stringWithoutDegree = string.replace("°", "");
      return (0, _tinycolor2.default)(type + " (" + stringWithoutDegree + ")")._ok;
    };
  }
});

// node_modules/react-color/lib/components/common/ColorWrap.js
var require_ColorWrap = __commonJS({
  "node_modules/react-color/lib/components/common/ColorWrap.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.ColorWrap = void 0;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _debounce = require_debounce();
    var _debounce2 = _interopRequireDefault(_debounce);
    var _color = require_color();
    var color = _interopRequireWildcard(_color);
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key))
              newObj[key] = obj[key];
          }
        }
        newObj.default = obj;
        return newObj;
      }
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var ColorWrap = exports.ColorWrap = function ColorWrap2(Picker) {
      var ColorPicker2 = function(_ref) {
        _inherits(ColorPicker3, _ref);
        function ColorPicker3(props) {
          _classCallCheck(this, ColorPicker3);
          var _this = _possibleConstructorReturn(this, (ColorPicker3.__proto__ || Object.getPrototypeOf(ColorPicker3)).call(this));
          _this.handleChange = function(data, event) {
            var isValidColor = color.simpleCheckForValidColor(data);
            if (isValidColor) {
              var colors = color.toState(data, data.h || _this.state.oldHue);
              _this.setState(colors);
              _this.props.onChangeComplete && _this.debounce(_this.props.onChangeComplete, colors, event);
              _this.props.onChange && _this.props.onChange(colors, event);
            }
          };
          _this.handleSwatchHover = function(data, event) {
            var isValidColor = color.simpleCheckForValidColor(data);
            if (isValidColor) {
              var colors = color.toState(data, data.h || _this.state.oldHue);
              _this.props.onSwatchHover && _this.props.onSwatchHover(colors, event);
            }
          };
          _this.state = _extends({}, color.toState(props.color, 0));
          _this.debounce = (0, _debounce2.default)(function(fn, data, event) {
            fn(data, event);
          }, 100);
          return _this;
        }
        _createClass(ColorPicker3, [{
          key: "render",
          value: function render() {
            var optionalEvents = {};
            if (this.props.onSwatchHover) {
              optionalEvents.onSwatchHover = this.handleSwatchHover;
            }
            return _react2.default.createElement(Picker, _extends({}, this.props, this.state, {
              onChange: this.handleChange
            }, optionalEvents));
          }
        }], [{
          key: "getDerivedStateFromProps",
          value: function getDerivedStateFromProps(nextProps, state) {
            return _extends({}, color.toState(nextProps.color, state.oldHue));
          }
        }]);
        return ColorPicker3;
      }(_react.PureComponent || _react.Component);
      ColorPicker2.propTypes = _extends({}, Picker.propTypes);
      ColorPicker2.defaultProps = _extends({}, Picker.defaultProps, {
        color: {
          h: 250,
          s: 0.5,
          l: 0.2,
          a: 1
        }
      });
      return ColorPicker2;
    };
    exports.default = ColorWrap;
  }
});

// node_modules/react-color/lib/helpers/interaction.js
var require_interaction = __commonJS({
  "node_modules/react-color/lib/helpers/interaction.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.handleFocus = void 0;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self2, call) {
      if (!self2) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self2;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var handleFocus = exports.handleFocus = function handleFocus2(Component) {
      var Span = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "span";
      return function(_React$Component) {
        _inherits(Focus, _React$Component);
        function Focus() {
          var _ref;
          var _temp, _this, _ret;
          _classCallCheck(this, Focus);
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Focus.__proto__ || Object.getPrototypeOf(Focus)).call.apply(_ref, [this].concat(args))), _this), _this.state = { focus: false }, _this.handleFocus = function() {
            return _this.setState({ focus: true });
          }, _this.handleBlur = function() {
            return _this.setState({ focus: false });
          }, _temp), _possibleConstructorReturn(_this, _ret);
        }
        _createClass(Focus, [{
          key: "render",
          value: function render() {
            return _react2.default.createElement(
              Span,
              { onFocus: this.handleFocus, onBlur: this.handleBlur },
              _react2.default.createElement(Component, _extends({}, this.props, this.state))
            );
          }
        }]);
        return Focus;
      }(_react2.default.Component);
    };
  }
});

// node_modules/react-color/lib/components/common/Swatch.js
var require_Swatch = __commonJS({
  "node_modules/react-color/lib/components/common/Swatch.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Swatch = void 0;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _reactcss = require_lib();
    var _reactcss2 = _interopRequireDefault(_reactcss);
    var _interaction = require_interaction();
    var _Checkboard = require_Checkboard();
    var _Checkboard2 = _interopRequireDefault(_Checkboard);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var ENTER = 13;
    var Swatch = exports.Swatch = function Swatch2(_ref) {
      var color = _ref.color, style = _ref.style, _ref$onClick = _ref.onClick, onClick = _ref$onClick === void 0 ? function() {
      } : _ref$onClick, onHover = _ref.onHover, _ref$title = _ref.title, title = _ref$title === void 0 ? color : _ref$title, children = _ref.children, focus = _ref.focus, _ref$focusStyle = _ref.focusStyle, focusStyle = _ref$focusStyle === void 0 ? {} : _ref$focusStyle;
      var transparent = color === "transparent";
      var styles = (0, _reactcss2.default)({
        default: {
          swatch: _extends({
            background: color,
            height: "100%",
            width: "100%",
            cursor: "pointer",
            position: "relative",
            outline: "none"
          }, style, focus ? focusStyle : {})
        }
      });
      var handleClick = function handleClick2(e3) {
        return onClick(color, e3);
      };
      var handleKeyDown = function handleKeyDown2(e3) {
        return e3.keyCode === ENTER && onClick(color, e3);
      };
      var handleHover = function handleHover2(e3) {
        return onHover(color, e3);
      };
      var optionalEvents = {};
      if (onHover) {
        optionalEvents.onMouseOver = handleHover;
      }
      return _react2.default.createElement(
        "div",
        _extends({
          style: styles.swatch,
          onClick: handleClick,
          title,
          tabIndex: 0,
          onKeyDown: handleKeyDown
        }, optionalEvents),
        children,
        transparent && _react2.default.createElement(_Checkboard2.default, {
          borderRadius: styles.swatch.borderRadius,
          boxShadow: "inset 0 0 0 1px rgba(0,0,0,0.1)"
        })
      );
    };
    exports.default = (0, _interaction.handleFocus)(Swatch);
  }
});

// node_modules/react-color/lib/components/common/index.js
var require_common = __commonJS({
  "node_modules/react-color/lib/components/common/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _Alpha = require_Alpha();
    Object.defineProperty(exports, "Alpha", {
      enumerable: true,
      get: function get() {
        return _interopRequireDefault(_Alpha).default;
      }
    });
    var _Checkboard = require_Checkboard();
    Object.defineProperty(exports, "Checkboard", {
      enumerable: true,
      get: function get() {
        return _interopRequireDefault(_Checkboard).default;
      }
    });
    var _EditableInput = require_EditableInput();
    Object.defineProperty(exports, "EditableInput", {
      enumerable: true,
      get: function get() {
        return _interopRequireDefault(_EditableInput).default;
      }
    });
    var _Hue = require_Hue();
    Object.defineProperty(exports, "Hue", {
      enumerable: true,
      get: function get() {
        return _interopRequireDefault(_Hue).default;
      }
    });
    var _Raised = require_Raised();
    Object.defineProperty(exports, "Raised", {
      enumerable: true,
      get: function get() {
        return _interopRequireDefault(_Raised).default;
      }
    });
    var _Saturation = require_Saturation();
    Object.defineProperty(exports, "Saturation", {
      enumerable: true,
      get: function get() {
        return _interopRequireDefault(_Saturation).default;
      }
    });
    var _ColorWrap = require_ColorWrap();
    Object.defineProperty(exports, "ColorWrap", {
      enumerable: true,
      get: function get() {
        return _interopRequireDefault(_ColorWrap).default;
      }
    });
    var _Swatch = require_Swatch();
    Object.defineProperty(exports, "Swatch", {
      enumerable: true,
      get: function get() {
        return _interopRequireDefault(_Swatch).default;
      }
    });
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
  }
});

// node_modules/react-color/lib/components/sketch/SketchFields.js
var require_SketchFields = __commonJS({
  "node_modules/react-color/lib/components/sketch/SketchFields.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.SketchFields = void 0;
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _reactcss = require_lib();
    var _reactcss2 = _interopRequireDefault(_reactcss);
    var _color = require_color();
    var color = _interopRequireWildcard(_color);
    var _common = require_common();
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key))
              newObj[key] = obj[key];
          }
        }
        newObj.default = obj;
        return newObj;
      }
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var SketchFields = exports.SketchFields = function SketchFields2(_ref) {
      var onChange = _ref.onChange, rgb = _ref.rgb, hsl = _ref.hsl, hex = _ref.hex, disableAlpha = _ref.disableAlpha;
      var styles = (0, _reactcss2.default)({
        "default": {
          fields: {
            display: "flex",
            paddingTop: "4px"
          },
          single: {
            flex: "1",
            paddingLeft: "6px"
          },
          alpha: {
            flex: "1",
            paddingLeft: "6px"
          },
          double: {
            flex: "2"
          },
          input: {
            width: "80%",
            padding: "4px 10% 3px",
            border: "none",
            boxShadow: "inset 0 0 0 1px #ccc",
            fontSize: "11px"
          },
          label: {
            display: "block",
            textAlign: "center",
            fontSize: "11px",
            color: "#222",
            paddingTop: "3px",
            paddingBottom: "4px",
            textTransform: "capitalize"
          }
        },
        "disableAlpha": {
          alpha: {
            display: "none"
          }
        }
      }, { disableAlpha });
      var handleChange = function handleChange2(data, e3) {
        if (data.hex) {
          color.isValidHex(data.hex) && onChange({
            hex: data.hex,
            source: "hex"
          }, e3);
        } else if (data.r || data.g || data.b) {
          onChange({
            r: data.r || rgb.r,
            g: data.g || rgb.g,
            b: data.b || rgb.b,
            a: rgb.a,
            source: "rgb"
          }, e3);
        } else if (data.a) {
          if (data.a < 0) {
            data.a = 0;
          } else if (data.a > 100) {
            data.a = 100;
          }
          data.a /= 100;
          onChange({
            h: hsl.h,
            s: hsl.s,
            l: hsl.l,
            a: data.a,
            source: "rgb"
          }, e3);
        }
      };
      return _react2.default.createElement(
        "div",
        { style: styles.fields, className: "flexbox-fix" },
        _react2.default.createElement(
          "div",
          { style: styles.double },
          _react2.default.createElement(_common.EditableInput, {
            style: { input: styles.input, label: styles.label },
            label: "hex",
            value: hex.replace("#", ""),
            onChange: handleChange
          })
        ),
        _react2.default.createElement(
          "div",
          { style: styles.single },
          _react2.default.createElement(_common.EditableInput, {
            style: { input: styles.input, label: styles.label },
            label: "r",
            value: rgb.r,
            onChange: handleChange,
            dragLabel: "true",
            dragMax: "255"
          })
        ),
        _react2.default.createElement(
          "div",
          { style: styles.single },
          _react2.default.createElement(_common.EditableInput, {
            style: { input: styles.input, label: styles.label },
            label: "g",
            value: rgb.g,
            onChange: handleChange,
            dragLabel: "true",
            dragMax: "255"
          })
        ),
        _react2.default.createElement(
          "div",
          { style: styles.single },
          _react2.default.createElement(_common.EditableInput, {
            style: { input: styles.input, label: styles.label },
            label: "b",
            value: rgb.b,
            onChange: handleChange,
            dragLabel: "true",
            dragMax: "255"
          })
        ),
        _react2.default.createElement(
          "div",
          { style: styles.alpha },
          _react2.default.createElement(_common.EditableInput, {
            style: { input: styles.input, label: styles.label },
            label: "a",
            value: Math.round(rgb.a * 100),
            onChange: handleChange,
            dragLabel: "true",
            dragMax: "100"
          })
        )
      );
    };
    exports.default = SketchFields;
  }
});

// node_modules/react-color/lib/components/sketch/SketchPresetColors.js
var require_SketchPresetColors = __commonJS({
  "node_modules/react-color/lib/components/sketch/SketchPresetColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.SketchPresetColors = void 0;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _reactcss = require_lib();
    var _reactcss2 = _interopRequireDefault(_reactcss);
    var _common = require_common();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var SketchPresetColors = exports.SketchPresetColors = function SketchPresetColors2(_ref) {
      var colors = _ref.colors, _ref$onClick = _ref.onClick, onClick = _ref$onClick === void 0 ? function() {
      } : _ref$onClick, onSwatchHover = _ref.onSwatchHover;
      var styles = (0, _reactcss2.default)({
        "default": {
          colors: {
            margin: "0 -10px",
            padding: "10px 0 0 10px",
            borderTop: "1px solid #eee",
            display: "flex",
            flexWrap: "wrap",
            position: "relative"
          },
          swatchWrap: {
            width: "16px",
            height: "16px",
            margin: "0 10px 10px 0"
          },
          swatch: {
            borderRadius: "3px",
            boxShadow: "inset 0 0 0 1px rgba(0,0,0,.15)"
          }
        },
        "no-presets": {
          colors: {
            display: "none"
          }
        }
      }, {
        "no-presets": !colors || !colors.length
      });
      var handleClick = function handleClick2(hex, e3) {
        onClick({
          hex,
          source: "hex"
        }, e3);
      };
      return _react2.default.createElement(
        "div",
        { style: styles.colors, className: "flexbox-fix" },
        colors.map(function(colorObjOrString) {
          var c2 = typeof colorObjOrString === "string" ? { color: colorObjOrString } : colorObjOrString;
          var key = "" + c2.color + (c2.title || "");
          return _react2.default.createElement(
            "div",
            { key, style: styles.swatchWrap },
            _react2.default.createElement(_common.Swatch, _extends({}, c2, {
              style: styles.swatch,
              onClick: handleClick,
              onHover: onSwatchHover,
              focusStyle: {
                boxShadow: "inset 0 0 0 1px rgba(0,0,0,.15), 0 0 4px " + c2.color
              }
            }))
          );
        })
      );
    };
    SketchPresetColors.propTypes = {
      colors: _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({
        color: _propTypes2.default.string,
        title: _propTypes2.default.string
      })])).isRequired
    };
    exports.default = SketchPresetColors;
  }
});

// node_modules/swr/dist/index/index.mjs
var import_react3 = __toESM(require_react(), 1);
var import_shim = __toESM(require_shim(), 1);

// node_modules/swr/dist/_internal/config-context-client-BoS53ST9.mjs
var import_react = __toESM(require_react(), 1);

// node_modules/swr/dist/_internal/events.mjs
var events_exports = {};
__export(events_exports, {
  ERROR_REVALIDATE_EVENT: () => ERROR_REVALIDATE_EVENT,
  FOCUS_EVENT: () => FOCUS_EVENT,
  MUTATE_EVENT: () => MUTATE_EVENT,
  RECONNECT_EVENT: () => RECONNECT_EVENT
});
var FOCUS_EVENT = 0;
var RECONNECT_EVENT = 1;
var MUTATE_EVENT = 2;
var ERROR_REVALIDATE_EVENT = 3;

// node_modules/dequal/lite/index.mjs
var has = Object.prototype.hasOwnProperty;
function dequal(foo, bar) {
  var ctor, len;
  if (foo === bar)
    return true;
  if (foo && bar && (ctor = foo.constructor) === bar.constructor) {
    if (ctor === Date)
      return foo.getTime() === bar.getTime();
    if (ctor === RegExp)
      return foo.toString() === bar.toString();
    if (ctor === Array) {
      if ((len = foo.length) === bar.length) {
        while (len-- && dequal(foo[len], bar[len]))
          ;
      }
      return len === -1;
    }
    if (!ctor || typeof foo === "object") {
      len = 0;
      for (ctor in foo) {
        if (has.call(foo, ctor) && ++len && !has.call(bar, ctor))
          return false;
        if (!(ctor in bar) || !dequal(foo[ctor], bar[ctor]))
          return false;
      }
      return Object.keys(bar).length === len;
    }
  }
  return foo !== foo && bar !== bar;
}

// node_modules/swr/dist/_internal/config-context-client-BoS53ST9.mjs
var SWRGlobalState = /* @__PURE__ */ new WeakMap();
var noop = () => {
};
var UNDEFINED = (
  /*#__NOINLINE__*/
  noop()
);
var OBJECT = Object;
var isUndefined = (v2) => v2 === UNDEFINED;
var isFunction = (v2) => typeof v2 == "function";
var mergeObjects = (a2, b2) => ({
  ...a2,
  ...b2
});
var isPromiseLike = (x2) => isFunction(x2.then);
var EMPTY_CACHE = {};
var INITIAL_CACHE = {};
var STR_UNDEFINED = "undefined";
var isWindowDefined = typeof window != STR_UNDEFINED;
var isDocumentDefined = typeof document != STR_UNDEFINED;
var isLegacyDeno = isWindowDefined && "Deno" in window;
var hasRequestAnimationFrame = () => isWindowDefined && typeof window["requestAnimationFrame"] != STR_UNDEFINED;
var createCacheHelper = (cache2, key) => {
  const state = SWRGlobalState.get(cache2);
  return [
    // Getter
    () => !isUndefined(key) && cache2.get(key) || EMPTY_CACHE,
    // Setter
    (info) => {
      if (!isUndefined(key)) {
        const prev = cache2.get(key);
        if (!(key in INITIAL_CACHE)) {
          INITIAL_CACHE[key] = prev;
        }
        state[5](key, mergeObjects(prev, info), prev || EMPTY_CACHE);
      }
    },
    // Subscriber
    state[6],
    // Get server cache snapshot
    () => {
      if (!isUndefined(key)) {
        if (key in INITIAL_CACHE)
          return INITIAL_CACHE[key];
      }
      return !isUndefined(key) && cache2.get(key) || EMPTY_CACHE;
    }
  ];
};
var online = true;
var isOnline = () => online;
var [onWindowEvent, offWindowEvent] = isWindowDefined && window.addEventListener ? [
  window.addEventListener.bind(window),
  window.removeEventListener.bind(window)
] : [
  noop,
  noop
];
var isVisible = () => {
  const visibilityState = isDocumentDefined && document.visibilityState;
  return isUndefined(visibilityState) || visibilityState !== "hidden";
};
var initFocus = (callback) => {
  if (isDocumentDefined) {
    document.addEventListener("visibilitychange", callback);
  }
  onWindowEvent("focus", callback);
  return () => {
    if (isDocumentDefined) {
      document.removeEventListener("visibilitychange", callback);
    }
    offWindowEvent("focus", callback);
  };
};
var initReconnect = (callback) => {
  const onOnline = () => {
    online = true;
    callback();
  };
  const onOffline = () => {
    online = false;
  };
  onWindowEvent("online", onOnline);
  onWindowEvent("offline", onOffline);
  return () => {
    offWindowEvent("online", onOnline);
    offWindowEvent("offline", onOffline);
  };
};
var preset = {
  isOnline,
  isVisible
};
var defaultConfigOptions = {
  initFocus,
  initReconnect
};
var IS_REACT_LEGACY = !import_react.default.useId;
var IS_SERVER = !isWindowDefined || isLegacyDeno;
var rAF = (f2) => hasRequestAnimationFrame() ? window["requestAnimationFrame"](f2) : setTimeout(f2, 1);
var useIsomorphicLayoutEffect = IS_SERVER ? import_react.useEffect : import_react.useLayoutEffect;
var navigatorConnection = typeof navigator !== "undefined" && navigator.connection;
var slowConnection = !IS_SERVER && navigatorConnection && ([
  "slow-2g",
  "2g"
].includes(navigatorConnection.effectiveType) || navigatorConnection.saveData);
var table = /* @__PURE__ */ new WeakMap();
var getTypeName = (value) => OBJECT.prototype.toString.call(value);
var isObjectTypeName = (typeName, type) => typeName === `[object ${type}]`;
var counter = 0;
var stableHash = (arg) => {
  const type = typeof arg;
  const typeName = getTypeName(arg);
  const isDate = isObjectTypeName(typeName, "Date");
  const isRegex = isObjectTypeName(typeName, "RegExp");
  const isPlainObject = isObjectTypeName(typeName, "Object");
  let result;
  let index;
  if (OBJECT(arg) === arg && !isDate && !isRegex) {
    result = table.get(arg);
    if (result)
      return result;
    result = ++counter + "~";
    table.set(arg, result);
    if (Array.isArray(arg)) {
      result = "@";
      for (index = 0; index < arg.length; index++) {
        result += stableHash(arg[index]) + ",";
      }
      table.set(arg, result);
    }
    if (isPlainObject) {
      result = "#";
      const keys = OBJECT.keys(arg).sort();
      while (!isUndefined(index = keys.pop())) {
        if (!isUndefined(arg[index])) {
          result += index + ":" + stableHash(arg[index]) + ",";
        }
      }
      table.set(arg, result);
    }
  } else {
    result = isDate ? arg.toJSON() : type == "symbol" ? arg.toString() : type == "string" ? JSON.stringify(arg) : "" + arg;
  }
  return result;
};
var serialize = (key) => {
  if (isFunction(key)) {
    try {
      key = key();
    } catch (err) {
      key = "";
    }
  }
  const args = key;
  key = typeof key == "string" ? key : (Array.isArray(key) ? key.length : key) ? stableHash(key) : "";
  return [
    key,
    args
  ];
};
var __timestamp = 0;
var getTimestamp = () => ++__timestamp;
async function internalMutate(...args) {
  const [cache2, _key, _data, _opts] = args;
  const options = mergeObjects({
    populateCache: true,
    throwOnError: true
  }, typeof _opts === "boolean" ? {
    revalidate: _opts
  } : _opts || {});
  let populateCache = options.populateCache;
  const rollbackOnErrorOption = options.rollbackOnError;
  let optimisticData = options.optimisticData;
  const rollbackOnError = (error) => {
    return typeof rollbackOnErrorOption === "function" ? rollbackOnErrorOption(error) : rollbackOnErrorOption !== false;
  };
  const throwOnError = options.throwOnError;
  if (isFunction(_key)) {
    const keyFilter = _key;
    const matchedKeys = [];
    const it = cache2.keys();
    for (const key of it) {
      if (
        // Skip the special useSWRInfinite and useSWRSubscription keys.
        !/^\$(inf|sub)\$/.test(key) && keyFilter(cache2.get(key)._k)
      ) {
        matchedKeys.push(key);
      }
    }
    return Promise.all(matchedKeys.map(mutateByKey));
  }
  return mutateByKey(_key);
  async function mutateByKey(_k) {
    const [key] = serialize(_k);
    if (!key)
      return;
    const [get, set] = createCacheHelper(cache2, key);
    const [EVENT_REVALIDATORS, MUTATION, FETCH, PRELOAD] = SWRGlobalState.get(cache2);
    const startRevalidate = () => {
      const revalidators = EVENT_REVALIDATORS[key];
      const revalidate = isFunction(options.revalidate) ? options.revalidate(get().data, _k) : options.revalidate !== false;
      if (revalidate) {
        delete FETCH[key];
        delete PRELOAD[key];
        if (revalidators && revalidators[0]) {
          return revalidators[0](MUTATE_EVENT).then(() => get().data);
        }
      }
      return get().data;
    };
    if (args.length < 3) {
      return startRevalidate();
    }
    let data = _data;
    let error;
    let isError = false;
    const beforeMutationTs = getTimestamp();
    MUTATION[key] = [
      beforeMutationTs,
      0
    ];
    const hasOptimisticData = !isUndefined(optimisticData);
    const state = get();
    const displayedData = state.data;
    const currentData = state._c;
    const committedData = isUndefined(currentData) ? displayedData : currentData;
    if (hasOptimisticData) {
      optimisticData = isFunction(optimisticData) ? optimisticData(committedData, displayedData) : optimisticData;
      set({
        data: optimisticData,
        _c: committedData
      });
    }
    if (isFunction(data)) {
      try {
        data = data(committedData);
      } catch (err) {
        error = err;
        isError = true;
      }
    }
    if (data && isPromiseLike(data)) {
      data = await data.catch((err) => {
        error = err;
        isError = true;
      });
      if (beforeMutationTs !== MUTATION[key][0]) {
        if (isError)
          throw error;
        return data;
      } else if (isError && hasOptimisticData && rollbackOnError(error)) {
        populateCache = true;
        set({
          data: committedData,
          _c: UNDEFINED
        });
      }
    }
    if (populateCache) {
      if (!isError) {
        if (isFunction(populateCache)) {
          const populateCachedData = populateCache(data, committedData);
          set({
            data: populateCachedData,
            error: UNDEFINED,
            _c: UNDEFINED
          });
        } else {
          set({
            data,
            error: UNDEFINED,
            _c: UNDEFINED
          });
        }
      }
    }
    MUTATION[key][1] = getTimestamp();
    Promise.resolve(startRevalidate()).then(() => {
      set({
        _c: UNDEFINED
      });
    });
    if (isError) {
      if (throwOnError)
        throw error;
      return;
    }
    return data;
  }
}
var revalidateAllKeys = (revalidators, type) => {
  for (const key in revalidators) {
    if (revalidators[key][0])
      revalidators[key][0](type);
  }
};
var initCache = (provider, options) => {
  if (!SWRGlobalState.has(provider)) {
    const opts = mergeObjects(defaultConfigOptions, options);
    const EVENT_REVALIDATORS = /* @__PURE__ */ Object.create(null);
    const mutate2 = internalMutate.bind(UNDEFINED, provider);
    let unmount = noop;
    const subscriptions = /* @__PURE__ */ Object.create(null);
    const subscribe = (key, callback) => {
      const subs = subscriptions[key] || [];
      subscriptions[key] = subs;
      subs.push(callback);
      return () => subs.splice(subs.indexOf(callback), 1);
    };
    const setter = (key, value, prev) => {
      provider.set(key, value);
      const subs = subscriptions[key];
      if (subs) {
        for (const fn of subs) {
          fn(value, prev);
        }
      }
    };
    const initProvider = () => {
      if (!SWRGlobalState.has(provider)) {
        SWRGlobalState.set(provider, [
          EVENT_REVALIDATORS,
          /* @__PURE__ */ Object.create(null),
          /* @__PURE__ */ Object.create(null),
          /* @__PURE__ */ Object.create(null),
          mutate2,
          setter,
          subscribe
        ]);
        if (!IS_SERVER) {
          const releaseFocus = opts.initFocus(setTimeout.bind(UNDEFINED, revalidateAllKeys.bind(UNDEFINED, EVENT_REVALIDATORS, FOCUS_EVENT)));
          const releaseReconnect = opts.initReconnect(setTimeout.bind(UNDEFINED, revalidateAllKeys.bind(UNDEFINED, EVENT_REVALIDATORS, RECONNECT_EVENT)));
          unmount = () => {
            releaseFocus && releaseFocus();
            releaseReconnect && releaseReconnect();
            SWRGlobalState.delete(provider);
          };
        }
      }
    };
    initProvider();
    return [
      provider,
      mutate2,
      initProvider,
      unmount
    ];
  }
  return [
    provider,
    SWRGlobalState.get(provider)[4]
  ];
};
var onErrorRetry = (_, __, config, revalidate, opts) => {
  const maxRetryCount = config.errorRetryCount;
  const currentRetryCount = opts.retryCount;
  const timeout = ~~((Math.random() + 0.5) * (1 << (currentRetryCount < 8 ? currentRetryCount : 8))) * config.errorRetryInterval;
  if (!isUndefined(maxRetryCount) && currentRetryCount > maxRetryCount) {
    return;
  }
  setTimeout(revalidate, timeout, opts);
};
var compare = dequal;
var [cache, mutate] = initCache(/* @__PURE__ */ new Map());
var defaultConfig = mergeObjects(
  {
    // events
    onLoadingSlow: noop,
    onSuccess: noop,
    onError: noop,
    onErrorRetry,
    onDiscarded: noop,
    // switches
    revalidateOnFocus: true,
    revalidateOnReconnect: true,
    revalidateIfStale: true,
    shouldRetryOnError: true,
    // timeouts
    errorRetryInterval: slowConnection ? 1e4 : 5e3,
    focusThrottleInterval: 5 * 1e3,
    dedupingInterval: 2 * 1e3,
    loadingTimeout: slowConnection ? 5e3 : 3e3,
    // providers
    compare,
    isPaused: () => false,
    cache,
    mutate,
    fallback: {}
  },
  // use web preset by default
  preset
);
var mergeConfigs = (a2, b2) => {
  const v2 = mergeObjects(a2, b2);
  if (b2) {
    const { use: u1, fallback: f1 } = a2;
    const { use: u2, fallback: f2 } = b2;
    if (u1 && u2) {
      v2.use = u1.concat(u2);
    }
    if (f1 && f2) {
      v2.fallback = mergeObjects(f1, f2);
    }
  }
  return v2;
};
var SWRConfigContext = (0, import_react.createContext)({});
var SWRConfig = (props) => {
  const { value } = props;
  const parentConfig = (0, import_react.useContext)(SWRConfigContext);
  const isFunctionalConfig = isFunction(value);
  const config = (0, import_react.useMemo)(() => isFunctionalConfig ? value(parentConfig) : value, [
    isFunctionalConfig,
    parentConfig,
    value
  ]);
  const extendedConfig = (0, import_react.useMemo)(() => isFunctionalConfig ? config : mergeConfigs(parentConfig, config), [
    isFunctionalConfig,
    parentConfig,
    config
  ]);
  const provider = config && config.provider;
  const cacheContextRef = (0, import_react.useRef)(UNDEFINED);
  if (provider && !cacheContextRef.current) {
    cacheContextRef.current = initCache(provider(extendedConfig.cache || cache), config);
  }
  const cacheContext = cacheContextRef.current;
  if (cacheContext) {
    extendedConfig.cache = cacheContext[0];
    extendedConfig.mutate = cacheContext[1];
  }
  useIsomorphicLayoutEffect(() => {
    if (cacheContext) {
      cacheContext[2] && cacheContext[2]();
      return cacheContext[3];
    }
  }, []);
  return (0, import_react.createElement)(SWRConfigContext.Provider, mergeObjects(props, {
    value: extendedConfig
  }));
};

// node_modules/swr/dist/_internal/constants.mjs
var INFINITE_PREFIX = "$inf$";

// node_modules/swr/dist/_internal/index.mjs
var import_react2 = __toESM(require_react(), 1);
var enableDevtools = isWindowDefined && window.__SWR_DEVTOOLS_USE__;
var use = enableDevtools ? window.__SWR_DEVTOOLS_USE__ : [];
var setupDevTools = () => {
  if (enableDevtools) {
    window.__SWR_DEVTOOLS_REACT__ = import_react2.default;
  }
};
var normalize = (args) => {
  return isFunction(args[1]) ? [
    args[0],
    args[1],
    args[2] || {}
  ] : [
    args[0],
    null,
    (args[1] === null ? args[2] : args[1]) || {}
  ];
};
var useSWRConfig = () => {
  const parentConfig = (0, import_react2.useContext)(SWRConfigContext);
  const mergedConfig = (0, import_react2.useMemo)(() => mergeObjects(defaultConfig, parentConfig), [
    parentConfig
  ]);
  return mergedConfig;
};
var middleware = (useSWRNext) => (key_, fetcher_, config) => {
  const fetcher = fetcher_ && ((...args) => {
    const [key] = serialize(key_);
    const [, , , PRELOAD] = SWRGlobalState.get(cache);
    if (key.startsWith(INFINITE_PREFIX)) {
      return fetcher_(...args);
    }
    const req = PRELOAD[key];
    if (isUndefined(req))
      return fetcher_(...args);
    delete PRELOAD[key];
    return req;
  });
  return useSWRNext(key_, fetcher, config);
};
var BUILT_IN_MIDDLEWARE = use.concat(middleware);
var withArgs = (hook) => {
  return function useSWRArgs(...args) {
    const fallbackConfig = useSWRConfig();
    const [key, fn, _config] = normalize(args);
    const config = mergeConfigs(fallbackConfig, _config);
    let next = hook;
    const { use: use3 } = config;
    const middleware2 = (use3 || []).concat(BUILT_IN_MIDDLEWARE);
    for (let i = middleware2.length; i--; ) {
      next = middleware2[i](next);
    }
    return next(key, fn || config.fetcher || null, config);
  };
};
var subscribeCallback = (key, callbacks, callback) => {
  const keyedRevalidators = callbacks[key] || (callbacks[key] = []);
  keyedRevalidators.push(callback);
  return () => {
    const index = keyedRevalidators.indexOf(callback);
    if (index >= 0) {
      keyedRevalidators[index] = keyedRevalidators[keyedRevalidators.length - 1];
      keyedRevalidators.pop();
    }
  };
};
var withMiddleware = (useSWR2, middleware2) => {
  return (...args) => {
    const [key, fn, config] = normalize(args);
    const uses = (config.use || []).concat(middleware2);
    return useSWR2(key, fn, {
      ...config,
      use: uses
    });
  };
};
setupDevTools();

// node_modules/swr/dist/index/index.mjs
var noop2 = () => {
};
var UNDEFINED2 = (
  /*#__NOINLINE__*/
  noop2()
);
var use2 = import_react3.default.use || // This extra generic is to avoid TypeScript mixing up the generic and JSX sytax
// and emitting an error.
// We assume that this is only for the `use(thenable)` case, not `use(context)`.
// https://github.com/facebook/react/blob/aed00dacfb79d17c53218404c52b1c7aa59c4a89/packages/react-server/src/ReactFizzThenable.js#L45
((thenable) => {
  switch (thenable.status) {
    case "pending":
      throw thenable;
    case "fulfilled":
      return thenable.value;
    case "rejected":
      throw thenable.reason;
    default:
      thenable.status = "pending";
      thenable.then((v2) => {
        thenable.status = "fulfilled";
        thenable.value = v2;
      }, (e3) => {
        thenable.status = "rejected";
        thenable.reason = e3;
      });
      throw thenable;
  }
});
var WITH_DEDUPE = {
  dedupe: true
};
var resolvedUndef = Promise.resolve(UNDEFINED);
var useSWRHandler = (_key, fetcher, config) => {
  const { cache: cache2, compare: compare2, suspense, fallbackData, revalidateOnMount, revalidateIfStale, refreshInterval, refreshWhenHidden, refreshWhenOffline, keepPreviousData } = config;
  const [EVENT_REVALIDATORS, MUTATION, FETCH, PRELOAD] = SWRGlobalState.get(cache2);
  const [key, fnArg] = serialize(_key);
  const initialMountedRef = (0, import_react3.useRef)(false);
  const unmountedRef = (0, import_react3.useRef)(false);
  const keyRef = (0, import_react3.useRef)(key);
  const fetcherRef = (0, import_react3.useRef)(fetcher);
  const configRef = (0, import_react3.useRef)(config);
  const getConfig = () => configRef.current;
  const isActive = () => getConfig().isVisible() && getConfig().isOnline();
  const [getCache, setCache, subscribeCache, getInitialCache] = createCacheHelper(cache2, key);
  const stateDependencies = (0, import_react3.useRef)({}).current;
  const fallback = isUndefined(fallbackData) ? isUndefined(config.fallback) ? UNDEFINED : config.fallback[key] : fallbackData;
  const isEqual = (prev, current) => {
    for (const _ in stateDependencies) {
      const t4 = _;
      if (t4 === "data") {
        if (!compare2(prev[t4], current[t4])) {
          if (!isUndefined(prev[t4])) {
            return false;
          }
          if (!compare2(returnedData, current[t4])) {
            return false;
          }
        }
      } else {
        if (current[t4] !== prev[t4]) {
          return false;
        }
      }
    }
    return true;
  };
  const getSnapshot = (0, import_react3.useMemo)(() => {
    const shouldStartRequest = (() => {
      if (!key)
        return false;
      if (!fetcher)
        return false;
      if (!isUndefined(revalidateOnMount))
        return revalidateOnMount;
      if (getConfig().isPaused())
        return false;
      if (suspense)
        return false;
      return revalidateIfStale !== false;
    })();
    const getSelectedCache = (state) => {
      const snapshot = mergeObjects(state);
      delete snapshot._k;
      if (!shouldStartRequest) {
        return snapshot;
      }
      return {
        isValidating: true,
        isLoading: true,
        ...snapshot
      };
    };
    const cachedData2 = getCache();
    const initialData = getInitialCache();
    const clientSnapshot = getSelectedCache(cachedData2);
    const serverSnapshot = cachedData2 === initialData ? clientSnapshot : getSelectedCache(initialData);
    let memorizedSnapshot = clientSnapshot;
    return [
      () => {
        const newSnapshot = getSelectedCache(getCache());
        const compareResult = isEqual(newSnapshot, memorizedSnapshot);
        if (compareResult) {
          memorizedSnapshot.data = newSnapshot.data;
          memorizedSnapshot.isLoading = newSnapshot.isLoading;
          memorizedSnapshot.isValidating = newSnapshot.isValidating;
          memorizedSnapshot.error = newSnapshot.error;
          return memorizedSnapshot;
        } else {
          memorizedSnapshot = newSnapshot;
          return newSnapshot;
        }
      },
      () => serverSnapshot
    ];
  }, [
    cache2,
    key
  ]);
  const cached = (0, import_shim.useSyncExternalStore)((0, import_react3.useCallback)(
    (callback) => subscribeCache(key, (current, prev) => {
      if (!isEqual(prev, current))
        callback();
    }),
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [
      cache2,
      key
    ]
  ), getSnapshot[0], getSnapshot[1]);
  const isInitialMount = !initialMountedRef.current;
  const hasRevalidator = EVENT_REVALIDATORS[key] && EVENT_REVALIDATORS[key].length > 0;
  const cachedData = cached.data;
  const data = isUndefined(cachedData) ? fallback && isPromiseLike(fallback) ? use2(fallback) : fallback : cachedData;
  const error = cached.error;
  const laggyDataRef = (0, import_react3.useRef)(data);
  const returnedData = keepPreviousData ? isUndefined(cachedData) ? isUndefined(laggyDataRef.current) ? data : laggyDataRef.current : cachedData : data;
  const shouldDoInitialRevalidation = (() => {
    if (hasRevalidator && !isUndefined(error))
      return false;
    if (isInitialMount && !isUndefined(revalidateOnMount))
      return revalidateOnMount;
    if (getConfig().isPaused())
      return false;
    if (suspense)
      return isUndefined(data) ? false : revalidateIfStale;
    return isUndefined(data) || revalidateIfStale;
  })();
  const defaultValidatingState = !!(key && fetcher && isInitialMount && shouldDoInitialRevalidation);
  const isValidating = isUndefined(cached.isValidating) ? defaultValidatingState : cached.isValidating;
  const isLoading = isUndefined(cached.isLoading) ? defaultValidatingState : cached.isLoading;
  const revalidate = (0, import_react3.useCallback)(
    async (revalidateOpts) => {
      const currentFetcher = fetcherRef.current;
      if (!key || !currentFetcher || unmountedRef.current || getConfig().isPaused()) {
        return false;
      }
      let newData;
      let startAt;
      let loading = true;
      const opts = revalidateOpts || {};
      const shouldStartNewRequest = !FETCH[key] || !opts.dedupe;
      const callbackSafeguard = () => {
        if (IS_REACT_LEGACY) {
          return !unmountedRef.current && key === keyRef.current && initialMountedRef.current;
        }
        return key === keyRef.current;
      };
      const finalState = {
        isValidating: false,
        isLoading: false
      };
      const finishRequestAndUpdateState = () => {
        setCache(finalState);
      };
      const cleanupState = () => {
        const requestInfo = FETCH[key];
        if (requestInfo && requestInfo[1] === startAt) {
          delete FETCH[key];
        }
      };
      const initialState = {
        isValidating: true
      };
      if (isUndefined(getCache().data)) {
        initialState.isLoading = true;
      }
      try {
        if (shouldStartNewRequest) {
          setCache(initialState);
          if (config.loadingTimeout && isUndefined(getCache().data)) {
            setTimeout(() => {
              if (loading && callbackSafeguard()) {
                getConfig().onLoadingSlow(key, config);
              }
            }, config.loadingTimeout);
          }
          FETCH[key] = [
            currentFetcher(fnArg),
            getTimestamp()
          ];
        }
        ;
        [newData, startAt] = FETCH[key];
        newData = await newData;
        if (shouldStartNewRequest) {
          setTimeout(cleanupState, config.dedupingInterval);
        }
        if (!FETCH[key] || FETCH[key][1] !== startAt) {
          if (shouldStartNewRequest) {
            if (callbackSafeguard()) {
              getConfig().onDiscarded(key);
            }
          }
          return false;
        }
        finalState.error = UNDEFINED;
        const mutationInfo = MUTATION[key];
        if (!isUndefined(mutationInfo) && // case 1
        (startAt <= mutationInfo[0] || // case 2
        startAt <= mutationInfo[1] || // case 3
        mutationInfo[1] === 0)) {
          finishRequestAndUpdateState();
          if (shouldStartNewRequest) {
            if (callbackSafeguard()) {
              getConfig().onDiscarded(key);
            }
          }
          return false;
        }
        const cacheData = getCache().data;
        finalState.data = compare2(cacheData, newData) ? cacheData : newData;
        if (shouldStartNewRequest) {
          if (callbackSafeguard()) {
            getConfig().onSuccess(newData, key, config);
          }
        }
      } catch (err) {
        cleanupState();
        const currentConfig = getConfig();
        const { shouldRetryOnError } = currentConfig;
        if (!currentConfig.isPaused()) {
          finalState.error = err;
          if (shouldStartNewRequest && callbackSafeguard()) {
            currentConfig.onError(err, key, currentConfig);
            if (shouldRetryOnError === true || isFunction(shouldRetryOnError) && shouldRetryOnError(err)) {
              if (!getConfig().revalidateOnFocus || !getConfig().revalidateOnReconnect || isActive()) {
                currentConfig.onErrorRetry(err, key, currentConfig, (_opts) => {
                  const revalidators = EVENT_REVALIDATORS[key];
                  if (revalidators && revalidators[0]) {
                    revalidators[0](events_exports.ERROR_REVALIDATE_EVENT, _opts);
                  }
                }, {
                  retryCount: (opts.retryCount || 0) + 1,
                  dedupe: true
                });
              }
            }
          }
        }
      }
      loading = false;
      finishRequestAndUpdateState();
      return true;
    },
    // `setState` is immutable, and `eventsCallback`, `fnArg`, and
    // `keyValidating` are depending on `key`, so we can exclude them from
    // the deps array.
    //
    // FIXME:
    // `fn` and `config` might be changed during the lifecycle,
    // but they might be changed every render like this.
    // `useSWR('key', () => fetch('/api/'), { suspense: true })`
    // So we omit the values from the deps array
    // even though it might cause unexpected behaviors.
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [
      key,
      cache2
    ]
  );
  const boundMutate = (0, import_react3.useCallback)(
    // Use callback to make sure `keyRef.current` returns latest result every time
    (...args) => {
      return internalMutate(cache2, keyRef.current, ...args);
    },
    // eslint-disable-next-line react-hooks/exhaustive-deps
    []
  );
  useIsomorphicLayoutEffect(() => {
    fetcherRef.current = fetcher;
    configRef.current = config;
    if (!isUndefined(cachedData)) {
      laggyDataRef.current = cachedData;
    }
  });
  useIsomorphicLayoutEffect(() => {
    if (!key)
      return;
    const softRevalidate = revalidate.bind(UNDEFINED, WITH_DEDUPE);
    let nextFocusRevalidatedAt = 0;
    if (getConfig().revalidateOnFocus) {
      const initNow = Date.now();
      nextFocusRevalidatedAt = initNow + getConfig().focusThrottleInterval;
    }
    const onRevalidate = (type, opts = {}) => {
      if (type == events_exports.FOCUS_EVENT) {
        const now = Date.now();
        if (getConfig().revalidateOnFocus && now > nextFocusRevalidatedAt && isActive()) {
          nextFocusRevalidatedAt = now + getConfig().focusThrottleInterval;
          softRevalidate();
        }
      } else if (type == events_exports.RECONNECT_EVENT) {
        if (getConfig().revalidateOnReconnect && isActive()) {
          softRevalidate();
        }
      } else if (type == events_exports.MUTATE_EVENT) {
        return revalidate();
      } else if (type == events_exports.ERROR_REVALIDATE_EVENT) {
        return revalidate(opts);
      }
      return;
    };
    const unsubEvents = subscribeCallback(key, EVENT_REVALIDATORS, onRevalidate);
    unmountedRef.current = false;
    keyRef.current = key;
    initialMountedRef.current = true;
    setCache({
      _k: fnArg
    });
    if (shouldDoInitialRevalidation) {
      if (!FETCH[key]) {
        if (isUndefined(data) || IS_SERVER) {
          softRevalidate();
        } else {
          rAF(softRevalidate);
        }
      }
    }
    return () => {
      unmountedRef.current = true;
      unsubEvents();
    };
  }, [
    key
  ]);
  useIsomorphicLayoutEffect(() => {
    let timer;
    function next() {
      const interval = isFunction(refreshInterval) ? refreshInterval(getCache().data) : refreshInterval;
      if (interval && timer !== -1) {
        timer = setTimeout(execute, interval);
      }
    }
    function execute() {
      if (!getCache().error && (refreshWhenHidden || getConfig().isVisible()) && (refreshWhenOffline || getConfig().isOnline())) {
        revalidate(WITH_DEDUPE).then(next);
      } else {
        next();
      }
    }
    next();
    return () => {
      if (timer) {
        clearTimeout(timer);
        timer = -1;
      }
    };
  }, [
    refreshInterval,
    refreshWhenHidden,
    refreshWhenOffline,
    key
  ]);
  (0, import_react3.useDebugValue)(returnedData);
  if (suspense) {
    const hasKeyButNoData = key && isUndefined(data);
    if (!IS_REACT_LEGACY && IS_SERVER && hasKeyButNoData) {
      throw new Error("Fallback data is required when using Suspense in SSR.");
    }
    if (hasKeyButNoData) {
      fetcherRef.current = fetcher;
      configRef.current = config;
      unmountedRef.current = false;
    }
    const req = PRELOAD[key];
    const mutateReq = !isUndefined(req) && hasKeyButNoData ? boundMutate(req) : resolvedUndef;
    use2(mutateReq);
    if (!isUndefined(error) && hasKeyButNoData) {
      throw error;
    }
    const revalidation = hasKeyButNoData ? revalidate(WITH_DEDUPE) : resolvedUndef;
    if (!isUndefined(returnedData) && hasKeyButNoData) {
      revalidation.status = "fulfilled";
      revalidation.value = true;
    }
    use2(revalidation);
  }
  const swrResponse = {
    mutate: boundMutate,
    get data() {
      stateDependencies.data = true;
      return returnedData;
    },
    get error() {
      stateDependencies.error = true;
      return error;
    },
    get isValidating() {
      stateDependencies.isValidating = true;
      return isValidating;
    },
    get isLoading() {
      stateDependencies.isLoading = true;
      return isLoading;
    }
  };
  return swrResponse;
};
var SWRConfig2 = OBJECT.defineProperty(SWRConfig, "defaultValue", {
  value: defaultConfig
});
var useSWR = withArgs(useSWRHandler);

// node_modules/polotno/toolbar/color-picker.js
var import_react5 = __toESM(require_react(), 1);

// node_modules/polotno/toolbar/sketch.js
var import_react4 = __toESM(require_react(), 1);
var import_reactcss = __toESM(require_lib(), 1);
var import_merge = __toESM(require_merge(), 1);
var import_CgColorPicker = __toESM(require_CgColorPicker(), 1);
var import_common = __toESM(require_common(), 1);
var import_SketchFields = __toESM(require_SketchFields(), 1);
var import_SketchPresetColors = __toESM(require_SketchPresetColors(), 1);
var h = (t4) => {
  const r2 = import_react4.default.useRef(t4);
  return r2.current = t4, import_react4.default.useCallback((...e3) => r2.current(...e3), []);
};
var Sketch = ({ width: a2 = 200, rgb: u, hex: g, hsv: x2, hsl: f2, onChange: b2, onSwatchHover: v2, disableAlpha: E2 = false, presetColors: w = ["#D0021B", "#F5A623", "#F8E71C", "#8B572A", "#7ED321", "#417505", "#BD10E0", "#9013FE", "#4A90E2", "#50E3C2", "#B8E986", "#000000", "#4A4A4A", "#9B9B9B", "#FFFFFF"], renderers: C, styles: k = {}, className: y = "" }) => {
  const A = (0, import_reactcss.ReactCSS)((0, import_merge.default)({ default: Object.assign({ picker: { width: a2, padding: "10px 10px 0", boxSizing: "initial", background: "#fff", borderRadius: "4px", boxShadow: "0 0 0 1px rgba(0,0,0,.15), 0 8px 16px rgba(0,0,0,.15)" }, saturation: { width: "100%", paddingBottom: "75%", position: "relative", overflow: "hidden" }, Saturation: { radius: "3px", shadow: "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)" }, controls: { display: "flex" }, sliders: { padding: "4px 0", flex: "1" }, color: { width: "24px", height: "24px", position: "relative", marginTop: "4px", marginLeft: "4px", borderRadius: "3px" }, activeColor: { absolute: "0px 0px 0px 0px", borderRadius: "2px", background: `rgba(${u.r},${u.g},${u.b},${u.a})`, boxShadow: "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)" }, hue: { position: "relative", height: "10px", overflow: "hidden" }, Hue: { radius: "2px", shadow: "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)" }, alpha: { position: "relative", height: "10px", marginTop: "4px", overflow: "hidden" }, Alpha: { radius: "2px", shadow: "inset 0 0 0 1px rgba(0,0,0,.15), inset 0 0 4px rgba(0,0,0,.25)" } }, k), disableAlpha: { color: { height: "10px" }, hue: { height: "10px" }, alpha: { display: "none" } } }, k), { disableAlpha: E2 }), [S, B] = import_react4.default.useState(false), F = import_react4.default.useRef(null), R = h((e3) => {
    var t4;
    if (S) {
      const r2 = null === (t4 = F.current) || void 0 === t4 ? void 0 : t4.fill();
      r2 && b2(lib_default.Util.colorToRGBA(r2)), j(), function(e4) {
        let t5 = e4.target;
        for (; t5; ) {
          if (t5.classList.contains("color-picker-button")) {
            return true;
          }
          t5 = t5.parentElement;
        }
        return false;
      }(e3) || B(false), e3.stopPropagation(), e3.stopImmediatePropagation();
    }
  }), L = h((e3) => {
    if (!S) {
      return;
    }
    const t4 = lib_default.stages.find((t5) => {
      const r3 = t5.getContent().parentElement.parentElement.getBoundingClientRect();
      return r3.left < e3.clientX && r3.left + r3.width > e3.clientX && r3.top < e3.clientY && r3.top + r3.height > e3.clientY;
    });
    if (!t4) {
      return void j();
    }
    const r2 = t4.getContent().getBoundingClientRect(), o = e3.clientX - r2.left, n2 = e3.clientY - r2.top, a3 = t4.children[0], s2 = a3.getNativeCanvasElement(), l2 = a3.getCanvas().getPixelRatio(), { data: c2 } = s2.getContext("2d").getImageData(o * l2, n2 * l2, 1, 1), d2 = t4.findOne(".line-guides");
    d2.findOne(".picker") || (F.current && F.current.destroy(), F.current = new lib_default.Circle({ name: "picker", radius: 14, stroke: "black", strokeWidth: 1 }), d2.add(F.current)), F.current.setAbsolutePosition({ x: o - 15, y: n2 - 15 }), F.current.fill("rgb(" + c2[0] + "," + c2[1] + "," + c2[2] + ")");
  });
  import_react4.default.useEffect(() => (window.addEventListener("mousemove", L), window.addEventListener("mousedown", R, true), window.addEventListener("touchstart", R, true), () => {
    window.removeEventListener("mousemove", L), window.removeEventListener("mousedown", R, true), window.removeEventListener("touchstart", R, true), j();
  }), []), import_react4.default.useEffect(() => {
    S || j();
  }, [S]), import_react4.default.useEffect(() => (S && (document.body.style.cursor = "crosshair"), () => {
    document.body.style.cursor = "default";
  }), [S]);
  const j = h(() => {
    F.current && (F.current.destroy(), F.current = null);
  });
  return import_react4.default.createElement("div", { style: A.picker, className: `sketch-picker ${y}` }, import_react4.default.createElement("div", { style: A.saturation }, import_react4.default.createElement(import_common.Saturation, { style: A.Saturation, hsl: f2, hsv: x2, onChange: b2 })), import_react4.default.createElement("div", { style: A.controls, className: "flexbox-fix" }, import_react4.default.createElement("div", { style: A.sliders }, import_react4.default.createElement("div", { style: A.hue }, import_react4.default.createElement(import_common.Hue, { style: A.Hue, hsl: f2, onChange: b2 })), import_react4.default.createElement("div", { style: A.alpha }, import_react4.default.createElement(import_common.Alpha, { style: A.Alpha, rgb: u, hsl: f2, renderers: C, onChange: b2 }))), import_react4.default.createElement("div", { style: A.color }, import_react4.default.createElement(import_common.Checkboard, { size: 8, white: "transparent", grey: "rgba(0,0,0,.08)" }), import_react4.default.createElement("div", { style: A.activeColor })), import_react4.default.createElement("div", { style: A.color }, import_react4.default.createElement(Button, { icon: import_react4.default.createElement(import_CgColorPicker.default, null), className: "color-picker-button", minimal: true, style: { width: "24px", height: "24px", minWidth: "24px", minHeight: "24px", padding: 0, margin: 0 }, active: S, onClickCapture: (e3) => {
    B((e4) => !e4), e3.stopPropagation();
  } }))), import_react4.default.createElement(import_SketchFields.SketchFields, { rgb: u, hsl: f2, hex: g, onChange: b2, disableAlpha: E2 }), import_react4.default.createElement(import_SketchPresetColors.SketchPresetColors, { colors: w, onClick: b2, onSwatchHover: v2 }));
};
var sketch_default = (0, import_common.ColorWrap)(Sketch);

// node_modules/polotno/toolbar/color-picker.js
var e2 = function(e3, t4) {
  var r2 = {};
  for (var n2 in e3) {
    Object.prototype.hasOwnProperty.call(e3, n2) && t4.indexOf(n2) < 0 && (r2[n2] = e3[n2]);
  }
  if (null != e3 && "function" == typeof Object.getOwnPropertySymbols) {
    var o = 0;
    for (n2 = Object.getOwnPropertySymbols(e3); o < n2.length; o++) {
      t4.indexOf(n2[o]) < 0 && Object.prototype.propertyIsEnumerable.call(e3, n2[o]) && (r2[n2[o]] = e3[n2[o]]);
    }
  }
  return r2;
};
var DEFAULT_COLORS = ["#D0021B", "#F5A623", "#F8E71C", "#8B572A", "#7ED321", "#417505", "#BD10E0", "#9013FE", "#4A90E2", "#50E3C2", "#B8E986", "#000000", "#4A4A4A", "#9B9B9B", "#FFFFFF"].reverse();
var getUsedColors = (e3) => {
  const t4 = [];
  e3.pages.forEach((e4) => {
    e4.children.forEach((e5) => {
      e5.shadowEnabled && t4.push(e5.shadowColor), "text" === e5.type && (t4.push(e5.fill), e5.backgroundEnabled && t4.push(e5.backgroundColor), e5.strokeWidth && t4.push(e5.stroke)), "svg" === e5.type && t4.push(...e5.colorsReplace.values()), "figure" === e5.type && (t4.push(e5.fill), e5.strokeWidth && t4.push(e5.stroke)), "line" === e5.type && t4.push(e5.color);
    });
  });
  const r2 = [];
  return t4.forEach((e4) => {
    if (isGradient(e4)) {
      const { stops: t5 } = parseColor(e4);
      r2.push(...t5.map((e5) => e5.color));
    } else {
      r2.push(e4);
    }
  }), [...new Set(r2)];
};
var m2 = styled_default("div")`
  & .sketch-picker {
    padding: 0px !important;
    box-shadow: none !important;
    background: none !important;
  }

  & .flexbox-fix {
    border-top: none !important;
  }

  .bp5-dark & .sketch-picker {
    background-color: #394b59;
  }

  .bp5-dark & .sketch-picker label {
    color: #f5f8fa !important;
  }
`;
var h2 = (r2) => {
  var { style: n2, color: o, onChange: l2 } = r2, a2 = e2(r2, ["style", "color", "onChange"]);
  const [s2, i] = import_react5.default.useState(o);
  import_react5.default.useEffect(() => {
    i(o);
  }, [o]);
  const d2 = import_react5.default.useRef(), p2 = import_react5.default.useRef();
  return import_react5.default.createElement(m2, { style: n2, onMouseDown: (e3) => {
    "INPUT" !== e3.target.tagName && e3.preventDefault();
  } }, import_react5.default.createElement(sketch_default, Object.assign({ color: s2 }, a2, { onChange: (e3) => {
    const { r: t4, g: r3, b: n3, a: o2 } = e3.rgb, a3 = `rgba(${t4},${r3},${n3},${o2})`;
    i(a3), p2.current = a3, d2.current || (d2.current = window.setTimeout(() => {
      d2.current = 0, l2(a3);
    }, 50));
  } })));
};
var f = (e3) => e3.map((e4) => `${e4.color} ${100 * e4.offset}%`).join(",");
var E = ({ value: e3, onChange: r2, store: n2, preset: o }) => {
  const { rotation: s2, stops: c2 } = parseColor(e3), d2 = import_react5.default.useRef(c2);
  d2.current = c2;
  const u = import_react5.default.useRef(s2);
  u.current = s2;
  const [g, m3] = import_react5.default.useState(0), E2 = import_react5.default.useRef(null), b2 = import_react5.default.useRef(false), x2 = () => {
    b2.current = true;
  };
  return import_react5.default.useEffect(() => {
    var e4;
    null === (e4 = E2.current) || void 0 === e4 || e4.focus();
  }, []), import_react5.default.useEffect(() => {
    const e4 = (e5) => {
      if (b2.current) {
        const t5 = E2.current.getBoundingClientRect(), n3 = e5.clientX - t5.left, o2 = n3 / t5.width, l2 = o2 < -0.5 || o2 > 1.5;
        if (c2.length > 2 && l2) {
          return m3(0), b2.current = false, d2.current.splice(g, 1), void r2(`linear-gradient(${u.current}deg, ${f(d2.current)})`);
        }
        const a2 = Math.min(1, Math.max(0, n3 / t5.width)), s3 = [...d2.current];
        s3[g].offset = a2, r2(`linear-gradient(${u.current}deg, ${f(s3)})`);
      }
    }, t4 = () => {
      b2.current = false;
    };
    return window.addEventListener("mousemove", e4), window.addEventListener("mouseup", t4), () => {
      window.removeEventListener("mousemove", e4), window.removeEventListener("mouseup", t4);
    };
  }, [g, d2]), import_react5.default.createElement("div", null, import_react5.default.createElement("div", { style: { width: "calc(100% - 35px)", height: "60px", position: "relative" } }, import_react5.default.createElement("div", { ref: E2, tabIndex: 0, style: { position: "absolute", top: 0, left: 0, width: "100%", marginLeft: "15px", height: "100%", zIndex: 0, outline: "none" }, onKeyDownCapture: (e4) => {
    if ("Backspace" === e4.key) {
      if (e4.preventDefault(), e4.stopPropagation(), d2.current.length <= 2) {
        return;
      }
      d2.current.splice(g, 1), r2(`linear-gradient(${u.current}deg, ${f(d2.current)})`);
    }
  }, onMouseDown: (e4) => {
    const t4 = e4.currentTarget.getBoundingClientRect(), n3 = e4.clientX - t4.left, o2 = Math.min(1, Math.max(0, n3 / t4.width)), l2 = c2[0].color;
    c2.push({ color: l2, offset: o2 }), c2.sort((e5, t5) => e5.offset - t5.offset);
    const a2 = c2.findIndex((e5) => e5.offset === o2);
    m3(a2), x2(), r2(`linear-gradient(${s2}deg, ${f(c2)})`);
  } }), c2.map(({ offset: e4, color: r3 }, n3) => import_react5.default.createElement("div", { key: n3, style: { position: "absolute", top: "10px", left: 100 * e4 + "%", border: n3 === g ? "2px solid rgb(0, 161, 255)" : "2px solid rgb(0, 0, 0, 0)", padding: "2px" }, onMouseDown: (e5) => {
    e5.stopPropagation(), m3(n3), x2();
  } }, import_react5.default.createElement(v, { background: r3, style: { margin: 0 } })))), import_react5.default.createElement("div", { style: { width: "calc(100% - 30px)", height: "10px", marginLeft: "15px", background: `linear-gradient(90deg,${f(c2)})` } }), import_react5.default.createElement("div", { style: { padding: "10px" } }, import_react5.default.createElement("div", { style: { display: "flex", alignItems: "center", justifyContent: "space-between", paddingTop: "5px", paddingBottom: "5px" } }, import_react5.default.createElement("div", null, t("toolbar.colorPicker.angle")), import_react5.default.createElement("div", null, import_react5.default.createElement(NumericInput, { value: s2, onValueChange: (e4) => {
    const t4 = Math.min(360, Math.max(0, e4));
    r2(`linear-gradient(${t4}deg,${f(c2)})`);
  }, buttonPosition: "none", style: { width: "50px" }, min: 0, max: 360 }))), import_react5.default.createElement(Slider, { min: 0, max: 360, value: s2, showTrackFill: false, labelRenderer: false, onChange: (e4) => {
    r2(`linear-gradient(${e4}deg,${f(c2)})`);
  } })), import_react5.default.createElement(h2, { color: c2[g].color, presetColors: o, onChange: (e4) => {
    const t4 = [...c2];
    t4[g].color = e4, r2(`linear-gradient(${s2}deg, ${f(t4)})`);
  } }));
};
var b = observer(({ value: e3, onChange: o, preset: l2, store: a2 }) => {
  const [s2, c2] = import_react5.default.useState(isGradient(e3) ? "gradient" : "solid");
  return import_react5.default.createElement("div", { style: { padding: "5px" } }, import_react5.default.createElement(Tabs, { id: "TabsExample", selectedTabId: s2, onChange: (e4) => c2(e4), renderActiveTabPanelOnly: true }, import_react5.default.createElement(Tab, { id: "solid", title: t("toolbar.colorPicker.solid"), panel: import_react5.default.createElement(h2, { color: e3, onChange: o, presetColors: l2, style: { padding: "0" } }) }), import_react5.default.createElement(Tab, { id: "gradient", title: t("toolbar.colorPicker.linear"), panel: import_react5.default.createElement(E, { value: e3, onChange: o, store: a2, preset: l2 }), panelClassName: "ember-panel" })));
});
var v = (r2) => {
  var { size: n2 = 30, background: o, style: l2 = {}, children: a2 = null } = r2, s2 = e2(r2, ["size", "background", "style", "children"]);
  return import_react5.default.createElement("div", Object.assign({ onMouseDown: (e3) => e3.preventDefault(), style: Object.assign({ width: n2 + "px", height: n2 + "px", background: `url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='15' height='15' viewBox='0 0 8 8'%3E%3Cg fill='rgba(112, 112, 116, 1)' fill-opacity='1'%3E%3Cpath fill-rule='evenodd' d='M0 0h4v4H0V0zm4 4h4v4H4V4z'/%3E%3C/g%3E%3C/svg%3E")`, borderRadius: "2px", boxShadow: "0 0 2px grey", marginBottom: "-4px" }, l2) }, s2), import_react5.default.createElement("div", { style: { width: n2 + "px", height: n2 + "px", background: o } }, a2));
};
var x = (e3) => {
  const t4 = getUsedColors(e3).slice(0, 8).filter((e4) => !DEFAULT_COLORS.find((t5) => sameColors(t5, e4)));
  return t4.concat(DEFAULT_COLORS.slice(0, 16 - t4.length).reverse());
};
var ColorPicker = ({ value: e3, onChange: r2, size: n2, store: l2, gradientEnabled: a2, children: s2, style: i, position: c2 = "auto", onOpen: d2, onClose: p2 }) => {
  const u = x(l2);
  return import_react5.default.createElement(Popover, { autoFocus: false, enforceFocus: true, interactionKind: "click", hasBackdrop: true, position: c2, onOpening: d2, onClosed: p2, content: a2 ? import_react5.default.createElement(b, { preset: u, value: e3, onChange: r2, store: l2 }) : import_react5.default.createElement("div", { style: { padding: "5px" } }, import_react5.default.createElement(h2, { color: e3, onChange: r2, presetColors: u })) }, import_react5.default.createElement(v, { size: n2, background: e3, style: i }, s2));
};
var color_picker_default = ColorPicker;

// node_modules/@blueprintjs/select/node_modules/tslib/tslib.es6.mjs
var extendStatics = function(d2, b2) {
  extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d3, b3) {
    d3.__proto__ = b3;
  } || function(d3, b3) {
    for (var p2 in b3)
      if (Object.prototype.hasOwnProperty.call(b3, p2))
        d3[p2] = b3[p2];
  };
  return extendStatics(d2, b2);
};
function __extends(d2, b2) {
  if (typeof b2 !== "function" && b2 !== null)
    throw new TypeError("Class extends value " + String(b2) + " is not a constructor or null");
  extendStatics(d2, b2);
  function __() {
    this.constructor = d2;
  }
  d2.prototype = b2 === null ? Object.create(b2) : (__.prototype = b2.prototype, new __());
}
var __assign = function() {
  __assign = Object.assign || function __assign2(t4) {
    for (var s2, i = 1, n2 = arguments.length; i < n2; i++) {
      s2 = arguments[i];
      for (var p2 in s2)
        if (Object.prototype.hasOwnProperty.call(s2, p2))
          t4[p2] = s2[p2];
    }
    return t4;
  };
  return __assign.apply(this, arguments);
};
function __rest(s2, e3) {
  var t4 = {};
  for (var p2 in s2)
    if (Object.prototype.hasOwnProperty.call(s2, p2) && e3.indexOf(p2) < 0)
      t4[p2] = s2[p2];
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p2 = Object.getOwnPropertySymbols(s2); i < p2.length; i++) {
      if (e3.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p2[i]))
        t4[p2[i]] = s2[p2[i]];
    }
  return t4;
}

// node_modules/@blueprintjs/select/lib/esm/components/select/select.js
var import_classnames = __toESM(require_classnames());
var React5 = __toESM(require_react());

// node_modules/@blueprintjs/select/lib/esm/common/classes.js
var classes_exports2 = {};
__export(classes_exports2, {
  MULTISELECT: () => MULTISELECT,
  MULTISELECT_POPOVER: () => MULTISELECT_POPOVER,
  MULTISELECT_POPOVER_DEFAULT_WIDTH: () => MULTISELECT_POPOVER_DEFAULT_WIDTH,
  MULTISELECT_POPOVER_TAG_INPUT_MARGIN: () => MULTISELECT_POPOVER_TAG_INPUT_MARGIN,
  MULTISELECT_TAG_INPUT_INPUT: () => MULTISELECT_TAG_INPUT_INPUT,
  OMNIBAR: () => OMNIBAR,
  OMNIBAR_OVERLAY: () => OMNIBAR_OVERLAY,
  SELECT_POPOVER: () => SELECT_POPOVER,
  SUGGEST_POPOVER: () => SUGGEST_POPOVER
});
var NS = classes_exports.getClassNamespace();
var MULTISELECT = "".concat(NS, "-multi-select");
var MULTISELECT_POPOVER = "".concat(MULTISELECT, "-popover");
var MULTISELECT_POPOVER_DEFAULT_WIDTH = "".concat(MULTISELECT, "-popover-default-width");
var MULTISELECT_POPOVER_TAG_INPUT_MARGIN = "".concat(MULTISELECT, "-popover-tag-input-margin");
var MULTISELECT_TAG_INPUT_INPUT = "".concat(MULTISELECT, "-tag-input-input");
var OMNIBAR = "".concat(NS, "-omnibar");
var OMNIBAR_OVERLAY = "".concat(OMNIBAR, "-overlay");
var SELECT_POPOVER = "".concat(NS, "-select-popover");
var SUGGEST_POPOVER = "".concat(NS, "-suggest-popover");

// node_modules/@blueprintjs/select/lib/esm/common/itemListRenderer.js
function renderFilteredItems(props, noResults, initialContent) {
  if (props.query.length === 0 && initialContent !== void 0) {
    return initialContent;
  }
  var items = props.filteredItems.map(props.renderItem).filter(function(item) {
    return item != null;
  });
  return items.length > 0 ? items : noResults;
}

// node_modules/@blueprintjs/select/lib/esm/common/listItemsProps.js
function executeItemsEqual(itemsEqualProp, itemA, itemB) {
  if (itemsEqualProp === void 0 || itemA == null || itemB == null) {
    return itemA === itemB;
  }
  if (utils_exports.isFunction(itemsEqualProp)) {
    return itemsEqualProp(itemA, itemB);
  } else {
    return itemA[itemsEqualProp] === itemB[itemsEqualProp];
  }
}

// node_modules/@blueprintjs/select/lib/esm/common/listItemsUtils.js
function getCreateNewItem() {
  return { __blueprintCreateNewItemBrand: "blueprint-create-new-item" };
}
function isCreateNewItem(item) {
  if (item == null) {
    return false;
  }
  var keys = Object.keys(item);
  if (keys.length !== 1 || keys[0] !== "__blueprintCreateNewItemBrand") {
    return false;
  }
  return item.__blueprintCreateNewItemBrand === "blueprint-create-new-item";
}
function getActiveItem(activeItem) {
  return activeItem == null || isCreateNewItem(activeItem) ? null : activeItem;
}

// node_modules/@blueprintjs/select/lib/esm/components/query-list/queryList.js
var React4 = __toESM(require_react());
var QueryList = (
  /** @class */
  function(_super) {
    __extends(QueryList2, _super);
    function QueryList2(props) {
      var _a, _b;
      var _this = _super.call(this, props) || this;
      _this.itemRefs = /* @__PURE__ */ new Map();
      _this.refHandlers = {
        itemsParent: function(ref) {
          return _this.itemsParentRef = ref;
        }
      };
      _this.shouldCheckActiveItemInViewport = false;
      _this.expectedNextActiveItem = null;
      _this.isEnterKeyPressed = false;
      _this.renderItemList = function(listProps) {
        var _a2 = _this.props, initialContent = _a2.initialContent, noResults = _a2.noResults;
        var createItemView = listProps.renderCreateItem();
        var maybeNoResults = createItemView != null ? null : noResults;
        var menuContent = renderFilteredItems(listProps, maybeNoResults, initialContent);
        if (menuContent == null && createItemView == null) {
          return null;
        }
        var createFirst = _this.isCreateItemFirst();
        return React4.createElement(
          Menu,
          __assign({ role: "listbox" }, listProps.menuProps, { ulRef: listProps.itemsParentRef }),
          createFirst && createItemView,
          menuContent,
          !createFirst && createItemView
        );
      };
      _this.renderItem = function(item, index) {
        if (_this.props.disabled !== true) {
          var _a2 = _this.state, activeItem = _a2.activeItem, query2 = _a2.query, filteredItems2 = _a2.filteredItems;
          var modifiers = {
            active: executeItemsEqual(_this.props.itemsEqual, getActiveItem(activeItem), item),
            disabled: isItemDisabled(item, index, _this.props.itemDisabled),
            matchesPredicate: filteredItems2.indexOf(item) >= 0
          };
          return _this.props.itemRenderer(item, {
            handleClick: function(e3) {
              return _this.handleItemSelect(item, e3);
            },
            handleFocus: function() {
              return _this.setActiveItem(item);
            },
            index,
            modifiers,
            query: query2,
            ref: function(node) {
              if (node) {
                _this.itemRefs.set(index, node);
              } else {
                _this.itemRefs.delete(index);
              }
            }
          });
        }
        return null;
      };
      _this.renderCreateItemMenuItem = function() {
        if (_this.isCreateItemRendered(_this.state.createNewItem)) {
          var _a2 = _this.state, activeItem = _a2.activeItem, query2 = _a2.query;
          var trimmedQuery_1 = query2.trim();
          var handleClick = function(evt) {
            _this.handleItemCreate(trimmedQuery_1, evt);
          };
          var isActive = isCreateNewItem(activeItem);
          return _this.props.createNewItemRenderer(trimmedQuery_1, isActive, handleClick);
        }
        return null;
      };
      _this.handleItemCreate = function(query2, evt) {
        var _a2, _b2, _c2, _d;
        var value = (_b2 = (_a2 = _this.props).createNewItemFromQuery) === null || _b2 === void 0 ? void 0 : _b2.call(_a2, query2);
        if (value != null) {
          var newItems = Array.isArray(value) ? value : [value];
          for (var _i = 0, newItems_1 = newItems; _i < newItems_1.length; _i++) {
            var item = newItems_1[_i];
            (_d = (_c2 = _this.props).onItemSelect) === null || _d === void 0 ? void 0 : _d.call(_c2, item, evt);
          }
          _this.maybeResetQuery();
        }
      };
      _this.handleItemSelect = function(item, event) {
        var _a2, _b2;
        _this.setActiveItem(item);
        (_b2 = (_a2 = _this.props).onItemSelect) === null || _b2 === void 0 ? void 0 : _b2.call(_a2, item, event);
        _this.maybeResetQuery();
      };
      _this.handlePaste = function(queries) {
        var _a2 = _this.props, createNewItemFromQuery = _a2.createNewItemFromQuery, onItemsPaste = _a2.onItemsPaste;
        var nextActiveItem;
        var nextQueries = [];
        var pastedItemsToEmit = [];
        for (var _i = 0, queries_1 = queries; _i < queries_1.length; _i++) {
          var query2 = queries_1[_i];
          var equalItem = getMatchingItem(query2, _this.props);
          if (equalItem !== void 0) {
            nextActiveItem = equalItem;
            pastedItemsToEmit.push(equalItem);
          } else if (_this.canCreateItems()) {
            var value = createNewItemFromQuery === null || createNewItemFromQuery === void 0 ? void 0 : createNewItemFromQuery(query2);
            if (value !== void 0) {
              var newItems = Array.isArray(value) ? value : [value];
              pastedItemsToEmit.push.apply(pastedItemsToEmit, newItems);
            }
          } else {
            nextQueries.push(query2);
          }
        }
        _this.setQuery(nextQueries.join(", "), false);
        if (nextActiveItem !== void 0) {
          _this.setActiveItem(nextActiveItem);
        }
        onItemsPaste === null || onItemsPaste === void 0 ? void 0 : onItemsPaste(pastedItemsToEmit);
      };
      _this.handleKeyDown = function(event) {
        var _a2, _b2;
        if (!event.nativeEvent.isComposing) {
          var key = event.key;
          var direction = utils_exports.getArrowKeyDirection(event, ["ArrowUp"], ["ArrowDown"]);
          if (direction !== void 0) {
            event.preventDefault();
            var nextActiveItem = _this.getNextActiveItem(direction);
            if (nextActiveItem != null) {
              _this.setActiveItem(nextActiveItem);
            }
          } else if (key === "Enter") {
            _this.isEnterKeyPressed = true;
          }
        }
        (_b2 = (_a2 = _this.props).onKeyDown) === null || _b2 === void 0 ? void 0 : _b2.call(_a2, event);
      };
      _this.handleKeyUp = function(event) {
        var onKeyUp = _this.props.onKeyUp;
        var activeItem = _this.state.activeItem;
        if (event.key === "Enter" && _this.isEnterKeyPressed) {
          event.preventDefault();
          if (activeItem == null || isCreateNewItem(activeItem)) {
            _this.handleItemCreate(_this.state.query, event);
          } else {
            _this.handleItemSelect(activeItem, event);
          }
          _this.isEnterKeyPressed = false;
        }
        onKeyUp === null || onKeyUp === void 0 ? void 0 : onKeyUp(event);
      };
      _this.handleInputQueryChange = function(event) {
        var _a2, _b2;
        var query2 = event == null ? "" : event.target.value;
        _this.setQuery(query2);
        (_b2 = (_a2 = _this.props).onQueryChange) === null || _b2 === void 0 ? void 0 : _b2.call(_a2, query2, event);
      };
      var _c = props.query, query = _c === void 0 ? "" : _c;
      var createNewItem = (_a = props.createNewItemFromQuery) === null || _a === void 0 ? void 0 : _a.call(props, query);
      var filteredItems = getFilteredItems(query, props);
      _this.state = {
        activeItem: props.activeItem !== void 0 ? props.activeItem : (_b = props.initialActiveItem) !== null && _b !== void 0 ? _b : getFirstEnabledItem(filteredItems, props.itemDisabled),
        createNewItem,
        filteredItems,
        query
      };
      return _this;
    }
    QueryList2.ofType = function() {
      return QueryList2;
    };
    QueryList2.prototype.render = function() {
      var _a = this.props, className = _a.className, items = _a.items, renderer = _a.renderer, _b = _a.itemListRenderer, itemListRenderer = _b === void 0 ? this.renderItemList : _b, menuProps = _a.menuProps;
      var _c = this.state, createNewItem = _c.createNewItem, spreadableState = __rest(_c, ["createNewItem"]);
      return renderer(__assign(__assign({}, spreadableState), { className, handleItemSelect: this.handleItemSelect, handleKeyDown: this.handleKeyDown, handleKeyUp: this.handleKeyUp, handlePaste: this.handlePaste, handleQueryChange: this.handleInputQueryChange, itemList: itemListRenderer(__assign(__assign({}, spreadableState), { items, itemsParentRef: this.refHandlers.itemsParent, menuProps, renderCreateItem: this.renderCreateItemMenuItem, renderItem: this.renderItem })) }));
    };
    QueryList2.prototype.componentDidUpdate = function(prevProps) {
      var _this = this;
      if (this.props.activeItem !== void 0 && this.props.activeItem !== this.state.activeItem) {
        this.shouldCheckActiveItemInViewport = true;
        this.setState({ activeItem: this.props.activeItem });
      }
      if (this.props.query != null && this.props.query !== prevProps.query) {
        this.setQuery(this.props.query, this.props.resetOnQuery, this.props);
      } else if (
        // same query (or uncontrolled query), but items in the list changed
        !utils_exports.shallowCompareKeys(this.props, prevProps, {
          include: ["items", "itemListPredicate", "itemPredicate"]
        })
      ) {
        this.setQuery(this.state.query);
      }
      if (this.shouldCheckActiveItemInViewport) {
        this.requestAnimationFrame(function() {
          return _this.scrollActiveItemIntoView();
        });
        this.shouldCheckActiveItemInViewport = false;
      }
    };
    QueryList2.prototype.scrollActiveItemIntoView = function() {
      var scrollToActiveItem = this.props.scrollToActiveItem !== false;
      var externalChangeToActiveItem = !executeItemsEqual(this.props.itemsEqual, getActiveItem(this.expectedNextActiveItem), getActiveItem(this.props.activeItem));
      this.expectedNextActiveItem = null;
      if (!scrollToActiveItem && externalChangeToActiveItem) {
        return;
      }
      var activeElement = this.getActiveElement();
      if (this.itemsParentRef != null && activeElement != null) {
        var activeTop = activeElement.offsetTop, activeHeight = activeElement.offsetHeight;
        var _a = this.itemsParentRef, parentOffsetTop = _a.offsetTop, parentScrollTop = _a.scrollTop, parentHeight = _a.clientHeight;
        var _b = this.getItemsParentPadding(), paddingTop = _b.paddingTop, paddingBottom = _b.paddingBottom;
        var activeBottomEdge = activeTop + activeHeight + paddingBottom - parentOffsetTop;
        var activeTopEdge = activeTop - paddingTop - parentOffsetTop;
        if (activeBottomEdge >= parentScrollTop + parentHeight) {
          this.itemsParentRef.scrollTop = activeBottomEdge + activeHeight - parentHeight;
        } else if (activeTopEdge <= parentScrollTop) {
          this.itemsParentRef.scrollTop = activeTopEdge - activeHeight;
        }
      }
    };
    QueryList2.prototype.setQuery = function(query, resetActiveItem, props) {
      var _a;
      if (resetActiveItem === void 0) {
        resetActiveItem = this.props.resetOnQuery;
      }
      if (props === void 0) {
        props = this.props;
      }
      var createNewItemFromQuery = props.createNewItemFromQuery;
      this.shouldCheckActiveItemInViewport = true;
      var hasQueryChanged = query !== this.state.query;
      if (hasQueryChanged) {
        (_a = props.onQueryChange) === null || _a === void 0 ? void 0 : _a.call(props, query);
      }
      var trimmedQuery = query.trim();
      var filteredItems = getFilteredItems(trimmedQuery, props);
      var createNewItem = createNewItemFromQuery != null && trimmedQuery !== "" ? createNewItemFromQuery(trimmedQuery) : void 0;
      this.setState({ createNewItem, filteredItems, query });
      var activeIndex = this.getActiveIndex(filteredItems);
      var shouldUpdateActiveItem = resetActiveItem || activeIndex < 0 || isItemDisabled(getActiveItem(this.state.activeItem), activeIndex, props.itemDisabled);
      if (shouldUpdateActiveItem) {
        if (this.isCreateItemRendered(createNewItem) && this.isCreateItemFirst()) {
          this.setActiveItem(getCreateNewItem());
        } else {
          this.setActiveItem(getFirstEnabledItem(filteredItems, props.itemDisabled));
        }
      }
    };
    QueryList2.prototype.setActiveItem = function(activeItem) {
      var _a, _b, _c, _d;
      this.expectedNextActiveItem = activeItem;
      if (this.props.activeItem === void 0) {
        this.shouldCheckActiveItemInViewport = true;
        this.setState({ activeItem });
      }
      if (isCreateNewItem(activeItem)) {
        (_b = (_a = this.props).onActiveItemChange) === null || _b === void 0 ? void 0 : _b.call(_a, null, true);
      } else {
        (_d = (_c = this.props).onActiveItemChange) === null || _d === void 0 ? void 0 : _d.call(_c, activeItem, false);
      }
    };
    QueryList2.prototype.getActiveElement = function() {
      var _a;
      var activeItem = this.state.activeItem;
      if (this.itemsParentRef != null) {
        if (isCreateNewItem(activeItem)) {
          var index = this.isCreateItemFirst() ? 0 : this.state.filteredItems.length;
          return this.itemsParentRef.children.item(index);
        } else {
          var activeIndex = this.getActiveIndex();
          return (_a = this.itemRefs.get(activeIndex)) !== null && _a !== void 0 ? _a : this.itemsParentRef.children.item(activeIndex);
        }
      }
      return void 0;
    };
    QueryList2.prototype.getActiveIndex = function(items) {
      if (items === void 0) {
        items = this.state.filteredItems;
      }
      var activeItem = this.state.activeItem;
      if (activeItem == null || isCreateNewItem(activeItem)) {
        return -1;
      }
      for (var i = 0; i < items.length; ++i) {
        if (executeItemsEqual(this.props.itemsEqual, items[i], activeItem)) {
          return i;
        }
      }
      return -1;
    };
    QueryList2.prototype.getItemsParentPadding = function() {
      var _a = getComputedStyle(this.itemsParentRef), paddingTop = _a.paddingTop, paddingBottom = _a.paddingBottom;
      return {
        paddingBottom: pxToNumber(paddingBottom),
        paddingTop: pxToNumber(paddingTop)
      };
    };
    QueryList2.prototype.getNextActiveItem = function(direction, startIndex) {
      if (startIndex === void 0) {
        startIndex = this.getActiveIndex();
      }
      if (this.isCreateItemRendered(this.state.createNewItem)) {
        var reachedCreate = startIndex === 0 && direction === -1 || startIndex === this.state.filteredItems.length - 1 && direction === 1;
        if (reachedCreate) {
          return getCreateNewItem();
        }
      }
      return getFirstEnabledItem(this.state.filteredItems, this.props.itemDisabled, direction, startIndex);
    };
    QueryList2.prototype.isCreateItemRendered = function(createNewItem) {
      return this.canCreateItems() && this.state.query !== "" && // this check is unfortunately O(N) on the number of items, but
      // alas, hiding the "Create Item" option when it exactly matches an
      // existing item is much clearer.
      !this.wouldCreatedItemMatchSomeExistingItem(createNewItem);
    };
    QueryList2.prototype.isCreateItemFirst = function() {
      return this.props.createNewItemPosition === "first";
    };
    QueryList2.prototype.canCreateItems = function() {
      return this.props.createNewItemFromQuery != null && this.props.createNewItemRenderer != null;
    };
    QueryList2.prototype.wouldCreatedItemMatchSomeExistingItem = function(createNewItem) {
      var _this = this;
      return this.state.filteredItems.some(function(item) {
        var newItems = Array.isArray(createNewItem) ? createNewItem : [createNewItem];
        return newItems.some(function(newItem) {
          return executeItemsEqual(_this.props.itemsEqual, item, newItem);
        });
      });
    };
    QueryList2.prototype.maybeResetQuery = function() {
      if (this.props.resetOnSelect) {
        this.setQuery("", true);
      }
    };
    QueryList2.displayName = "".concat(DISPLAYNAME_PREFIX, ".QueryList");
    QueryList2.defaultProps = {
      disabled: false,
      resetOnQuery: true
    };
    return QueryList2;
  }(AbstractComponent)
);
function pxToNumber(value) {
  return value == null ? 0 : parseInt(value.slice(0, -2), 10);
}
function getMatchingItem(query, _a) {
  var items = _a.items, itemPredicate = _a.itemPredicate;
  if (utils_exports.isFunction(itemPredicate)) {
    for (var i = 0; i < items.length; i++) {
      var item = items[i];
      if (itemPredicate(query, item, i, true)) {
        return item;
      }
    }
  }
  return void 0;
}
function getFilteredItems(query, _a) {
  var items = _a.items, itemPredicate = _a.itemPredicate, itemListPredicate = _a.itemListPredicate;
  if (utils_exports.isFunction(itemListPredicate)) {
    return itemListPredicate(query, items);
  } else if (utils_exports.isFunction(itemPredicate)) {
    return items.filter(function(item, index) {
      return itemPredicate(query, item, index);
    });
  }
  return items;
}
function wrapNumber(value, min, max) {
  if (value < min) {
    return max;
  } else if (value > max) {
    return min;
  }
  return value;
}
function isItemDisabled(item, index, itemDisabled) {
  if (itemDisabled == null || item == null) {
    return false;
  } else if (utils_exports.isFunction(itemDisabled)) {
    return itemDisabled(item, index);
  }
  return !!item[itemDisabled];
}
function getFirstEnabledItem(items, itemDisabled, direction, startIndex) {
  if (direction === void 0) {
    direction = 1;
  }
  if (startIndex === void 0) {
    startIndex = items.length - 1;
  }
  if (items.length === 0) {
    return null;
  }
  var index = startIndex;
  var maxIndex = items.length - 1;
  do {
    index = wrapNumber(index + direction, 0, maxIndex);
    if (!isItemDisabled(items[index], index, itemDisabled)) {
      return items[index];
    }
  } while (index !== startIndex && startIndex !== -1);
  return null;
}

// node_modules/@blueprintjs/select/lib/esm/components/select/select.js
var Select = (
  /** @class */
  function(_super) {
    __extends(Select2, _super);
    function Select2() {
      var _a;
      var _this = _super.apply(this, arguments) || this;
      _this.state = { isOpen: false };
      _this.inputElement = null;
      _this.queryList = null;
      _this.handleInputRef = refHandler(_this, "inputElement", (_a = _this.props.inputProps) === null || _a === void 0 ? void 0 : _a.inputRef);
      _this.handleQueryListRef = function(ref) {
        return _this.queryList = ref;
      };
      _this.listboxId = utils_exports.uniqueId("listbox");
      _this.renderQueryList = function(listProps) {
        var _a2 = _this.props, _b = _a2.filterable, filterable = _b === void 0 ? true : _b, _c = _a2.disabled, disabled = _c === void 0 ? false : _c, _d = _a2.inputProps, inputProps = _d === void 0 ? {} : _d, _e = _a2.placeholder, placeholder = _e === void 0 ? "Filter..." : _e, _f = _a2.popoverContentProps, popoverContentProps = _f === void 0 ? {} : _f, _g = _a2.popoverProps, popoverProps = _g === void 0 ? {} : _g, popoverRef = _a2.popoverRef;
        var input = React5.createElement(InputGroup, __assign({ "aria-autocomplete": "list", leftIcon: React5.createElement(Search, null), placeholder, rightElement: _this.maybeRenderClearButton(listProps.query) }, inputProps, { inputRef: _this.handleInputRef, onChange: listProps.handleQueryChange, value: listProps.query }));
        var handleKeyDown = listProps.handleKeyDown, handleKeyUp = listProps.handleKeyUp;
        return React5.createElement(Popover, __assign({ autoFocus: false, enforceFocus: false, isOpen: _this.state.isOpen, disabled, placement: popoverProps.position || popoverProps.placement ? void 0 : "bottom-start" }, popoverProps, { className: (0, import_classnames.default)(listProps.className, popoverProps.className), content: React5.createElement(
          "div",
          __assign({}, popoverContentProps, { onKeyDown: handleKeyDown, onKeyUp: handleKeyUp }),
          filterable ? input : void 0,
          listProps.itemList
        ), onClosing: _this.handlePopoverClosing, onInteraction: _this.handlePopoverInteraction, onOpened: _this.handlePopoverOpened, onOpening: _this.handlePopoverOpening, popoverClassName: (0, import_classnames.default)(classes_exports2.SELECT_POPOVER, popoverProps.popoverClassName), popupKind: PopupKind.LISTBOX, ref: popoverRef, renderTarget: _this.getPopoverTargetRenderer(listProps, _this.state.isOpen) }));
      };
      _this.getPopoverTargetRenderer = function(listProps, isOpen) {
        return function(_a2) {
          var _b;
          var _isOpen = _a2.isOpen, ref = _a2.ref, targetProps = __rest(_a2, ["isOpen", "ref"]);
          var _c = _this.props, disabled = _c.disabled, _d = _c.popoverProps, popoverProps = _d === void 0 ? {} : _d, popoverTargetProps = _c.popoverTargetProps;
          var handleKeyDown = listProps.handleKeyDown, handleKeyUp = listProps.handleKeyUp;
          var _e = popoverProps.targetTagName, targetTagName = _e === void 0 ? "div" : _e;
          return React5.createElement(targetTagName, __assign(__assign(__assign({ "aria-controls": _this.listboxId }, popoverTargetProps), targetProps), {
            "aria-disabled": disabled,
            "aria-expanded": isOpen,
            // Note that we must set FILL here in addition to children to get the wrapper element to full width
            className: (0, import_classnames.default)(targetProps.className, popoverTargetProps === null || popoverTargetProps === void 0 ? void 0 : popoverTargetProps.className, (_b = {}, _b[classes_exports.FILL] = _this.props.fill, _b)),
            // Normally, Popover would also need to attach its own `onKeyDown` handler via `targetProps`,
            // but in our case we fully manage that interaction and listen for key events to open/close
            // the popover, so we elide it from the DOM.
            onKeyDown: _this.withPopoverTargetPropsHandler("keydown", isOpen ? handleKeyDown : _this.handleTargetKeyDown),
            onKeyUp: _this.withPopoverTargetPropsHandler("keyup", isOpen ? handleKeyUp : void 0),
            ref,
            role: "combobox"
          }), _this.props.children);
        };
      };
      _this.withPopoverTargetPropsHandler = function(eventType, handler) {
        switch (eventType) {
          case "keydown":
            return function(event) {
              var _a2, _b;
              handler === null || handler === void 0 ? void 0 : handler(event);
              (_b = (_a2 = _this.props.popoverTargetProps) === null || _a2 === void 0 ? void 0 : _a2.onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a2, event);
            };
          case "keyup":
            return function(event) {
              var _a2, _b;
              handler === null || handler === void 0 ? void 0 : handler(event);
              (_b = (_a2 = _this.props.popoverTargetProps) === null || _a2 === void 0 ? void 0 : _a2.onKeyUp) === null || _b === void 0 ? void 0 : _b.call(_a2, event);
            };
        }
      };
      _this.handleTargetKeyDown = function(event) {
        if (event.key === "ArrowUp" || event.key === "ArrowDown") {
          event.preventDefault();
          _this.setState({ isOpen: true });
        } else if (utils_exports.isKeyboardClick(event)) {
          _this.setState({ isOpen: true });
        }
      };
      _this.handleItemSelect = function(item, event) {
        var _a2, _b;
        var target = event === null || event === void 0 ? void 0 : event.target;
        var menuItem = target === null || target === void 0 ? void 0 : target.closest(".".concat(classes_exports.MENU_ITEM));
        var menuItemDismiss = menuItem === null || menuItem === void 0 ? void 0 : menuItem.matches(".".concat(classes_exports.POPOVER_DISMISS));
        var shouldDismiss = menuItemDismiss !== null && menuItemDismiss !== void 0 ? menuItemDismiss : true;
        _this.setState({ isOpen: !shouldDismiss });
        (_b = (_a2 = _this.props).onItemSelect) === null || _b === void 0 ? void 0 : _b.call(_a2, item, event);
      };
      _this.handlePopoverInteraction = function(isOpen, event) {
        var _a2, _b;
        _this.setState({ isOpen });
        (_b = (_a2 = _this.props.popoverProps) === null || _a2 === void 0 ? void 0 : _a2.onInteraction) === null || _b === void 0 ? void 0 : _b.call(_a2, isOpen, event);
      };
      _this.handlePopoverOpening = function(node) {
        var _a2, _b, _c;
        _this.previousFocusedElement = (_a2 = utils_exports.getActiveElement(_this.inputElement)) !== null && _a2 !== void 0 ? _a2 : void 0;
        if (_this.props.resetOnClose) {
          _this.resetQuery();
        }
        (_c = (_b = _this.props.popoverProps) === null || _b === void 0 ? void 0 : _b.onOpening) === null || _c === void 0 ? void 0 : _c.call(_b, node);
      };
      _this.handlePopoverOpened = function(node) {
        var _a2, _b;
        if (_this.queryList != null) {
          _this.queryList.scrollActiveItemIntoView();
        }
        _this.requestAnimationFrame(function() {
          var _a3;
          var _b2 = _this.props.inputProps, inputProps = _b2 === void 0 ? {} : _b2;
          if (inputProps.autoFocus !== false) {
            (_a3 = _this.inputElement) === null || _a3 === void 0 ? void 0 : _a3.focus();
          }
        });
        (_b = (_a2 = _this.props.popoverProps) === null || _a2 === void 0 ? void 0 : _a2.onOpened) === null || _b === void 0 ? void 0 : _b.call(_a2, node);
      };
      _this.handlePopoverClosing = function(node) {
        var _a2, _b;
        _this.requestAnimationFrame(function() {
          if (_this.previousFocusedElement !== void 0) {
            _this.previousFocusedElement.focus();
            _this.previousFocusedElement = void 0;
          }
        });
        (_b = (_a2 = _this.props.popoverProps) === null || _a2 === void 0 ? void 0 : _a2.onClosing) === null || _b === void 0 ? void 0 : _b.call(_a2, node);
      };
      _this.resetQuery = function() {
        return _this.queryList && _this.queryList.setQuery("", true);
      };
      return _this;
    }
    Select2.ofType = function() {
      return Select2;
    };
    Select2.prototype.render = function() {
      var _a = this.props, filterable = _a.filterable, inputProps = _a.inputProps, menuProps = _a.menuProps, popoverProps = _a.popoverProps, restProps = __rest(_a, ["filterable", "inputProps", "menuProps", "popoverProps"]);
      return React5.createElement(QueryList, __assign({}, restProps, { menuProps: __assign(__assign({ "aria-label": "selectable options" }, menuProps), { id: this.listboxId }), onItemSelect: this.handleItemSelect, ref: this.handleQueryListRef, renderer: this.renderQueryList }));
    };
    Select2.prototype.componentDidUpdate = function(prevProps, prevState) {
      var _a, _b, _c, _d, _e;
      if (((_a = prevProps.inputProps) === null || _a === void 0 ? void 0 : _a.inputRef) !== ((_b = this.props.inputProps) === null || _b === void 0 ? void 0 : _b.inputRef)) {
        setRef((_c = prevProps.inputProps) === null || _c === void 0 ? void 0 : _c.inputRef, null);
        this.handleInputRef = refHandler(this, "inputElement", (_d = this.props.inputProps) === null || _d === void 0 ? void 0 : _d.inputRef);
        setRef((_e = this.props.inputProps) === null || _e === void 0 ? void 0 : _e.inputRef, this.inputElement);
      }
      if (this.state.isOpen && !prevState.isOpen && this.queryList != null) {
        this.queryList.scrollActiveItemIntoView();
      }
    };
    Select2.prototype.maybeRenderClearButton = function(query) {
      return query.length > 0 ? React5.createElement(Button, { "aria-label": "Clear filter query", icon: React5.createElement(Cross, null), onClick: this.resetQuery, title: "Clear filter query", variant: "minimal" }) : void 0;
    };
    Select2.displayName = "".concat(DISPLAYNAME_PREFIX, ".Select");
    return Select2;
  }(AbstractPureComponent)
);

// node_modules/@blueprintjs/select/lib/esm/components/multi-select/multiSelect.js
var import_classnames2 = __toESM(require_classnames());
var React6 = __toESM(require_react());
var MultiSelect = (
  /** @class */
  function(_super) {
    __extends(MultiSelect2, _super);
    function MultiSelect2() {
      var _a;
      var _this = _super.apply(this, arguments) || this;
      _this.listboxId = utils_exports.uniqueId("listbox");
      _this.state = {
        isOpen: _this.props.popoverProps && _this.props.popoverProps.isOpen || false
      };
      _this.input = null;
      _this.queryList = null;
      _this.refHandlers = {
        input: refHandler(_this, "input", (_a = _this.props.tagInputProps) === null || _a === void 0 ? void 0 : _a.inputRef),
        popover: React6.createRef(),
        queryList: function(ref) {
          return _this.queryList = ref;
        }
      };
      _this.renderQueryList = function(listProps) {
        var _a2;
        var _b = _this.props, disabled = _b.disabled, _c = _b.popoverContentProps, popoverContentProps = _c === void 0 ? {} : _c, _d = _b.popoverProps, popoverProps = _d === void 0 ? {} : _d;
        var handleKeyDown = listProps.handleKeyDown, handleKeyUp = listProps.handleKeyUp;
        return React6.createElement(Popover, __assign({ autoFocus: false, canEscapeKeyClose: true, disabled, enforceFocus: false, isOpen: _this.state.isOpen, placement: popoverProps.position || popoverProps.placement ? void 0 : "bottom-start" }, popoverProps, { className: (0, import_classnames2.default)(listProps.className, popoverProps.className), content: React6.createElement(
          "div",
          __assign({
            // In the case where customTarget is supplied and the TagInput is rendered within the Popover,
            // without matchTargetWidth there is no width defined in any of TagInput's
            // grandparents when it's rendered through usePortal, so it will never flex-wrap
            // and infinitely grow horizontally. To address this, if there is no width guidance
            // from matchTargetWidth, explicitly set a default width to so Tags will flex-wrap.
            className: _this.props.customTarget != null && !((_a2 = _this.props.popoverProps) === null || _a2 === void 0 ? void 0 : _a2.matchTargetWidth) ? classes_exports2.MULTISELECT_POPOVER_DEFAULT_WIDTH : void 0
          }, popoverContentProps, { onKeyDown: handleKeyDown, onKeyUp: handleKeyUp }),
          _this.props.customTarget != null && _this.getTagInput(listProps, (0, import_classnames2.default)(classes_exports.FILL, classes_exports2.MULTISELECT_POPOVER_TAG_INPUT_MARGIN)),
          listProps.itemList
        ), interactionKind: "click", onInteraction: _this.handlePopoverInteraction, onOpened: _this.handlePopoverOpened, popoverClassName: (0, import_classnames2.default)(classes_exports2.MULTISELECT_POPOVER, popoverProps.popoverClassName), popupKind: PopupKind.LISTBOX, ref: mergeRefs(_this.refHandlers.popover, _this.props.popoverRef), renderTarget: _this.getPopoverTargetRenderer(listProps, _this.state.isOpen) }));
      };
      _this.getPopoverTargetRenderer = function(listProps, isOpen) {
        return function(_a2) {
          var _b;
          var _isOpen = _a2.isOpen, ref = _a2.ref, targetProps = __rest(_a2, ["isOpen", "ref"]);
          var _c = _this.props, disabled = _c.disabled, fill = _c.fill, selectedItems = _c.selectedItems, _d = _c.popoverProps, popoverProps = _d === void 0 ? {} : _d, _e = _c.popoverTargetProps, popoverTargetProps = _e === void 0 ? {} : _e;
          var handleKeyDown = listProps.handleKeyDown, handleKeyUp = listProps.handleKeyUp;
          var _f = popoverProps.targetTagName, targetTagName = _f === void 0 ? "div" : _f;
          return React6.createElement(targetTagName, __assign(__assign(__assign({ "aria-autocomplete": "list", "aria-controls": _this.listboxId }, popoverTargetProps), targetProps), {
            "aria-disabled": disabled,
            "aria-expanded": isOpen,
            // Note that we must set FILL here in addition to TagInput to get the wrapper element to full width
            className: (0, import_classnames2.default)(targetProps.className, popoverTargetProps.className, (_b = {}, _b[classes_exports.FILL] = fill, _b)),
            // Normally, Popover would also need to attach its own `onKeyDown` handler via `targetProps`,
            // but in our case we fully manage that interaction and listen for key events to open/close
            // the popover, so we elide it from the DOM.
            onKeyDown: _this.getTagInputKeyDownHandler(handleKeyDown),
            onKeyUp: _this.getTagInputKeyUpHandler(handleKeyUp),
            ref,
            role: "combobox"
          }), _this.props.customTarget != null ? _this.props.customTarget(selectedItems, isOpen) : _this.getTagInput(listProps));
        };
      };
      _this.getTagInput = function(listProps, className) {
        var _a2;
        var _b = _this.props, disabled = _b.disabled, fill = _b.fill, onClear = _b.onClear, placeholder = _b.placeholder, selectedItems = _b.selectedItems, _c = _b.tagInputProps, tagInputProps = _c === void 0 ? {} : _c;
        var maybeClearButton = onClear !== void 0 && selectedItems.length > 0 ? (
          // use both aria-label and title a11y attributes here, for screen readers
          // and mouseover interactions respectively
          React6.createElement(Button, { "aria-label": "Clear selected items", disabled, icon: React6.createElement(Cross, null), onClick: _this.handleClearButtonClick, title: "Clear selected items", variant: "minimal" })
        ) : void 0;
        var inputProps = __assign(__assign({}, tagInputProps.inputProps), { className: (0, import_classnames2.default)((_a2 = tagInputProps.inputProps) === null || _a2 === void 0 ? void 0 : _a2.className, classes_exports2.MULTISELECT_TAG_INPUT_INPUT) });
        return React6.createElement(TagInput, __assign({ placeholder, rightElement: maybeClearButton }, tagInputProps, { className: (0, import_classnames2.default)(className, classes_exports2.MULTISELECT, tagInputProps.className), disabled, fill, inputRef: _this.refHandlers.input, inputProps, inputValue: listProps.query, onAdd: _this.getTagInputAddHandler(listProps), onInputChange: listProps.handleQueryChange, onRemove: _this.handleTagRemove, values: selectedItems.map(_this.props.tagRenderer) }));
      };
      _this.handleItemSelect = function(item, evt) {
        var _a2, _b, _c;
        if (_this.input != null) {
          _this.input.focus();
        }
        (_b = (_a2 = _this.props).onItemSelect) === null || _b === void 0 ? void 0 : _b.call(_a2, item, evt);
        (_c = _this.refHandlers.popover.current) === null || _c === void 0 ? void 0 : _c.reposition();
      };
      _this.handleQueryChange = function(query, evt) {
        var _a2, _b;
        _this.setState({ isOpen: query.length > 0 || _this.props.customTarget == null && !_this.props.openOnKeyDown });
        (_b = (_a2 = _this.props).onQueryChange) === null || _b === void 0 ? void 0 : _b.call(_a2, query, evt);
      };
      _this.handlePopoverInteraction = function(nextOpenState, evt) {
        var _a2, _b;
        if (_this.props.customTarget != null) {
          _this.setState({ isOpen: nextOpenState });
          (_b = (_a2 = _this.props.popoverProps) === null || _a2 === void 0 ? void 0 : _a2.onInteraction) === null || _b === void 0 ? void 0 : _b.call(_a2, nextOpenState, evt);
          return;
        }
        _this.requestAnimationFrame(function() {
          var _a3, _b2;
          var isInputFocused = _this.input === utils_exports.getActiveElement(_this.input);
          if (_this.input != null && !isInputFocused) {
            _this.setState({ isOpen: false });
          } else if (!_this.props.openOnKeyDown) {
            _this.setState({ isOpen: true });
          }
          (_b2 = (_a3 = _this.props.popoverProps) === null || _a3 === void 0 ? void 0 : _a3.onInteraction) === null || _b2 === void 0 ? void 0 : _b2.call(_a3, nextOpenState, evt);
        });
      };
      _this.handlePopoverOpened = function(node) {
        var _a2, _b, _c, _d;
        if (_this.queryList != null) {
          _this.queryList.scrollActiveItemIntoView();
        }
        var hasCustomTarget = _this.props.customTarget != null;
        if (hasCustomTarget && _this.input != null) {
          var shouldAutofocus = ((_b = (_a2 = _this.props.tagInputProps) === null || _a2 === void 0 ? void 0 : _a2.inputProps) === null || _b === void 0 ? void 0 : _b.autoFocus) !== false;
          if (shouldAutofocus) {
            _this.input.focus();
          }
        }
        (_d = (_c = _this.props.popoverProps) === null || _c === void 0 ? void 0 : _c.onOpened) === null || _d === void 0 ? void 0 : _d.call(_c, node);
      };
      _this.handleTagRemove = function(tag, index) {
        var _a2, _b;
        var _c = _this.props, selectedItems = _c.selectedItems, onRemove = _c.onRemove, tagInputProps = _c.tagInputProps;
        onRemove === null || onRemove === void 0 ? void 0 : onRemove(selectedItems[index], index);
        (_a2 = tagInputProps === null || tagInputProps === void 0 ? void 0 : tagInputProps.onRemove) === null || _a2 === void 0 ? void 0 : _a2.call(tagInputProps, tag, index);
        (_b = _this.refHandlers.popover.current) === null || _b === void 0 ? void 0 : _b.reposition();
      };
      _this.getTagInputAddHandler = function(listProps) {
        return function(values, method) {
          if (method === "paste") {
            listProps.handlePaste(values);
          }
        };
      };
      _this.getTagInputKeyDownHandler = function(handleQueryListKeyDown) {
        return function(e3) {
          var _a2, _b, _c;
          if (e3.key === "Escape" || e3.key === "Tab") {
            if (e3.key === "Escape") {
              (_a2 = _this.input) === null || _a2 === void 0 ? void 0 : _a2.blur();
            }
            _this.setState({ isOpen: false });
          } else if (!(e3.key === "Backspace" || e3.key === "ArrowLeft" || e3.key === "ArrowRight")) {
            if (_this.props.customTarget != null) {
              if (e3.key === " ") {
                e3.preventDefault();
                _this.setState({ isOpen: true });
              } else if (e3.key === "Enter") {
                _this.setState({ isOpen: true });
              }
            } else {
              _this.setState({ isOpen: true });
            }
          }
          var isTargetingTagRemoveButton = e3.target.closest(".".concat(classes_exports.TAG_REMOVE)) != null;
          if (_this.state.isOpen && !isTargetingTagRemoveButton) {
            handleQueryListKeyDown === null || handleQueryListKeyDown === void 0 ? void 0 : handleQueryListKeyDown(e3);
          }
          (_c = (_b = _this.props.popoverTargetProps) === null || _b === void 0 ? void 0 : _b.onKeyDown) === null || _c === void 0 ? void 0 : _c.call(_b, e3);
        };
      };
      _this.getTagInputKeyUpHandler = function(handleQueryListKeyUp) {
        return function(e3) {
          var _a2, _b;
          var isTargetingInput = e3.target.classList.contains(classes_exports2.MULTISELECT_TAG_INPUT_INPUT);
          if (_this.state.isOpen && isTargetingInput) {
            handleQueryListKeyUp === null || handleQueryListKeyUp === void 0 ? void 0 : handleQueryListKeyUp(e3);
          }
          (_b = (_a2 = _this.props.popoverTargetProps) === null || _a2 === void 0 ? void 0 : _a2.onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a2, e3);
        };
      };
      _this.handleClearButtonClick = function() {
        var _a2, _b, _c;
        (_b = (_a2 = _this.props).onClear) === null || _b === void 0 ? void 0 : _b.call(_a2);
        (_c = _this.refHandlers.popover.current) === null || _c === void 0 ? void 0 : _c.reposition();
      };
      return _this;
    }
    MultiSelect2.ofType = function() {
      return MultiSelect2;
    };
    MultiSelect2.prototype.componentDidUpdate = function(prevProps) {
      var _a, _b, _c, _d, _e;
      if (((_a = prevProps.tagInputProps) === null || _a === void 0 ? void 0 : _a.inputRef) !== ((_b = this.props.tagInputProps) === null || _b === void 0 ? void 0 : _b.inputRef)) {
        setRef((_c = prevProps.tagInputProps) === null || _c === void 0 ? void 0 : _c.inputRef, null);
        this.refHandlers.input = refHandler(this, "input", (_d = this.props.tagInputProps) === null || _d === void 0 ? void 0 : _d.inputRef);
        setRef((_e = this.props.tagInputProps) === null || _e === void 0 ? void 0 : _e.inputRef, this.input);
      }
      if (prevProps.onClear === void 0 && this.props.onClear !== void 0 || prevProps.onClear !== void 0 && this.props.onClear === void 0) {
        this.forceUpdate();
      }
    };
    MultiSelect2.prototype.render = function() {
      var _a = this.props, menuProps = _a.menuProps, openOnKeyDown = _a.openOnKeyDown, popoverProps = _a.popoverProps, tagInputProps = _a.tagInputProps, customTarget = _a.customTarget, restProps = __rest(_a, ["menuProps", "openOnKeyDown", "popoverProps", "tagInputProps", "customTarget"]);
      return React6.createElement(QueryList, __assign({}, restProps, { menuProps: __assign(__assign({ "aria-label": "selectable options" }, menuProps), { "aria-multiselectable": true, id: this.listboxId }), onItemSelect: this.handleItemSelect, onQueryChange: this.handleQueryChange, ref: this.refHandlers.queryList, renderer: this.renderQueryList }));
    };
    MultiSelect2.displayName = "".concat(DISPLAYNAME_PREFIX, ".MultiSelect");
    MultiSelect2.defaultProps = {
      disabled: false,
      fill: false,
      placeholder: "Search..."
    };
    return MultiSelect2;
  }(AbstractPureComponent)
);

// node_modules/@blueprintjs/select/lib/esm/components/omnibar/omnibar.js
var import_classnames3 = __toESM(require_classnames());
var React7 = __toESM(require_react());
var Omnibar = (
  /** @class */
  function(_super) {
    __extends(Omnibar2, _super);
    function Omnibar2() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.renderQueryList = function(listProps) {
        var _a = _this.props, _b = _a.inputProps, inputProps = _b === void 0 ? {} : _b, isOpen = _a.isOpen, _c = _a.overlayProps, overlayProps = _c === void 0 ? {} : _c;
        var handleKeyDown = listProps.handleKeyDown, handleKeyUp = listProps.handleKeyUp;
        var handlers = isOpen ? { onKeyDown: handleKeyDown, onKeyUp: handleKeyUp } : {};
        return React7.createElement(
          Overlay2,
          __assign({ hasBackdrop: true }, overlayProps, { isOpen, className: (0, import_classnames3.default)(classes_exports2.OMNIBAR_OVERLAY, overlayProps.className), onClose: _this.handleOverlayClose }),
          React7.createElement(
            "div",
            __assign({ className: (0, import_classnames3.default)(classes_exports2.OMNIBAR, listProps.className) }, handlers),
            React7.createElement(InputGroup, __assign({ autoFocus: true, leftIcon: React7.createElement(Search, null), placeholder: "Search...", size: "large" }, inputProps, { onChange: listProps.handleQueryChange, value: listProps.query })),
            listProps.itemList
          )
        );
      };
      _this.handleOverlayClose = function(event) {
        var _a, _b, _c, _d;
        (_b = (_a = _this.props.overlayProps) === null || _a === void 0 ? void 0 : _a.onClose) === null || _b === void 0 ? void 0 : _b.call(_a, event);
        (_d = (_c = _this.props).onClose) === null || _d === void 0 ? void 0 : _d.call(_c, event);
      };
      return _this;
    }
    Omnibar2.ofType = function() {
      return Omnibar2;
    };
    Omnibar2.prototype.render = function() {
      var _a = this.props, isOpen = _a.isOpen, inputProps = _a.inputProps, overlayProps = _a.overlayProps, restProps = __rest(_a, ["isOpen", "inputProps", "overlayProps"]);
      var initialContent = "initialContent" in this.props ? this.props.initialContent : null;
      return React7.createElement(QueryList, __assign({}, restProps, {
        // Omnibar typically does not keep track of and/or show its selection state like other
        // select components, so it's more of a menu than a listbox. This means that users should return
        // MenuItems with roleStructure="menuitem" (the default value) in `props.itemRenderer`.
        menuProps: { role: "menu" },
        initialContent,
        renderer: this.renderQueryList
      }));
    };
    Omnibar2.displayName = "".concat(DISPLAYNAME_PREFIX, ".Omnibar");
    return Omnibar2;
  }(React7.PureComponent)
);

// node_modules/@blueprintjs/select/lib/esm/components/suggest/suggest.js
var import_classnames4 = __toESM(require_classnames());
var React8 = __toESM(require_react());
var Suggest = (
  /** @class */
  function(_super) {
    __extends(Suggest2, _super);
    function Suggest2() {
      var _a;
      var _this = _super.apply(this, arguments) || this;
      _this.state = {
        isOpen: _this.props.popoverProps != null && _this.props.popoverProps.isOpen || false,
        selectedItem: _this.getInitialSelectedItem()
      };
      _this.inputElement = null;
      _this.queryList = null;
      _this.handleInputRef = refHandler(_this, "inputElement", (_a = _this.props.inputProps) === null || _a === void 0 ? void 0 : _a.inputRef);
      _this.handleQueryListRef = function(ref) {
        return _this.queryList = ref;
      };
      _this.listboxId = utils_exports.uniqueId("listbox");
      _this.renderQueryList = function(listProps) {
        var _a2 = _this.props, _b = _a2.popoverContentProps, popoverContentProps = _b === void 0 ? {} : _b, _c = _a2.popoverProps, popoverProps = _c === void 0 ? {} : _c, popoverRef = _a2.popoverRef;
        var isOpen = _this.state.isOpen;
        var handleKeyDown = listProps.handleKeyDown, handleKeyUp = listProps.handleKeyUp;
        return React8.createElement(Popover, __assign({ autoFocus: false, enforceFocus: false, isOpen, placement: popoverProps.position || popoverProps.placement ? void 0 : "bottom-start" }, popoverProps, { className: (0, import_classnames4.default)(listProps.className, popoverProps.className), content: React8.createElement("div", __assign({}, popoverContentProps, { onKeyDown: handleKeyDown, onKeyUp: handleKeyUp }), listProps.itemList), interactionKind: "click", onInteraction: _this.handlePopoverInteraction, onOpened: _this.handlePopoverOpened, onOpening: _this.handlePopoverOpening, popoverClassName: (0, import_classnames4.default)(classes_exports2.SUGGEST_POPOVER, popoverProps.popoverClassName), popupKind: PopupKind.LISTBOX, ref: popoverRef, renderTarget: _this.getPopoverTargetRenderer(listProps, isOpen) }));
      };
      _this.getPopoverTargetRenderer = function(listProps, isOpen) {
        return function(_a2) {
          var _isOpen = _a2.isOpen, ref = _a2.ref, targetProps = __rest(_a2, ["isOpen", "ref"]);
          var _b = _this.props, disabled = _b.disabled, fill = _b.fill, _c = _b.inputProps, inputProps = _c === void 0 ? {} : _c, inputValueRenderer = _b.inputValueRenderer, _d = _b.popoverProps, popoverProps = _d === void 0 ? {} : _d, resetOnClose = _b.resetOnClose;
          var selectedItem = _this.state.selectedItem;
          var handleKeyDown = listProps.handleKeyDown, handleKeyUp = listProps.handleKeyUp;
          var selectedItemText = selectedItem == null ? "" : inputValueRenderer(selectedItem);
          var _e = inputProps.autoComplete, autoComplete = _e === void 0 ? "off" : _e, _f = inputProps.placeholder, placeholder = _f === void 0 ? "Search..." : _f;
          var inputPlaceholder = isOpen && selectedItemText ? selectedItemText : placeholder;
          var inputValue = isOpen ? listProps.query : selectedItemText === "" ? resetOnClose ? "" : listProps.query : selectedItemText;
          return React8.createElement(InputGroup, __assign({ "aria-controls": _this.listboxId, autoComplete, disabled, tagName: popoverProps.targetTagName }, targetProps, inputProps, { "aria-autocomplete": "list", "aria-expanded": isOpen, className: (0, import_classnames4.default)(targetProps.className, inputProps.className), fill, inputRef: mergeRefs(_this.handleInputRef, ref), onChange: listProps.handleQueryChange, onFocus: _this.handleInputFocus, onKeyDown: _this.getTargetKeyDownHandler(handleKeyDown), onKeyUp: _this.getTargetKeyUpHandler(handleKeyUp), placeholder: inputPlaceholder, role: "combobox", value: inputValue }));
        };
      };
      _this.selectText = function() {
        _this.requestAnimationFrame(function() {
          var _a2;
          (_a2 = _this.inputElement) === null || _a2 === void 0 ? void 0 : _a2.setSelectionRange(0, _this.inputElement.value.length);
        });
      };
      _this.handleInputFocus = function(event) {
        var _a2, _b;
        _this.selectText();
        if (!_this.props.openOnKeyDown) {
          _this.setState({ isOpen: true });
        }
        (_b = (_a2 = _this.props.inputProps) === null || _a2 === void 0 ? void 0 : _a2.onFocus) === null || _b === void 0 ? void 0 : _b.call(_a2, event);
      };
      _this.handleItemSelect = function(item, event) {
        var _a2, _b, _c, _d;
        var nextOpenState;
        if (!_this.props.closeOnSelect) {
          (_a2 = _this.inputElement) === null || _a2 === void 0 ? void 0 : _a2.focus();
          _this.selectText();
          nextOpenState = true;
        } else {
          (_b = _this.inputElement) === null || _b === void 0 ? void 0 : _b.blur();
          nextOpenState = false;
        }
        if (_this.props.selectedItem === void 0) {
          _this.setState({
            isOpen: nextOpenState,
            selectedItem: item
          });
        } else {
          _this.setState({ isOpen: nextOpenState });
        }
        (_d = (_c = _this.props).onItemSelect) === null || _d === void 0 ? void 0 : _d.call(_c, item, event);
      };
      _this.handlePopoverInteraction = function(nextOpenState, event) {
        return _this.requestAnimationFrame(function() {
          var _a2, _b;
          var isInputFocused = _this.inputElement === utils_exports.getActiveElement(_this.inputElement);
          if (_this.inputElement != null && !isInputFocused) {
            _this.setState({ isOpen: false });
          }
          (_b = (_a2 = _this.props.popoverProps) === null || _a2 === void 0 ? void 0 : _a2.onInteraction) === null || _b === void 0 ? void 0 : _b.call(_a2, nextOpenState, event);
        });
      };
      _this.handlePopoverOpening = function(node) {
        var _a2, _b;
        if (_this.props.resetOnClose && _this.queryList) {
          _this.queryList.setQuery("", true);
        }
        (_b = (_a2 = _this.props.popoverProps) === null || _a2 === void 0 ? void 0 : _a2.onOpening) === null || _b === void 0 ? void 0 : _b.call(_a2, node);
      };
      _this.handlePopoverOpened = function(node) {
        var _a2, _b;
        if (_this.queryList != null) {
          _this.queryList.scrollActiveItemIntoView();
        }
        (_b = (_a2 = _this.props.popoverProps) === null || _a2 === void 0 ? void 0 : _a2.onOpened) === null || _b === void 0 ? void 0 : _b.call(_a2, node);
      };
      _this.getTargetKeyDownHandler = function(handleQueryListKeyDown) {
        return function(e3) {
          var _a2, _b, _c;
          if (e3.key === "Escape" || e3.key === "Tab") {
            if (e3.key === "Escape") {
              (_a2 = _this.inputElement) === null || _a2 === void 0 ? void 0 : _a2.blur();
            }
            _this.setState({ isOpen: false });
          } else if (_this.props.openOnKeyDown && e3.key !== "Backspace" && e3.key !== "ArrowLeft" && e3.key !== "ArrowRight") {
            _this.setState({ isOpen: true });
          }
          if (_this.state.isOpen) {
            handleQueryListKeyDown === null || handleQueryListKeyDown === void 0 ? void 0 : handleQueryListKeyDown(e3);
          }
          (_c = (_b = _this.props.inputProps) === null || _b === void 0 ? void 0 : _b.onKeyDown) === null || _c === void 0 ? void 0 : _c.call(_b, e3);
        };
      };
      _this.getTargetKeyUpHandler = function(handleQueryListKeyUp) {
        return function(evt) {
          var _a2, _b;
          if (_this.state.isOpen) {
            handleQueryListKeyUp === null || handleQueryListKeyUp === void 0 ? void 0 : handleQueryListKeyUp(evt);
          }
          (_b = (_a2 = _this.props.inputProps) === null || _a2 === void 0 ? void 0 : _a2.onKeyUp) === null || _b === void 0 ? void 0 : _b.call(_a2, evt);
        };
      };
      return _this;
    }
    Suggest2.ofType = function() {
      return Suggest2;
    };
    Suggest2.prototype.render = function() {
      var _a;
      var _b = this.props, disabled = _b.disabled, inputProps = _b.inputProps, menuProps = _b.menuProps, popoverProps = _b.popoverProps, restProps = __rest(_b, ["disabled", "inputProps", "menuProps", "popoverProps"]);
      return React8.createElement(QueryList, __assign({}, restProps, { menuProps: __assign(__assign({ "aria-label": "selectable options" }, menuProps), { id: this.listboxId }), initialActiveItem: (_a = this.props.selectedItem) !== null && _a !== void 0 ? _a : void 0, onItemSelect: this.handleItemSelect, ref: this.handleQueryListRef, renderer: this.renderQueryList }));
    };
    Suggest2.prototype.componentDidUpdate = function(prevProps, prevState) {
      var _this = this;
      var _a, _b, _c, _d, _e, _f, _g;
      if (((_a = prevProps.inputProps) === null || _a === void 0 ? void 0 : _a.inputRef) !== ((_b = this.props.inputProps) === null || _b === void 0 ? void 0 : _b.inputRef)) {
        setRef((_c = prevProps.inputProps) === null || _c === void 0 ? void 0 : _c.inputRef, null);
        this.handleInputRef = refHandler(this, "inputElement", (_d = this.props.inputProps) === null || _d === void 0 ? void 0 : _d.inputRef);
        setRef((_e = this.props.inputProps) === null || _e === void 0 ? void 0 : _e.inputRef, this.inputElement);
      }
      if (this.props.selectedItem !== void 0 && this.props.selectedItem !== this.state.selectedItem) {
        this.setState({ selectedItem: this.props.selectedItem });
      }
      if (this.state.isOpen === false && prevState.isOpen === true) {
        var timeout = (_g = (_f = this.props.popoverProps) === null || _f === void 0 ? void 0 : _f.transitionDuration) !== null && _g !== void 0 ? _g : Popover.defaultProps.transitionDuration;
        setTimeout(function() {
          return _this.maybeResetActiveItemToSelectedItem();
        }, timeout);
      }
      if (this.state.isOpen && !prevState.isOpen && this.queryList != null) {
        this.queryList.scrollActiveItemIntoView();
      }
    };
    Suggest2.prototype.getInitialSelectedItem = function() {
      if (this.props.selectedItem !== void 0) {
        return this.props.selectedItem;
      } else if (this.props.defaultSelectedItem !== void 0) {
        return this.props.defaultSelectedItem;
      } else {
        return null;
      }
    };
    Suggest2.prototype.maybeResetActiveItemToSelectedItem = function() {
      var _a;
      var shouldResetActiveItemToSelectedItem = this.props.activeItem === void 0 && this.state.selectedItem !== null && !this.props.resetOnSelect;
      if (this.queryList !== null && shouldResetActiveItemToSelectedItem) {
        this.queryList.setActiveItem((_a = this.props.selectedItem) !== null && _a !== void 0 ? _a : this.state.selectedItem);
      }
    };
    Suggest2.displayName = "".concat(DISPLAYNAME_PREFIX, ".Suggest");
    Suggest2.defaultProps = {
      closeOnSelect: true,
      fill: false,
      openOnKeyDown: false,
      resetOnClose: false
    };
    return Suggest2;
  }(AbstractPureComponent)
);

export {
  SWRGlobalState,
  UNDEFINED,
  isUndefined,
  isFunction,
  createCacheHelper,
  useIsomorphicLayoutEffect,
  serialize,
  cache,
  INFINITE_PREFIX,
  withMiddleware,
  useSWR,
  require_cjs,
  ColorPicker,
  color_picker_default,
  Select
};
//# sourceMappingURL=chunk-T32FJGIG.js.map
