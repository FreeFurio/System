import t from"konva";const a={warm:t=>a=>{const n=a.data;t=Math.max(0,Math.min(1,t));for(let h=0;h<n.length;h+=4){n[h]=Math.min(n[h]+30*t,255),n[h+1]=Math.min(n[h+1]+15*t,255)}return a},cold:t=>a=>{const n=a.data;t=Math.max(0,Math.min(1,t));for(let h=0;h<n.length;h+=4){n[h]=Math.min(n[h]-15*t,255),n[h+1]=Math.min(n[h+1]-10*t,255),n[h+2]=Math.min(n[h+2]+15*t,255)}return a},natural:t=>a=>{const n=a.data;t=Math.max(0,Math.min(1,t));for(let h=0;h<n.length;h+=4){n[h]=Math.min(n[h]*(1+.1*t),255),n[h+1]=Math.min(n[h+1]*(1+.1*t),255),n[h+2]=Math.min(n[h+2]*(1+.1*t),255);const a=(n[h]+n[h+1]+n[h+2])/3;n[h]=Math.min((n[h]-a)*(1+.2*t)+a,255),n[h+1]=Math.min((n[h+1]-a)*(1+.2*t)+a,255),n[h+2]=Math.min((n[h+2]-a)*(1+.2*t)+a,255)}return a},temperature:t=>a=>{const n=a.data;t=Math.max(-1,Math.min(1,t));for(let h=0;h<n.length;h+=4){const a=n[h],e=(n[h+1],n[h+2]);n[h]=Math.min(Math.max(a+15*t,0),255),n[h+2]=Math.min(Math.max(e-15*t,0),255)}return a},contrast:t=>a=>{const n=a.data,h=100*(t=Math.max(-1,Math.min(1,t))),e=259*(h+255)/(255*(259-h));for(let t=0;t<n.length;t+=4){n[t]=Math.min(Math.max(e*(n[t]-128)+128,0),255),n[t+1]=Math.min(Math.max(e*(n[t+1]-128)+128,0),255),n[t+2]=Math.min(Math.max(e*(n[t+2]-128)+128,0),255)}return a},shadows:t=>a=>{const n=a.data;t=Math.max(-1,Math.min(1,t));for(let h=0;h<n.length;h+=4){const a=(n[h]+n[h+1]+n[h+2])/3;if(a<128){const e=1+t*(1-a/128)*2;n[h]=Math.min(Math.max(n[h]*e,0),255),n[h+1]=Math.min(Math.max(n[h+1]*e,0),255),n[h+2]=Math.min(Math.max(n[h+2]*e,0),255)}}return a},white:t=>a=>{const n=a.data;t=Math.max(-1,Math.min(1,t));for(let h=0;h<n.length;h+=4){const a=n[h],e=n[h+1],i=n[h+2],m=(a+e+i)/3;if(m>128){const M=1+t*((m-128)/127);n[h]=Math.min(Math.max(a*M,0),255),n[h+1]=Math.min(Math.max(e*M,0),255),n[h+2]=Math.min(Math.max(i*M,0),255)}}return a},black:t=>a=>{const n=a.data;t=Math.max(-1,Math.min(1,t));for(let h=0;h<n.length;h+=4){const a=n[h],e=n[h+1],i=n[h+2],m=(a+e+i)/3;if(m<128){const M=1+t*((128-m)/128);n[h]=Math.min(Math.max(a*M,0),255),n[h+1]=Math.min(Math.max(e*M,0),255),n[h+2]=Math.min(Math.max(i*M,0),255)}}return a},vibrance:t=>a=>{const n=a.data;t=Math.max(-1,Math.min(1,t));for(let h=0;h<n.length;h+=4){const a=n[h],e=n[h+1],i=n[h+2],m=Math.max(a,e,i),M=t<0?(1-(0===m?0:(m-(a+e+i)/3)/m))*t*1.5:.5*t;n[h]=Math.min(Math.max(a-(m-a)*M,0),255),n[h+1]=Math.min(Math.max(e-(m-e)*M,0),255),n[h+2]=Math.min(Math.max(i-(m-i)*M,0),255)}return a},saturation:t=>a=>{const n=a.data;t=Math.max(-1,Math.min(1,t));for(let h=0;h<n.length;h+=4){const a=n[h],e=n[h+1],i=n[h+2],m=.2126*a+.7152*e+.0722*i;n[h]=Math.min(Math.max(m+(a-m)*(1+t),0),255),n[h+1]=Math.min(Math.max(m+(e-m)*(1+t),0),255),n[h+2]=Math.min(Math.max(m+(i-m)*(1+t),0),255)}return a}};export function applyFilter(n,h){var e;const i={filters:[]},m={};h.brightnessEnabled&&(i.filters.push(t.Filters.Brighten),i.brightness=h.brightness),h.blurEnabled&&(i.filters.push(t.Filters.Blur),i.blurRadius=h.blurRadius,"text"===h.type&&h.lineHeight<1&&(m.offset=h.fontSize)),h.sepiaEnabled&&i.filters.push(t.Filters.Sepia),h.grayscaleEnabled&&i.filters.push(t.Filters.Grayscale),h.filters.forEach((t,n)=>{const h=a[n];h&&i.filters.push(h(t.intensity))}),n.setAttrs(i),i.filters.length?n.cache(Object.assign(Object.assign({},m),{pixelRatio:h.store._elementsPixelRatio})):n.clearCache(),null===(e=n.getLayer())||void 0===e||e.batchDraw()}