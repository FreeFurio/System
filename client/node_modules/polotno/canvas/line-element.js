import t from"react";import{observer as e}from"mobx-react-lite";import{Group as a,Line as o,Rect as i,Circle as n}from"react-konva";import{useColor as r}from"./use-color.js";import{Portal as s}from"react-konva-utils";import{useAnchorSnap as h}from"./use-transformer-snap.js";import{isTouchDevice as l}from"../utils/screen.js";export function getMiddlePoints(t){const{x:e,y:a,width:o,height:i,rotation:n}=t.a,r=n*Math.PI/180,s={x:e+i/2*Math.cos(r+Math.PI/2),y:a+i/2*Math.sin(r+Math.PI/2)};return{middleLeft:s,middleRight:{x:s.x+o*Math.cos(r),y:s.y+o*Math.sin(r)}}}export function getLinePositionFromMiddlePoints(t,e,a){const o=Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2)),i=Math.atan2(e.y-t.y,e.x-t.x),n=180*i/Math.PI;return{x:t.x+Math.cos(i-Math.PI/2)*a/2,y:t.y+Math.sin(i-Math.PI/2)*a/2,width:o,height:a,rotation:n}}const g=(t,e)=>({offsetX:5/t,offsetY:5/t,width:10/t,height:10/t,fill:"white",stroke:"rgb(0, 161, 255)",strokeWidth:2,strokeScaleEnabled:!1,draggable:!0,dragDistance:0,onMouseEnter:t=>{t.target.getStage().container().style.cursor="crosshair"},onMouseLeave:t=>{t.target.getStage().container().style.cursor=""},onDragStart:t=>{e.history.startTransaction()},onDragEnd:t=>{e.history.endTransaction()}}),c=e(({element:e,type:a})=>{const i=r(e,e.a.color,"fill"),s=r(e,e.a.color,"stroke"),h=Object.assign(Object.assign(Object.assign({strokeWidth:e.height,lineCap:"round",lineJoin:"round"},s),i),{opacity:e.a.opacity,hideInExport:!e.showInExport});return t.createElement(t.Fragment,null,"arrow"===a&&t.createElement(o,Object.assign({points:[3*e.height,2*-e.height,0,0,3*e.height,2*e.height]},h)),"triangle"===a&&t.createElement(o,Object.assign({points:[3*e.height,2*-e.height,0,0,3*e.height,2*e.height],closed:!0},h)),"bar"===a&&t.createElement(o,Object.assign({points:[0,2*-e.height,0,2*e.height],closed:!0},h)),"square"===a&&t.createElement(o,Object.assign({points:[0,2*-e.height,4*e.height,2*-e.height,4*e.height,2*e.height,0,2*e.height],closed:!0},h)),"circle"===a&&t.createElement(n,Object.assign({x:2*e.height,y:0,radius:2*e.height},h)))});export const LineElement=e(({element:e,store:n})=>{const d=t.useRef(null),m=t.useRef(null),x=t.useRef(null),y=e.selectable||"admin"===n.role,p=l(),f=n.selectedElements.indexOf(e)>=0&&1===n.selectedElements.length,E=n.selectedShapes.indexOf(e)>=0&&e.selectable,{middleLeft:u,middleRight:w}=getMiddlePoints(e);h(m,[d],[f]),h(x,[d],[f]);const b=r(e,e.a.color,"stroke");return t.createElement(t.Fragment,null,t.createElement(o,Object.assign({ref:d,name:"element",id:e.id,x:e.a.x,y:e.a.y,points:[0,0,e.a.width,0],offsetY:-e.a.height/2,strokeWidth:e.a.height,hitStrokeWidth:Math.max(e.a.height,20),dash:e.dash.map(t=>t*e.a.height)},b,{rotation:e.a.rotation,opacity:e.animated("opacity"),shadowEnabled:e.shadowEnabled,shadowBlur:e.shadowBlur,shadowOffsetX:e.shadowOffsetX,shadowOffsetY:e.shadowOffsetY,shadowColor:e.shadowColor,shadowOpacity:e.shadowOpacity,listening:y,draggable:p?e.draggable&&E:e.draggable,preventDefault:!p||E,hideInExport:!e.showInExport,onDragMove:t=>{e.set({x:t.target.x(),y:t.target.y()})},onDragEnd:t=>{e.set({x:t.target.x(),y:t.target.y()})},onTransform:t=>{const a=t.target.scaleX();t.target.scaleX(1),t.target.scaleY(1),e.set({height:e.height*a,width:e.width*a,x:t.target.x(),y:t.target.y(),rotation:t.target.rotation()})}})),t.createElement(a,{x:u.x,y:u.y,rotation:e.rotation,hideInExport:!e.showInExport},t.createElement(c,{element:e,type:e.startHead})),t.createElement(a,{x:w.x,y:w.y,rotation:e.rotation+180},t.createElement(c,{element:e,type:e.endHead})),f&&e.resizable&&t.createElement(s,{selector:".page-abs-container",enabled:!0},t.createElement(a,{visible:f},t.createElement(i,Object.assign({x:u.x,y:u.y,ref:m,name:"line-anchor"},g(n.scale,n),{onDragMove:t=>{const a=getLinePositionFromMiddlePoints(t.target.position(),w,e.height);e.set({x:a.x,y:a.y,width:a.width,rotation:a.rotation})}})),t.createElement(i,Object.assign({x:w.x,y:w.y,ref:x,name:"line-anchor"},g(n.scale,n),{onDragMove:t=>{const a=getLinePositionFromMiddlePoints(u,t.target.position(),e.height);e.set({x:a.x,y:a.y,width:a.width,rotation:a.rotation})}})))))});