import{types as e,getParentOfType as t,getSnapshot as o,hasParentOfType as r}from"mobx-state-tree";import{nanoid as n}from"nanoid";import{Store as s}from"./store.js";import{Page as i}from"./page-model.js";import{GroupElement as a,forEveryChild as m}from"./group-model.js";export const Node=e.model("Node",{id:e.identifier,type:"none",name:"",opacity:1,custom:e.frozen(),visible:!0,selectable:!0,removable:!0,alwaysOnTop:!1,showInExport:!0}).preProcessSnapshot(e=>{for(var t in e){null===e[t]&&(e[t]=void 0)}return e}).postProcessSnapshot(e=>{const t=Object.assign({},e),o={};for(var r in t){"_"!==r[0]&&(o[r]=e[r])}return o}).views(e=>({get locked(){return!(e.draggable||e.contentEditable||e.styleEditable||e.resizable)},get page(){return t(e,i)},get store(){return t(e,s)},get top(){let o=e;for(;;){if(!r(o,a)){return o}o=t(o,a)}},get parent(){return r(e,a)?t(e,a):r(e,i)?t(e,i):r(e,s)?t(e,s):null},get zIndex(){return e.parent.children.indexOf(e)}})).actions(e=>({toJSON:()=>Object.assign({},o(e))})).actions(e=>({clone(t={},{skipSelect:o=!1}={}){const r=JSON.parse(JSON.stringify(e.toJSON()));return t.id=t.id||n(10),m(r,e=>{e.id=n(10)}),Object.assign(r,t),e.page.addElement(r,{skipSelect:o})},set(t){Object.assign(e,t)},moveUp(){e.page.moveElementsUp([e.id])},moveTop(){e.page.moveElementsTop([e.id])},moveDown(){e.page.moveElementsDown([e.id])},moveBottom(){e.page.moveElementsBottom([e.id])},setZIndex(t){e.parent.setElementZIndex(e.id,t)},beforeDestroy(){}}));