import{types as t}from"mobx-state-tree";import{animate as e}from"../utils/animations.js";import{observable as i,action as n}from"mobx";import{Node as o}from"./node-model.js";export const Animation=t.model("Animation",{delay:0,duration:500,enabled:!0,type:t.enumeration("Type",["enter","exit","loop"]),name:"none",data:t.frozen({})});export const getDiff=(t,e)=>{const i={};for(const n in e){if("number"==typeof t[n]&&"number"==typeof e[n]){const o=e[n]-t[n];0!==o&&(i[n]=o)}}return i};export const ShapeFilter=t.model("ShapeFilter",{intensity:1});export const INDEPENDENT_FILTERS=["temperature","contrast","highlights","shadows","white","black","saturation","vibrance"];export const Shape=o.named("Shape").props({x:0,y:0,width:100,height:100,rotation:0,opacity:1,animations:t.array(Animation),blurEnabled:!1,blurRadius:10,brightnessEnabled:!1,brightness:0,sepiaEnabled:!1,grayscaleEnabled:!1,filters:t.map(ShapeFilter),shadowEnabled:!1,shadowBlur:5,shadowOffsetX:0,shadowOffsetY:0,shadowColor:"black",shadowOpacity:1,visible:!0,draggable:!0,resizable:!0,selectable:!0,contentEditable:!0,styleEditable:!0,alwaysOnTop:!1,showInExport:!0}).preProcessSnapshot(t=>{const e=Object.assign(Object.assign({},t),{x:t.x||0,y:t.y||0,filters:Array.isArray(t.filters)?{}:t.filters});return"width"in t&&(e.width=e.width||1),"height"in t&&(e.height=e.height||1),t.locked&&(e.draggable=!1,e.contentEditable=!1,e.styleEditable=!1,e.resizable=!1,e.removable=!1),e}).views(t=>{const o=i({x:t.x,y:t.y,width:t.width,height:t.height,rotation:t.rotation,opacity:t.opacity,color:t.color,fontSize:t.fontSize}),a=n(t=>{Object.assign(o,t)}),r=n(t=>{for(const e in t){"number"==typeof o[e]&&(o[e]=o[e]+t[e])}});return{get a(){const{currentTime:i}=t.store;if(a({x:t.x,y:t.y,width:t.width,height:t.height,rotation:t.rotation,opacity:t.opacity,color:t.color,fontSize:t.fontSize,cropX:t.cropX,cropY:t.cropY,cropWidth:t.cropWidth,cropHeight:t.cropHeight}),0===i){return o}const n=i-t.page.startTime;if(n>t.page.duration){return o}if(n<0){return o}const s=t.store.animatedElementsIds;if(s.length&&!s.includes(t.id)){return o}const l=t.animations.find(t=>"enter"===t.type),d=(null==l?void 0:l.enabled)&&n<l.delay;d&&a({opacity:0});const c=(null==l?void 0:l.enabled)&&n>=l.delay&&n<=l.delay+l.duration;if(c){const i=n-l.delay,o=e({element:t,animation:l,dTime:i}),a=getDiff(t,o);r(a)}const p=t.animations.find(t=>"exit"===t.type);if(!d&&!c&&(null==p?void 0:p.enabled)&&n>=t.page.duration-p.duration-p.delay&&n<=t.page.duration-p.delay){const i=n-(t.page.duration-p.duration-p.delay),o=e({element:t,animation:p,dTime:i}),a=getDiff(t,o);r(a)}(null==p?void 0:p.enabled)&&n>=t.page.duration-p.delay&&a({opacity:0});const h=t.animations.find(t=>"loop"===t.type);if(null==h?void 0:h.enabled){const i=e({element:t,animation:h,dTime:n}),o=getDiff(t,i);r(o)}return o},animated:e=>t.a[e]}}).actions(t=>({setAnimation(e,i){const n=t.animations.find(t=>t.type===e);n?Object.assign(n,i):t.animations.push(Object.assign({type:e},i))},setFilter(e,i){INDEPENDENT_FILTERS.includes(e)||t.filters.forEach((e,i)=>{INDEPENDENT_FILTERS.includes(i.toString())||t.filters.delete(i.toString())}),null==i?t.filters.delete(e):t.filters.set(e,{intensity:i})}}));