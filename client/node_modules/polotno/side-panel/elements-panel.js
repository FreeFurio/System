import e from"react";import{isAlive as t}from"mobx-state-tree";import{InputGroup as r}from"@blueprintjs/core";import{Search as i}from"@blueprintjs/icons";import{ImagesGrid as o}from"./images-grid.js";import{svgToURL as a}from"../utils/svg.js";import{figureToSvg as s,TYPES as n}from"../utils/figure-to-svg.js";import d from"../utils/styled.js";import{t as l}from"../utils/l10n.js";import{useInfiniteAPI as c}from"../utils/use-api.js";import{URLS as h}from"../utils/api.js";const p=async e=>{const t=await fetch(h.nounProjectDownload(e)),r=await t.text();return await a(r)},g=d("div")`
  height: 100%;
  overflow: hidden;

  .bp5-dark & img {
    filter: invert(1);
  }
`;export const NounprojectPanel=({store:r,query:i})=>{const{data:a,isLoading:s,loadMore:n,setQuery:d,hasMore:l}=c({defaultQuery:i,getAPI:({page:e,query:t})=>h.nounProjectList({query:t,page:e,limit:50}),getSize:e=>e.pagesNumber});return e.useEffect(()=>{d(i)},[i]),e.createElement(g,null,e.createElement(o,{shadowEnabled:!1,images:null==a?void 0:a.map(e=>e.icons).flat(),getPreview:e=>e.preview_url_84,isLoading:s,onSelect:async(e,i,o)=>{if(o&&"image"===o.type&&o.contentEditable){const t=await p(e.id);return void o.set({clipSrc:t})}if(o&&"video"===o.type&&o.contentEditable){const t=await p(e.id);return void o.set({clipSrc:t})}r.history.transaction(async()=>{var o;const a=((null==i?void 0:i.x)||r.width/2)-100,s=((null==i?void 0:i.y)||r.height/2)-100,n=null===(o=r.activePage)||void 0===o?void 0:o.addElement({type:"svg",width:200,height:200,x:a,y:s}),d=await p(e.id);t(n)&&await n.set({src:d})})},rowsNumber:4,loadMore:l&&n}))};const u=[{preview:a`
<svg xmlns="http://www.w3.org/2000/svg" width="32" height="16">
  <path stroke="#C0BFBF" strokeWidth="4" d="M 1 8 L 30 8"></path>
</svg>
`,data:{}},{preview:a`
<svg xmlns="http://www.w3.org/2000/svg" width="32" height="16">
  <path stroke="#C0BFBF" strokeWidth="4" stroke-dasharray="4 2" d="M 1 8 L 30 8"></path>
</svg>
`,data:{dash:[4,2]}},{preview:a`
<svg xmlns="http://www.w3.org/2000/svg" width="32" height="16">
  <path stroke="#C0BFBF" strokeWidth="4" stroke-dasharray="1 1" d="M 1 8 L 30 8"></path>
</svg>
`,data:{dash:[1,1]}},{preview:a`
    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="16">
    <path
      stroke="#C0BFBF"
      strokeWidth="2"
      d="M 25 6 L 29 8 L 25 10"
      fill="none"
      strokeLinejoin="round"
      strokeLinecap="round"
    ></path>
    <path
      stroke="#C0BFBF"
      strokeWidth="4" d="M 1 8 L 29 8"
      strokeLinejoin="round"
      strokeLinecap="round"
    ></path>
  </svg>
`,data:{endHead:"arrow"}},{preview:a`
    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="16">
    <path
      stroke="#C0BFBF"
      strokeWidth="2"
      d="M 25 6 L 29 8 L 25 10 Z"
      fill="#C0BFBF"
      strokeLinejoin="round"
      strokeLinecap="round"
    ></path>
    <path
      stroke="#C0BFBF"
      strokeWidth="4" d="M 1 8 L 29 8"
      strokeLinejoin="round"
      strokeLinecap="round"
    ></path>
    <circle cx="3" cy="8" r="2" fill="#C0BFBF"></circle>
  </svg>
`,data:{startHead:"circle",endHead:"triangle"}},{preview:a`
    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="16">
    <path
      stroke="#C0BFBF"
      strokeWidth="2"
      d="M 1 6 L 5 6 L 5 10 L 1 10 Z"
      fill="#C0BFBF"
      strokeLinejoin="round"
      strokeLinecap="round"
    ></path>
    <path
      stroke="#C0BFBF"
      strokeWidth="4" d="M 1 8 L 29 8"
      strokeLinejoin="round"
      strokeLinecap="round"
      stroke-dasharray="2 1"
    ></path>
    <path
      stroke="#C0BFBF"
      strokeWidth="4" d="M 29 6 L 29 10"
      strokeLinejoin="round"
      strokeLinecap="round"
    ></path>
  </svg>
`,data:{startHead:"square",endHead:"bar",dash:[2,1]}}];let m="rgba(191, 191, 191, 100)";export const setDefaultColor=e=>{m=e};const v=({store:t})=>e.createElement(o,{shadowEnabled:!1,rowsNumber:3,images:u,getPreview:e=>e.preview,itemHeight:50,isLoading:!1,onSelect:async(e,r,i)=>{const o=t.activePage.computedWidth/3;t.activePage.addElement(Object.assign({type:"line",x:r?r.x:t.activePage.computedWidth/2-o/2,y:r?r.y:t.activePage.computedHeight/2,color:m,width:o},e.data))}}),w=Object.keys(n),f=[{width:300,height:300,fill:"rgba(191, 191, 191, 100)",stroke:"#0c0c0c",strokeWidth:0,url:""}],k=[];w.forEach(e=>{f.forEach(t=>{k.push(Object.assign({subType:e},t))})}),k.forEach(e=>{e.url=a(s(e))});const y=d("div")`
  height: 220px;
`,L=({store:t})=>{const r=Math.ceil(k.length/4)||1;return e.createElement(y,{style:{height:110*r+"px"}},e.createElement(o,{shadowEnabled:!1,rowsNumber:4,images:k,getPreview:e=>e.url,isLoading:!1,itemHeight:100,onSelect:async(e,r,i)=>{var o;if(i&&"image"===i.type&&i.contentEditable){return void i.set({clipSrc:e.url})}if(i&&"video"===i.type&&i.contentEditable){return void i.set({clipSrc:e.url})}const a=(t.activePage.computedWidth+t.activePage.computedHeight)/2160,s=e.width*a,n=e.height*a,d=((null==r?void 0:r.x)||t.activePage.computedWidth/2)-s/2,l=((null==r?void 0:r.y)||t.activePage.computedHeight/2)-n/2;null===(o=t.activePage)||void 0===o||o.addElement(Object.assign(Object.assign({type:"figure"},e),{x:d,y:l,width:s,height:n,fill:m}))}}))},E=d("div")`
  height: 220px;
`;export const Shapes=({store:t})=>e.createElement("div",{style:{display:"flex",flexDirection:"column",height:"100%",overflow:"auto"}},e.createElement("p",null,l("sidePanel.lines")),e.createElement(E,null,e.createElement(v,{store:t})),e.createElement("p",null,l("sidePanel.shapes")),e.createElement(L,{store:t}));export const ElementsPanel=({store:t})=>{const o=e.useRef(),[a,s]=e.useState(""),[n,d]=e.useState(a);e.useEffect(()=>(o.current=setTimeout(()=>{d(a)},500),()=>{clearTimeout(o.current)}),[a]);const c=!!n;return e.createElement("div",{style:{height:"100%",display:"flex",flexDirection:"column"}},e.createElement(r,{leftIcon:e.createElement(i,null),placeholder:l("sidePanel.searchPlaceholder"),onChange:e=>{s(e.target.value)},style:{marginBottom:"20px"},type:"search"}),c&&e.createElement(NounprojectPanel,{query:n,store:t}),!c&&e.createElement(Shapes,{store:t}))};