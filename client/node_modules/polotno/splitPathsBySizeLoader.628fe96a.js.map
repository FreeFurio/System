{"mappings":"I,E,E,C,E,C,E,A,W,iB,E,Q,E,Q,S,C,C,C,E,O,c,C,E,O,C,yB,C,I,I,E,I,K,E,W,C,E,a,C,C,GEcG,IAAA,EAAA,EAAA,S,E,E,S,E,E,SAYU,EAA0C,SAAO,CAAI,CAAE,CAAI,EAAxE,MAAA,AAAA,CAAA,EAAA,EAAA,SAAA,AAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,W,I,E,E,M,A,C,E,E,W,A,E,I,C,S,C,E,O,E,K,E,K,EAIQ,GAHE,EAAM,AAAA,CAAA,EAAA,EAAA,UAAA,AAAA,EAAW,GAGnB,IAAS,AAAA,EAAA,QAAA,CAAS,QAAA,CAAlB,MAAA,CAAA,EAAA,EAAA,CACc,MAAA,CAAA,EAAM,EAAA,SAGnB,A,M,E,OAHD,EAAc,EAAA,IAAA,G,C,E,E,AAKA,MAAA,EAAA,MAAA,CAAA,EAAM,EAAA,SAGnB,A,M,EAHD,EAAc,EAAA,IAAA,G,E,K,C,CAMlB,MAAA,EAAA,MAAA,CAAA,EAAO,CAAW,CAAC,EAAI,CAAA,A,C,EAC1B,EAAA,C,G,E,Q,S,C,C,C,EC3CD,EAAA,OAAA,CAAkB,AAAA,EAAA,SAAuC,AAAA,EAAA,SAAA,OAAA,CAA6C,UAAW,IAAI,CAAC,IAAM,EAAc,S,G,E,Q,S,C,C,C,ECA1I,EAAA,OAAA,CAAkB,AAAA,EAAA,SAAuC,AAAA,EAAA,SAAA,OAAA,CAA6C,UAAW,IAAI,CAAC,IAAM,EAAc,S","sources":["<anon>","node_modules/@blueprintjs/icons/lib/esm/paths-loaders/splitPathsBySizeLoader.js","node_modules/@blueprintjs/icons/src/paths-loaders/splitPathsBySizeLoader.ts","node_modules/@parcel/runtime-js/lib/runtime-070efae507a67add.js","node_modules/@parcel/runtime-js/lib/runtime-5066f19db35e7a04.js"],"sourcesContent":["(() => {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"igKPH\", function(module, exports) {\n\n$parcel$export(module.exports, \"splitPathsBySizeLoader\", () => $d4ce0ca9183abc81$export$c977b52d171987bb);\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ \nvar $gztBd = parcelRequire(\"gztBd\");\n\nvar $704DA = parcelRequire(\"704DA\");\n\nvar $leH9B = parcelRequire(\"leH9B\");\n\n\nvar $d4ce0ca9183abc81$export$c977b52d171987bb = function(name, size) {\n    return (0, $gztBd.__awaiter)(void 0, void 0, void 0, function() {\n        var key, pathsRecord;\n        return (0, $gztBd.__generator)(this, function(_a) {\n            switch(_a.label){\n                case 0:\n                    key = (0, $704DA.pascalCase)(name);\n                    if (!(size === (0, $leH9B.IconSize).STANDARD)) return [\n                        3 /*break*/ ,\n                        2\n                    ];\n                    return [\n                        4 /*yield*/ ,\n                        (parcelRequire(\"gkAjY\"))\n                    ];\n                case 1:\n                    pathsRecord = _a.sent();\n                    return [\n                        3 /*break*/ ,\n                        4\n                    ];\n                case 2:\n                    return [\n                        4 /*yield*/ ,\n                        (parcelRequire(\"acBRE\"))\n                    ];\n                case 3:\n                    pathsRecord = _a.sent();\n                    _a.label = 4;\n                case 4:\n                    return [\n                        2 /*return*/ ,\n                        pathsRecord[key]\n                    ];\n            }\n        });\n    });\n};\n\n});\nparcelRegister(\"gkAjY\", function(module, exports) {\n\n\nmodule.exports = (parcelRequire(\"dNLwc\"))((parcelRequire(\"kI8SP\")).resolve(\"5Jk1P\")).then(()=>parcelRequire('lyZPJ'));\n\n});\n\nparcelRegister(\"acBRE\", function(module, exports) {\n\n\nmodule.exports = (parcelRequire(\"dNLwc\"))((parcelRequire(\"kI8SP\")).resolve(\"2qcgR\")).then(()=>parcelRequire('adNjr'));\n\n});\n\n\n})();\n//# sourceMappingURL=splitPathsBySizeLoader.628fe96a.js.map\n","/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __awaiter, __generator } from \"tslib\";\nimport { pascalCase } from \"change-case\";\nimport { IconSize } from \"../iconTypes\";\n/**\n * A dynamic loader for icon paths that generates separate chunks for the two size variants.\n */\nexport var splitPathsBySizeLoader = function (name, size) { return __awaiter(void 0, void 0, void 0, function () {\n    var key, pathsRecord;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                key = pascalCase(name);\n                if (!(size === IconSize.STANDARD)) return [3 /*break*/, 2];\n                return [4 /*yield*/, import(\n                    /* webpackChunkName: \"blueprint-icons-16px-paths\" */\n                    \"../generated/16px/paths\")];\n            case 1:\n                pathsRecord = _a.sent();\n                return [3 /*break*/, 4];\n            case 2: return [4 /*yield*/, import(\n                /* webpackChunkName: \"blueprint-icons-20px-paths\" */\n                \"../generated/20px/paths\")];\n            case 3:\n                pathsRecord = _a.sent();\n                _a.label = 4;\n            case 4: return [2 /*return*/, pathsRecord[key]];\n        }\n    });\n}); };\n//# sourceMappingURL=splitPathsBySizeLoader.js.map","/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { pascalCase } from \"change-case\";\n\nimport type { IconPathsLoader } from \"../iconLoader\";\nimport type { IconName } from \"../iconNames\";\nimport { type IconPaths, IconSize } from \"../iconTypes\";\nimport type { PascalCase } from \"../type-utils\";\n\n/**\n * A dynamic loader for icon paths that generates separate chunks for the two size variants.\n */\nexport const splitPathsBySizeLoader: IconPathsLoader = async (name, size) => {\n    const key = pascalCase(name) as PascalCase<IconName>;\n    let pathsRecord: Record<PascalCase<IconName>, IconPaths>;\n\n    if (size === IconSize.STANDARD) {\n        pathsRecord = await import(\n            /* webpackChunkName: \"blueprint-icons-16px-paths\" */\n            \"../generated/16px/paths\"\n        );\n    } else {\n        pathsRecord = await import(\n            /* webpackChunkName: \"blueprint-icons-20px-paths\" */\n            \"../generated/20px/paths\"\n        );\n    }\n\n    return pathsRecord[key];\n};\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-manifest').resolve(\"5Jk1P\"))).then(() => parcelRequire('lyZPJ'));","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-manifest').resolve(\"2qcgR\"))).then(() => parcelRequire('adNjr'));"],"names":["parcelRequire","parcelRegister","$parcel$global","globalThis","register","module","exports","Object","defineProperty","get","$d4ce0ca9183abc81$export$c977b52d171987bb","set","s","enumerable","configurable","$gztBd","$704DA","$leH9B","name","size","__awaiter","key","pathsRecord","__generator","_a","label","pascalCase","IconSize","STANDARD","sent","resolve","then"],"version":3,"file":"splitPathsBySizeLoader.628fe96a.js.map"}