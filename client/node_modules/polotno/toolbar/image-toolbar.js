import e from"react";import{observer as t}from"mobx-react-lite";import{Button as o,Navbar as r,Tooltip as n}from"@blueprintjs/core";import{ElementContainer as m,extendToolbar as i}from"./element-container.js";import{Crop as l,Tick as a,Cross as c}from"@blueprintjs/icons";import p from"./filters-picker.js";import{AnimationsPicker as s}from"./animations-picker.js";import g from"./flip-button.js";import{flags as u}from"../utils/flags.js";import{ImageRemoveBackground as d}from"./image-remove-background-button.js";export{ImageRemoveBackground}from"./image-remove-background-button.js";import{getCrop as b,getImageSize as C}from"../utils/image.js";import{t as E}from"../utils/l10n.js";export const ImageFitToBackground=({element:t})=>e.createElement(o,{text:E("toolbar.fitToBackground"),minimal:!0,onClick:async()=>{const{page:e}=t,o=e.computedWidth+2*e.bleed,r=e.computedHeight+2*e.bleed,n=await C(t.src),m=t.stretchEnabled?{cropX:0,cropY:0,cropWidth:1,cropHeight:1}:b({width:o,height:r},n);t.set(Object.assign({x:-e.bleed,y:-e.bleed,width:o,height:r,rotation:0},m))}});export const ImageClip=t(({element:t,store:r,elements:n})=>t.contentEditable?t.clipSrc?e.createElement(o,{text:E("toolbar.removeClip"),minimal:!0,onClickCapture:e=>{n.forEach(e=>{e.set({clipSrc:""})})}}):e.createElement(o,{minimal:!0,text:E("toolbar.clip"),onClickCapture:e=>{e.stopPropagation(),r.openSidePanel("image-clip")}}):null);export const ImageCrop=t(({element:t,store:r})=>t.contentEditable?t.stretchEnabled?null:e.createElement(n,{content:E("toolbar.crop"),position:"bottom"},e.createElement(o,{minimal:!0,icon:e.createElement(l,null),onClickCapture:e=>{e.stopPropagation(),t.toggleCropMode(!0)}})):null);export const ImageRemoveClip=t(({element:t,store:r})=>t.clipSrc?e.createElement(o,{text:E("toolbar.removeClip"),minimal:!0,onClickCapture:e=>{t.set({clipSrc:""})}}):null);const I={ImageFlip:g,ImageFilters:p,ImageFitToBackground,ImageCrop,ImageClip,ImageRemoveBackground:d,ImageAnimations:s};export const ImageToolbar=t(({store:t,components:n})=>{const l=t.selectedElements[0],p=l._cropModeEnabled,s=e.useRef({});e.useEffect(()=>{p&&(s.current={x:l.x,y:l.y,width:l.width,height:l.height,cropX:l.cropX,cropY:l.cropY,cropWidth:l.cropWidth,cropHeight:l.cropHeight})},[p]);const g=["ImageFlip","ImageFilters","ImageFitToBackground","ImageClip","ImageCrop",u.animationsEnabled&&"ImageAnimations",u.removeBackgroundEnabled&&"ImageRemoveBackground"],d=i({type:"image",usedItems:g,components:n});return e.createElement(e.Fragment,null,!p&&e.createElement(m,{items:d,itemRender:o=>{const r=n[o]||I[o];return e.createElement(r,{element:l,store:t,key:o,elements:t.selectedElements})}}),p&&e.createElement(r.Group,null,e.createElement(o,{text:E("toolbar.cropDone"),minimal:!0,icon:e.createElement(a,null),onClickCapture:e=>{l.toggleCropMode(!1)}}),e.createElement(o,{text:E("toolbar.cropCancel"),minimal:!0,icon:e.createElement(c,null),onClickCapture:e=>{l.set(Object.assign({},s.current)),l.toggleCropMode(!1)}})))});export default ImageToolbar;