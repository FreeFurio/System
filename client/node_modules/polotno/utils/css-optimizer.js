import{removeTags as t}from"./text.js";export function optimizeCss(e,i){if(!e.includes("@font-face")){return""}const s=new Set,n=new Set;i&&((i.match(/font-weight:\s*(\d+|bold|normal)/gi)||[]).forEach(t=>{const e=t.split(":")[1].trim();"bold"===e?s.add("700"):"normal"===e?s.add("400"):/^\d+$/.test(e)&&s.add(e)}),(i.match(/font-style:\s*(italic|normal)/gi)||[]).forEach(t=>{"italic"===t.split(":")[1].trim().toLowerCase()&&n.add("italic")}),/<(b|strong)\b/i.test(i)&&s.add("700"),/<(i|em)\b/i.test(i)&&n.add("italic"));const o=t(i);o&&o.trim()&&s.add("400"),0===s.size&&s.add("400");const a=s,r=n.has("italic"),c=Array.from(new Set(o)).map(t=>t.codePointAt(0)).filter(t=>void 0!==t),d=e.split(/}\s*/).map(t=>t&&t+"}").filter(t=>/@font-face/.test(t)&&(t=>{const e=(t.match(/font-weight:\s*(\d+)/)||[])[1];if(e&&!a.has(e)){return!1}if(/font-style:\s*italic/.test(t)&&!r){return!1}const i=t.match(/unicode-range:\s*([^;]+);/);if(!i){return!0}const s=i[1].split(",").map(t=>{const[e,i=e]=t.replace("U+","").split("-").map(t=>parseInt(t,16));return[e,i]});return c.some(t=>s.some(([e,i])=>t>=e&&t<=i))})(t)).join("\n");return d?`<style>${d}</style>`:""}