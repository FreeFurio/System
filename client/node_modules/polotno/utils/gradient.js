import o from"gradient-parser";export const isGradient=o=>o.indexOf("linear-gradient")>=0;const t=o=>"hex"===o.type?"#"+o.value:"literal"===o.type?o.value:`${o.type}(${o.value.join(",")})`;export const parseColor=e=>{if(!isGradient(e)){return{rotation:0,stops:[{offset:0,color:e},{offset:1,color:e}]}}const r=o.parse(e)[0];return{rotation:parseFloat(r.orientation.value),stops:r.colorStops.map((o,e)=>({color:t(o),offset:o.length?parseFloat(o.length.value)/100:e/(r.colorStops.length-1)}))}};