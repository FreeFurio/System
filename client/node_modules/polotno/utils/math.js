export function degToRad(t){return t/180*Math.PI}function t(t,n,a,e,o){const i=Math.sqrt(a*a+e*e);return o+=Math.atan2(e,a),{x:t+i*Math.cos(o),y:n+i*Math.sin(o)}}export function getClientRect(n){const{x:a,y:e,width:o,height:i}=n,h=degToRad(n.rotation),x=t(a,e,0,0,h),r=t(a,e,o,0,h),m=t(a,e,o,i,h),c=t(a,e,0,i,h),M=Math.min(x.x,r.x,m.x,c.x),s=Math.min(x.y,r.y,m.y,c.y),y=Math.max(x.x,r.x,m.x,c.x),u=Math.max(x.y,r.y,m.y,c.y);return{x:M,y:s,width:y-M,height:u-s,minX:M,minY:s,maxX:y,maxY:u}}export function getTotalClientRect(t){const n=t.map(t=>getClientRect(t)),a=Math.min(...n.map(t=>t.minX)),e=Math.min(...n.map(t=>t.minY)),o=Math.max(...n.map(t=>t.maxX)),i=Math.max(...n.map(t=>t.maxY));return{x:a,y:e,width:o-a,height:i-e,minX:a,minY:e,maxX:o,maxY:i}}export function getCenter(t){const n=degToRad(t.rotation||0);return{x:t.x+t.width/2*Math.cos(n)+t.height/2*Math.sin(-n),y:t.y+t.height/2*Math.cos(n)+t.width/2*Math.sin(n)}}export function rotateAroundPoint(t,n,a){const e=degToRad(n),o=a.x+(t.x-a.x)*Math.cos(e)-(t.y-a.y)*Math.sin(e),i=a.y+(t.x-a.x)*Math.sin(e)+(t.y-a.y)*Math.cos(e);return Object.assign(Object.assign({},t),{rotation:t.rotation+n,x:o,y:i})}export function rotateAroundCenter(t,n){return rotateAroundPoint(t,n,getCenter(t))}